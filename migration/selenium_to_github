<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head profile="http://selenium-ide.openqa.org/profiles/test-case">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="selenium.base" href="https://github.com/" />
<title>selenium</title>
</head>
<body>
<table cellpadding="1" cellspacing="1" border="1">
<thead>
<tr><td rowspan="1" colspan="3">selenium</td></tr>
</thead><tbody>
<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>.bss</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*关于.bss区的说明，参看[[参考文献|参考文献之 UNIX Assembler Reference Manual ]]
=说明=
* . = .+n 
**用于申请.bss区 长度为n字节 的空间
*.bss区变量压栈时会压入两个字
**例如&lt;div class="wikicode"&gt;1267 [[pdp11:MOV|mov]] nofault,-(sp)&lt;/div&gt;&lt;br/&gt;会在栈内连续压入双字
**以上结论 经过 [[Pdp11虚拟机]] 实验验证
**原理并不清楚，列入[[遗留问题]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page .bss by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:0723 ~ 0750</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0723&nbsp;/* ------------------------- */ &lt;br/&gt;
0724&nbsp;.globl     _savu, _retu, _aretu &lt;br/&gt;
&lt;div class="wikinote"&gt;
savu
*保存 sp(栈顶指针) 和 R5(环境指针) 到指定位置
*共传入一个参数 设为 sav
**sav : 用于保存 sp 和 R5 的位置
&lt;/div&gt;
0725&nbsp;_savu: &lt;br/&gt;
0726&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
&lt;/div&gt;
0727&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r1 &lt;br/&gt;
0728&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp),r0 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*R1 ← 函数返回地址
*R1 ← sav
&lt;/div&gt;
0729&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     sp,(r0)+ &lt;br/&gt;
0730&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r5,(r0)+ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*sav ← sp 和 r5
&lt;/div&gt;
0731&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $340,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
0732&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JMP|jmp]]     (r1) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*函数返回
&lt;/div&gt;
0733 &lt;br/&gt;
&lt;div class="wikinote"&gt;
aretu , retu
*aretu 和 retu 都将 保存的sp和R5的值 还原
*不同的是，aretu 从输入参数中还原，而retu直接从指定进程(参数为指定进程的user地址)的[[code:user|u.usav]]中还原
&lt;/div&gt;
0734&nbsp;_aretu: &lt;br/&gt;
0735&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
&lt;/div&gt;
0736&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r1 &lt;br/&gt;
0737&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp),r0 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*函数返回地址 → R1
*参数 → R0
&lt;/div&gt;
0738&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] 1f &lt;br/&gt;
&lt;div class="wikinote"&gt;
*转到 0745
&lt;/div&gt;
0739 &lt;br/&gt;
0740&nbsp;_retu: &lt;br/&gt;
0741&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
&lt;/div&gt;
0742&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r1 &lt;br/&gt;
0743&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp),KISA6&lt;br/&gt;
&lt;div class="wikinote"&gt;
*函数返回地址 → R1
*参数 → KISA6，（参看[[KISA6寻址]]）
*注:&lt;br/&gt;LIONS源代码为&lt;div class="wikiheadcode"&gt;0743 [[pdp11:MOV|mov]] (sp),r0&lt;/div&gt;为笔误
&lt;/div&gt;
0744&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $_u,r0 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 [[code:user|user结构u]]地址 → R0
*[[code:user|user]] 开始地址 为usav,所以0746 - 0747从[[code:user|u.usav]]还原 sp,R5
**关于为什么能寻址到 指定进程的[[code:user|user结构]]，参看 [[KISA6寻址]]
&lt;/div&gt;
0745&nbsp;1: &lt;br/&gt;
0746&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (r0)+,sp &lt;br/&gt;
0747&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (r0)+,r5 &lt;br/&gt;
0748&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $340,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
0749&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JMP|jmp]]     (r1) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*函数返回
&lt;/div&gt;
0750 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:newproc]]
*[[code:sleep]]
*[[code:swtch]]
*[[code:expand]]
*[[code:trap1]]
*[[code:xalloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:0723 - 0750 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:0751 ~ 0805</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*trap:
*汇编版陷入处理函数,用以进行一些初步处理,然后调用[[code:trap|C语言版陷入处理函数]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0750&lt;br/&gt;
0751&nbsp;/* -------------------------   */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*初始时候的堆栈状态
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_0751_stack_1.png"/></p>
&lt;/div&gt;
0752&nbsp;.globl     trap, call&lt;br/&gt;
0753&nbsp;/* -------------------------   */&lt;br/&gt;
0754&nbsp;.globl     _trap&lt;br/&gt;
0755&nbsp;[[pdp11:TRAP|trap]]:&lt;br/&gt;
0756&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     PS,-4(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将新PS字入栈
**注:入栈位置比较诡异,不是直接放在栈顶,而是空开了一个位置,这个位置是留给R0的,后面可以看到
&lt;/div&gt;
0757&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TST|tst]]     [[code:nofault|nofault]]&lt;br/&gt;
0758&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     1f&lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处检测是否有错误
**若出错,跳转至0764行,进行出错处理
&lt;/div&gt;
0759&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:SSR|SSR0]],ssr&lt;br/&gt;
0760&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:SSR|SSR2]],ssr+4&lt;br/&gt;
0761&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $1,[[code:SSR|SSR0]]&lt;br/&gt;
0762&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     r0,call1; _trap&lt;br/&gt;
&lt;div&gt;
&lt;div class="wikinote"&gt;
*若没有出错
**将[[code:SSR|SSR0]]与[[code:SSR|SSR2]]寄存器当前的值保护进系统的bss区
**重新初始化[[code:SSR|SSR0]],开启地址保护
**R0入栈(与756行的注释对应)
**进入call1进行进一步处理(0771)
**[[code:trap|trap]] 函数入口 在 0785 被使用
&lt;/div&gt;
&lt;/div&gt;
0763&nbsp;&nbsp;&nbsp;&nbsp;/ no return&lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下为出错处理:
**重新初始化[[code:SSR|SSR0]],开启地址保护
**将[[code:nofault|nofault]]替换原pc的值
**返回到错误处理函数
&lt;/div&gt;
0764&nbsp;1:&lt;br/&gt;
0765&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $1,SSR0&lt;br/&gt;
0766&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:nofault|nofault]],(sp)&lt;br/&gt;
0767&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTT|rtt]]&lt;br/&gt;
0768&lt;br/&gt;
&lt;/div&gt;
&lt;div class="wikiheadnote"&gt;
*call1:
*针对陷入的部分处理
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0769&nbsp;/* -------------------------*/&lt;br/&gt;
0770&nbsp;.globl     _runrun, _swtch&lt;br/&gt;
0771&nbsp;call1:&lt;br/&gt;
0772&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TST|tst]]     -(sp)&lt;br/&gt;
0773&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $340,PS&lt;br/&gt;
0774&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]]			1f&lt;br/&gt;
&lt;div class="wikinote"&gt;
*栈顶指向PS
*[[开中断]]
*跳转至778行
*陷入不执行777行的原因:
**PS已经在上面入过栈了,无需重复入栈
&lt;/div&gt;
0775&lt;br/&gt;
&lt;/div&gt;
&lt;div class="wikiheadnote"&gt;
*call:
*此处是硬中断的处理函数入口
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0776&nbsp;call:&lt;br/&gt;
0777&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     PS,-(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于硬中断,由于没有像陷入那样经过756行的处理,所以需要在此处将新PS入栈
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*778 - 805:
*以下为所有中断(包括硬中断和陷入)的公共处理部分
&lt;/div&gt;
0778&nbsp;1:&lt;br/&gt;
0779&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,-(sp)&lt;br/&gt;
0780&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MFPI|mfpi]]    sp&lt;br/&gt;
0781&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     4(sp),-(sp)&lt;br/&gt;
0782&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!37,(sp)&lt;br/&gt;
0783&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $30000,PS&lt;br/&gt;
0784&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     1f&lt;br/&gt;
&lt;div class="wikinote"&gt;
*R1,(先前态地址空间的)SP,当前PS字的低五位(俗称dev,在[[中断]]处理中用以表明中断类型)入核心栈
*判断先前态为用户态,若为用户态,跳转至797行
*当前堆栈状态
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_0751_stack_2.png"/></p>
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*785 - 796 :对于先前态为用户态的处理
&lt;/div&gt;
0785&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,*(r0)+&lt;br/&gt;
&lt;div class="wikinote"&gt;
*执行中断处理子程序,程序入口地址存放于R0寄存器中
&lt;/div&gt;
0786&nbsp;2:&lt;br/&gt;
0787&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS&lt;br/&gt;
0788&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TSTB|tstb]]    _runrun&lt;br/&gt;
0789&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     2f&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
*看[[code:runrun|runrun]]是否被置
**若没有被置,跳转至793行
&lt;/div&gt;
0790&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $340,PS&lt;br/&gt;
0791&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     ps,[[code:swtch|_swtch]]&lt;br/&gt;
0792&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]]			2b&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若[[code:runrun|runrun]]被置
**[[开中断]]
**进行进程调度
**回到786行,再次检测[[code:runrun|runrun]]标识,构成循环
&lt;/div&gt;
0793&nbsp;2:&lt;br/&gt;
0794&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TST|tst]]     (sp)+&lt;br/&gt;
0795&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MTPI|mtpi]]    sp&lt;br/&gt;
0796&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]]			2f&lt;br/&gt;
&lt;div class="wikinote"&gt;
*dev退栈(被扔了)
*恢复用户态的sp指针
*跳转至801行
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*797 - 800:对于先前态为核心态的处理
&lt;/div&gt;
0797&nbsp;1:&lt;br/&gt;
0798&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $30000,PS&lt;br/&gt;
0799&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,*(r0)+&lt;br/&gt;
0800&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     (sp)+,(sp)+&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将先前态 强制 设置为用户态(中断处理程序 需要 访问用户态数据，将先前态强制置为用户态...)
*执行中断处理子程序,程序入口地址存放于R0寄存器中
*中断处理完成后,将当前栈顶的两个元素dev和sp相继弹出(他们被扔了)
&lt;/div&gt;
0801&nbsp;2:&lt;br/&gt;
0802&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r1&lt;br/&gt;
0803&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TST|tst]]     (sp)+&lt;br/&gt;
0804&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r0&lt;br/&gt;
0805&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTT|rtt]]&lt;br/&gt;
&lt;div class="wikinote"&gt;
*恢复R1
*抛弃nps
*恢复R0
*中断返回
&lt;/div&gt;
&lt;/div&gt;
===Extend===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Main_interupt.png"/></p>

===Ref===
*[[关于汇编函数的说明]]
*[[中断]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:0751 - 0805 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:0806 ~ 0886</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0806&nbsp;/* ------------------------- */ &lt;br/&gt;
0807&nbsp;.globl     _fubyte, _subyte &lt;br/&gt;
0808&nbsp;/* ------------------------- */ &lt;br/&gt;
0809&nbsp;.globl     _fuibyte, _suibyte &lt;br/&gt;
0810&nbsp;/* ------------------------- */ &lt;br/&gt;
0811&nbsp;.globl     _fuword, _suword &lt;br/&gt;
0812&nbsp;/* ------------------------- */ &lt;br/&gt;
0813&nbsp;.globl     _fuiword, _suiword &lt;br/&gt;
&lt;div class="wikinote"&gt;
fubyte&lt;br/&gt;fuibyte
*从[[用户态]]地址空间，读取一个字节
*输入 : 欲读取字节 在对应地址空间的地址
*R0低八位 : 返回读取的字节内容
*若出错，则返回 -1 (由出错处理程序返回)
&lt;/div&gt;
0814&nbsp;_fuibyte: &lt;br/&gt;
0815&nbsp;_fubyte: &lt;br/&gt;
0816&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r1 &lt;br/&gt;
0817&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $1,r1 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*输入参数 存入 R1
*R1 取偶 (末位置0)
&lt;/div&gt;
0818&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,gword &lt;br/&gt;
&lt;div class="wikinote"&gt;
*转入gword(0851)，读取[[用户态]]地址空间中R1指向的字内容，存入R0
&lt;/div&gt;
0819&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r1,2(sp) &lt;br/&gt;
0820&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     1f &lt;br/&gt;
0821&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SWAB|swab]]    r0 &lt;br/&gt;
0822&nbsp;1: &lt;br/&gt;
0823&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!377,r0 &lt;br/&gt;
0824&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 输入参数为偶数，则转入0822，直接取R0低八位返回
*若 输入参数为奇数，要交换高低字节，取R0低八位返回
&lt;/div&gt;
0825 &lt;br/&gt;
&lt;div class="wikinote"&gt;
:subyte
:suibyte
*向[[用户态]]地址空间，写入一个字节
*共输入两个参数 : 设为 addr 和 c
**addr : 写入字节的地址([[用户态]]地址空间)
**c : 欲写入的字节
*返回值
**若出错，则返回 -1 (由出错处理程序返回)
**否则，返回0
&lt;/div&gt;
0826&nbsp;_suibyte: &lt;br/&gt;
0827&nbsp;_subyte: &lt;br/&gt;
0828&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r1 &lt;br/&gt;
0829&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $1,r1 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*输入参数 addr 存入 R1
*R1 取偶 (末位置0)
&lt;/div&gt;
0830&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,gword &lt;br/&gt;
0831&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r0,-(sp) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*转入gword(0851)，读取[[用户态]]地址空间中R1指向的字内容，存入R0
*R0入栈
&lt;/div&gt;
0832&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r1,4(sp) &lt;br/&gt;
0833&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     1f &lt;br/&gt;
0834&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    6(sp),1(sp) &lt;br/&gt;
0835&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] 2f &lt;br/&gt;
0836&nbsp;1: &lt;br/&gt;
0837&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    6(sp),(sp) &lt;br/&gt;
0838&nbsp;2: &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 addr 为 偶数，则 欲写入字节 写入 刚才读出的字 的低字节
*否则，欲写入字节 写入 刚才读出的字 的高字节
&lt;/div&gt;
0839&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r0 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从堆栈恢复R0
*之所以 向堆栈压入R0，再恢复，是因为 需要使用 字节寻址，这样使用比较方便
&lt;/div&gt;
0840&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,pword &lt;br/&gt;
&lt;div class="wikinote"&gt;
*转入pword(0868)，向[[用户态]]地址空间中R1指向的地址，写回 修改后的字
&lt;/div&gt;
0841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     r0 &lt;br/&gt;
0842&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
&lt;div class="wikinote"&gt;
*返回值置0
*正常函数返回
&lt;/div&gt;
0843 &lt;br/&gt;
&lt;div class="wikinote"&gt;
:fuiword
:fuword
*从[[用户态]]地址空间，读取一个字
*输入 : 欲读取字 在对应地址空间的地址
*R0 : 返回读取的字内容
*若出错，则返回 -1 (由出错处理程序返回)
&lt;/div&gt;
0844&nbsp;_fuiword: &lt;br/&gt;
0845&nbsp;_fuword: &lt;br/&gt;
0846&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r1 &lt;br/&gt;
0847&nbsp;fuword: &lt;br/&gt;
0848&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,gword &lt;br/&gt;
0849&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
0850 &lt;br/&gt;
0851&nbsp;gword: &lt;br/&gt;
0852&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     PS,-(sp) &lt;br/&gt;
0853&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*保护[[PS]]状态字入栈
*[[处理机优先级]]置7，[[关中断]]
&lt;/div&gt;
0854&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:nofault|nofault]],-(sp) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*保护 [[code:nofault|nofault]] (出错处理函数) 入栈
&lt;/div&gt;
0855&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $err,[[code:nofault|nofault]] &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将err(0880) 设置为出错处理函数
&lt;/div&gt;
0856&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MFPI|mfpi]]    (r1) &lt;br/&gt;
0857&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r0 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从 [[用户态]]地址空间 取出 (r1) 指向的值
*若[[pdp11:MFPI|MFPI]]出错，则通过[[code:trap|trap]]转入[[code:nofault|nofault]]指向的err(0880) 函数，进行错误处理
*若不出错，则将读出的值传入R0，作为函数返回值
&lt;/div&gt;
0858&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] 1f &lt;br/&gt;
&lt;div class="wikinote"&gt;
*转到 0875
&lt;/div&gt;
0859 &lt;br/&gt;
&lt;div class="wikinote"&gt;
:suiword
:suword
*向 [[用户态]]地址空间 (R1) 位置 写入 (R0)
*输入两个参数： R1,R0
&lt;/div&gt;
0860&nbsp;_suiword: &lt;br/&gt;
0861&nbsp;_suword: &lt;br/&gt;
0862&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r1 &lt;br/&gt;
0863&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     4(sp),r0 &lt;br/&gt;
0864&nbsp;suword: &lt;br/&gt;
0865&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,pword &lt;br/&gt;
0866&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
0867 &lt;br/&gt;
0868&nbsp;pword: &lt;br/&gt;
0869&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     PS,-(sp) &lt;br/&gt;
0870&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*保护[[PS]]状态字入栈
*[[处理机优先级]]置7，[[关中断]]
&lt;/div&gt;
0871&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:nofault|nofault]],-(sp) &lt;br/&gt;
0872&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $err,[[code:nofault|nofault]] &lt;br/&gt;
&lt;div class="wikinote"&gt;
*保护 [[code:nofault|nofault]] (出错处理函数) 入栈
&lt;/div&gt;
0873&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r0,-(sp) &lt;br/&gt;
0874&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MTPI|mtpi]]    (r1) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*向 [[用户态]]地址空间 (r1) 指向的地址，写入R0的值
*若[[pdp11:MTPI|MTPI]]出错，则通过[[code:trap|trap]]转入[[code:nofault|nofault]]指向的err(0880) 函数，进行错误处理
&lt;/div&gt;
0875&nbsp;1: &lt;br/&gt;
0876&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,[[code:nofault|nofault]] &lt;br/&gt;
0877&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从堆栈恢复 [[code:nofault|nofault]] 和 [[PS]]
*将err(0880) 设置为出错处理函数
&lt;/div&gt;
0878&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
&lt;div class="wikinote"&gt;
*函数返回
&lt;/div&gt;
0879 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*err 为 出错处理函数
*从堆栈恢复 [[code:nofault|nofault]] 和 [[PS]]
*从堆栈弹出 本级函数(gword,pword)的返回地址
*返回值 R0 置 -1
*向 上一级函数(例如fubyte等)返回地址 返回
&lt;/div&gt;
0880&nbsp;err: &lt;br/&gt;
0881&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,[[code:nofault|nofault]] &lt;br/&gt;
0882&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,PS &lt;br/&gt;
0883&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TST|tst]]     (sp)+ &lt;br/&gt;
0884&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $-1,r0 &lt;br/&gt;
0885&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
0886 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:main]]
*[[code:trap]]
*[[code:exec]]
*[[code:times]]
*[[code:psig]]
*[[code:procxmt]]
*[[code:stat1]]
*[[code:passc]]
*[[code:cpass]]
*[[code:uchar]]
*[[code:gtty]]
*[[code:stty]]
*[[code:mmread]]
*[[code:mmwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:0806 - 0886 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:0887 ~ 0892</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*savfp 和 display 为空函数
* 在pdp11/40 中，其功能未被实现
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0887&nbsp;/* ------------------------- */ &lt;br/&gt;
0888&nbsp;.globl     _savfp, _display&lt;br/&gt;
0889&nbsp;_savfp:&lt;br/&gt;
0890&nbsp;_display:&lt;br/&gt;
0891&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:trap]]
*[[code:clock]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:0887 - 0892 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:1242 ~ 1281</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
1242&nbsp;/* ------------------------- */ &lt;br/&gt;
1243&nbsp;.globl     _copyin, _copyout &lt;br/&gt;
&lt;div class="wikinote"&gt;
copyin
*从 [[用户态]]地址空间 读入数据
*共传入3个参数，设为src dst count
**src : [[用户态]]地址空间 数据源地址
**dst : [[核心态]]地址空间 目标地址
**count : 读入数据长度(字节)
*返回值
**若成功，返回0
**否则，返回-1
*进入函数时，堆栈状态如下&lt;br/&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_copyin_1.png"/></p>
&lt;/div&gt;
1244&nbsp;_copyin: &lt;br/&gt;
1245&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,copsu &lt;br/&gt;
&lt;div class="wikinote"&gt;
*跳转到 子程序 1264
**src → R0
**dst → R1
**count/2 → R2
&lt;/div&gt;
1246&nbsp;1: &lt;br/&gt;
1247&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MFPI|mfpi]]    (r0)+ &lt;br/&gt;
1248&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,(r1)+ &lt;br/&gt;
1249&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SOB|sob]]     r2,1b &lt;br/&gt;
&lt;div class="wikinote"&gt;
*1247 - 1249 构成循环
*不断 从 [[用户态]]地址空间 数据源地址 读出数据到 [[核心态]]地址空间 目标地址
*共读 数据长度为 count/2 个字
&lt;/div&gt;
1250&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] 2f &lt;br/&gt;
&lt;div class="wikinote"&gt;
*跳转到 1258
&lt;/div&gt;
1251 &lt;br/&gt;
&lt;div class="wikinote"&gt;
copyout
*向 [[用户态]]地址空间 写入数据
*共传入3个参数，设为src dst count
**src : [[用户态]]地址空间 数据目标地址
**dst : [[核心态]]地址空间 数据源地址
**count : 写入数据长度(字节)
*返回值
**若成功，返回0
**否则，返回-1
*进入函数时，堆栈状态如下&lt;br/&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_copyin_1.png"/></p>
&lt;/div&gt;
1252&nbsp;_copyout: &lt;br/&gt;
1253&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,copsu &lt;br/&gt;
&lt;div class="wikinote"&gt;
*跳转到 子程序 1264
**src → R0
**dst → R1
**count/2 → R2
&lt;/div&gt;
1254&nbsp;1: &lt;br/&gt;
1255&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (r0)+,-(sp) &lt;br/&gt;
1256&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MTPI|mtpi]]    (r1)+ &lt;br/&gt;
1257&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SOB|sob]]     r2,1b &lt;br/&gt;
&lt;div class="wikinote"&gt;
*1254 - 1257 构成循环
*不断 从 [[核心态]]地址空间 数据源地址 写入数据到 [[用户态]]地址空间 数据目标地址
*共写 数据长度为 count/2 个字
&lt;/div&gt;
1258&nbsp;2: &lt;br/&gt;
1259&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,nofault &lt;br/&gt;
1260&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2 &lt;br/&gt;
1261&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     r0 &lt;br/&gt;
1262&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从堆栈恢复 [[code:nofault|nofault]] 和 r2
*返回值 r0 置 0
*函数返回
&lt;/div&gt;
1263 &lt;br/&gt;
1264&nbsp;copsu: &lt;br/&gt;
1265&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r0 &lt;br/&gt;
1266&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,-(sp) &lt;br/&gt;
1267&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:nofault|nofault]],-(sp) &lt;br/&gt;
1268&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r0,-(sp) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*1265 - 1268 的作用是调整堆栈结构，调整完堆栈结构如图&lt;br/&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_copyin_2.png"/></p>
*压入堆栈的nofault双字是由1267一句完成
**通过在 [[pdp11虚拟机]]上实验确认了这个结果，但原理并不清楚
**列入[[遗留问题]]
&lt;/div&gt;
1269&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     10(sp),r0 &lt;br/&gt;
1270&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     12(sp),r1 &lt;br/&gt;
1271&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     14(sp),r2 &lt;br/&gt;
1272&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASR|asr]]     r2 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*src → R0
*dst → R1
*count/2 → R2
&lt;/div&gt;
1273&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $1f,[[code:nofault|nofault]] &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 1276 子程序 设置为出错处理函数
&lt;/div&gt;
1274&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
1275 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下 为 1276 子程序，用于出错处理
**从堆栈恢复 [[code:nofault|nofault]] 和 r2
**返回值 r0 置 -1
&lt;/div&gt;
1276&nbsp;1: &lt;br/&gt;
1277&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,[[code:nofault|nofault]] &lt;br/&gt;
1278&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2 &lt;br/&gt;
1279&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $-1,r0 &lt;br/&gt;
1280&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
1281 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:main]]
*[[code:iomove]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:1242 - 1281 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:4695 ~ 4699</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
4695&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rootdev {(0&lt;&lt;8)&lt;nowiki&gt;|&lt;/nowiki&gt;0};
&lt;div class="wikinote"&gt;
*全局变量rootdev,为 根存储设备的设备号
*rootdev变量值为0
*此处之所以这么写，为了表明 
**高字节为主设备号，此处为0，0&lt;&lt;8就是设置主设备号
**低字节为从设备号，此处为0
&lt;/div&gt;
4696&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int swapdev {(0&lt;&lt;8)&lt;nowiki&gt;|&lt;/nowiki&gt;0};
&lt;div class="wikinote"&gt;
*全局变量swapdev,为 提供系统盘交换区的设备的设备号
*swapdev变量值为0
*此处之所以这么写，为了表明 
**高字节为主设备号，此处为0，0&lt;&lt;8就是设置主设备号
**低字节为从设备号，此处为0
&lt;/div&gt;
4697&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int saplo 4000; /* cannot be zero */&lt;br/&gt;
4698&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int nswap 872;&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:4695 - 4699 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:SSR</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*SSR寄存器 用作[[内存管理]]的出错寄存器
**详细资料请参考 [[参考文献|参考文献之The PDP11-40 Processor Handbook]] 6.6 FAULT REGISTERS
*pdp11/40 常用的SSR寄存器为 SSR0和SSR2
**地址定义在 [[File:m40.s|m40.s]]
*这里对于常用操作 作出说明
** SSR0 = 1 ，允许使用[[内存管理]]机制(虚实地址映照)，来提供内存地址保护</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:SSR by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:access</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*检查 指定文件 的权限，并抛出相关错误
** 若尝试写 只读的文件系统，则抛出[[错误代码|EROFS]]
** 若尝试写 作为程序正文的文件，则抛出[[错误代码|ETXTBSY]]
** 若 超级用户 尝试执行无执行权限的文件，则抛出[[错误代码|EACCES]]
** 若 当前用户 无相应权限，则抛出[[错误代码|EACCES]]
*共传入2个参数 aip , mode 
**aip : 指定文件的[[code:struct inode|struct inode]]结构
**mode : 需要验证的权限，权限常量定义在[[file:inode.h|inode.h]]
*返回值
**若验证通过，返回0
**若失败，返回1
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6730 &lt;br/&gt;
6731&nbsp;/* &lt;br/&gt;
6732&nbsp;&nbsp;* Check mode permission on inode pointer. &lt;br/&gt;
6733&nbsp;&nbsp;* Mode is READ, WRITE, or EXEC. &lt;br/&gt;
6734&nbsp;&nbsp;* In the case of WRITE, the &lt;br/&gt;
6735&nbsp;&nbsp;* read-only status of the file &lt;br/&gt;
6736&nbsp;&nbsp;* system is checked. &lt;br/&gt;
6737&nbsp;&nbsp;* Also in WRITE, prototype text &lt;br/&gt;
6738&nbsp;&nbsp;* segments cannot be written. &lt;br/&gt;
6739&nbsp;&nbsp;* The mode is shifted to select &lt;br/&gt;
6740&nbsp;&nbsp;* the owner/group/other fields. &lt;br/&gt;
6741&nbsp;&nbsp;* The super user is granted all &lt;br/&gt;
6742&nbsp;&nbsp;* permissions except for EXEC where &lt;br/&gt;
6743&nbsp;&nbsp;* at least one of the EXEC bits must &lt;br/&gt;
6744&nbsp;&nbsp;* be on. &lt;br/&gt;
6745&nbsp;&nbsp;*/ &lt;br/&gt;
6746&nbsp;access(aip, mode) &lt;br/&gt;
6747&nbsp;int *aip; &lt;br/&gt;
6748&nbsp;{ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*IWRITE,IEXEC,IREAD 权限常量定义在[[file:inode.h|inode.h]]
&lt;/div&gt;
6749&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *ip, m; &lt;br/&gt;
6750 &lt;br/&gt;
6751&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = aip; &lt;br/&gt;
6752&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m = mode; &lt;br/&gt;
6753&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(m == IWRITE) { &lt;br/&gt;
6754&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:getfs|getfs]](ip-&gt;i_dev)-&gt;s_ronly != 0) { &lt;br/&gt;
6755&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EROFS; &lt;br/&gt;
6756&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(1); &lt;br/&gt;
6757&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
* 若尝试写 只读的文件系统，则抛出[[错误代码|EROFS]]
&lt;/div&gt;
6758&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_flag & ITEXT) { &lt;br/&gt;
6759&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ETXTBSY; &lt;br/&gt;
6760&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(1); &lt;br/&gt;
6761&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
* 若尝试写 作为程序正文的文件，则抛出[[错误代码|ETXTBSY]]
&lt;/div&gt;
6762&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6763&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_uid]] == 0) { &lt;br/&gt;
6764&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(m == IEXEC && (ip-&gt;i_mode & &lt;br/&gt;
6765&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;nowiki&gt;(IEXEC | (IEXEC&gt;&gt;3) | (IEXEC&gt;&gt;6))) == 0)&lt;/nowiki&gt; &lt;br/&gt;
6766&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
6767&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
6768&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
* 当前用户为超级用户
** 若尝试执行无执行权限的文件，则抛出[[错误代码|EACCES]]
** 其他情况，超级用户拥有完全权限
&lt;/div&gt;
6769&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_uid]] != ip-&gt;i_uid) { &lt;br/&gt;
6770&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m =&gt;&gt; 3; &lt;br/&gt;
6771&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_gid]] != ip-&gt;i_gid) &lt;br/&gt;
6772&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m =&gt;&gt; 3; &lt;br/&gt;
6773&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6774&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ip-&gt;i_mode&m) != 0) &lt;br/&gt;
6775&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 当前用户 为 文件拥有者，则 文件权限 对比 拥有者权限
**否则，若 当前用户 属于 文件拥有组，则 文件权限 对比 拥有组权限
***否则，文件权限 对比 其他用户权限
*若验证通过，则返回0，否则抛出[[错误代码|EACCES]]
&lt;/div&gt;
6776 &lt;br/&gt;
6777&nbsp;bad: &lt;br/&gt;
6778&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EACCES; &lt;br/&gt;
6779&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(1); &lt;br/&gt;
6780&nbsp;} &lt;br/&gt;
6781&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统#文件权限]]
===Caller===
*[[code:exec]]
*[[code:chdir]]
*[[code:core]]
*[[code:open1]]
*[[code:namei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:access by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:alloc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*获取 指定磁盘的空闲块，参看[[文件系统]]
*共传入1个参数 dev
**dev : 磁盘的设备号
*返回值
**空闲块的缓存管理块，参看[[设备缓存管理]]
**若磁盘空间用尽，则抛出错误，返回NULL
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6944 &lt;br/&gt;
6945&nbsp;/* &lt;br/&gt;
6946&nbsp;&nbsp;* alloc will obtain the next available &lt;br/&gt;
6947&nbsp;&nbsp;* free disk block from the free list of &lt;br/&gt;
6948&nbsp;&nbsp;* the specified device. &lt;br/&gt;
6949&nbsp;&nbsp;* The super block has up to 100 remembered &lt;br/&gt;
6950&nbsp;&nbsp;* free blocks; the last of these is read to &lt;br/&gt;
6951&nbsp;&nbsp;* obtain 100 more . . . &lt;br/&gt;
6952&nbsp;&nbsp;* &lt;br/&gt;
6953&nbsp;&nbsp;* no space on dev x/y -- when &lt;br/&gt;
6954&nbsp;&nbsp;* the free list is exhausted. &lt;br/&gt;
6955&nbsp;&nbsp;*/ &lt;br/&gt;
6956&nbsp;alloc(dev) &lt;br/&gt;
6957&nbsp;{ &lt;br/&gt;
6958&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int bno; &lt;br/&gt;
6959&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *bp, *ip, *fp; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*bp 指向 [[code:struct buf|struct buf]]
*fp 指向 [[code:struct filsys|struct filsys]]
&lt;/div&gt;
6960 &lt;br/&gt;
6961&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp = [[code:getfs|getfs]](dev); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据 设备号 得到对应的超级块
&lt;/div&gt;
6962&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(fp-&gt;s_flock) &lt;br/&gt;
6963&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&fp-&gt;s_flock, PINOD); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 超级块的空闲块数组 被置锁，则睡眠
*直到 超级块的空闲块数组 可用
*[[睡眠原因]] : filsys.s_flock
*[[进程优先级|睡眠优先级]] : PINOD
&lt;/div&gt;
6964&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do { &lt;br/&gt;
6965&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fp-&gt;s_nfree &lt;= 0) &lt;br/&gt;
6966&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto nospace; &lt;br/&gt;
6967&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bno = fp-&gt;s_free[--fp-&gt;s_nfree]; &lt;br/&gt;
6968&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bno == 0) &lt;br/&gt;
6969&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto nospace; &lt;br/&gt;
6970&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while ([[code:badblock|badblock]](fp, bno, dev)); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从 超级块 的空闲块数组中弹出一个 一般空闲块的块号
*若出现以下情况，则跳转到 空间用尽错误处理 (6986)
**空闲块数组无有效元素
**空闲块数组弹出的块号为0(0是空间用尽标志，参看[[文件系统]])
&lt;/div&gt;
6971&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fp-&gt;s_nfree &lt;= 0) { &lt;br/&gt;
6972&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_flock++; &lt;br/&gt;
6973&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]](dev, bno); &lt;br/&gt;
6974&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = bp-&gt;b_addr; &lt;br/&gt;
6975&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_nfree = *ip++; &lt;br/&gt;
6976&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bcopy|bcopy]](ip, fp-&gt;s_free, 100); &lt;br/&gt;
6977&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
6978&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_flock = 0; &lt;br/&gt;
6979&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&fp-&gt;s_flock); &lt;br/&gt;
6980&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若弹出空闲块块号后，空闲块数组为空，则
**需要释放之前的管理块
**弹出的空闲块块号 实际 指向上一个管理块
**参看[[文件系统#空闲块管理|文件系统之空闲块管理]]
*步骤如下
**锁 空闲块数组
**从磁盘读出上一个管理块
**将上一管理块内容复制给filsys结构
**释放磁盘缓存块
**解锁 空闲块数组
**唤醒所有等待使用 空闲块数组 的进程
&lt;/div&gt;
6981&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:getblk|getblk]](dev, bno); &lt;br/&gt;
6982&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:clrbuf|clrbuf]](bp); &lt;br/&gt;
6983&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_fmod = 1; &lt;br/&gt;
6984&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*为 空闲块 申请磁盘缓存
*将 缓存内容清零
*置 filsys修改标志 
*返回 缓存管理块
&lt;/div&gt;
6985 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下是 空间用尽 的错误处理，处理步骤如下
**空闲块数组的有效元素个数 置 0
**输出错误信息
**向用户抛出错误[[错误代码|ENOSPC]]
**返回NULL
&lt;/div&gt;
6986&nbsp;nospace: &lt;br/&gt;
6987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_nfree = 0; &lt;br/&gt;
6988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prdev|prdev]]("no space", dev); &lt;br/&gt;
6989&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_error = ENOSPC; &lt;br/&gt;
6990&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
6991&nbsp;} &lt;br/&gt;
6992&nbsp;/*------------------------- */ &lt;br/&gt;
6993&nbsp;/*------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:bmap]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:alloc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:aretu</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0723 ~ 0750]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:aretu by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:backup</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*尝试 恢复 堆栈越界前 的现场
*在[[code:trap|trap]]中调用
*函数使用到了 pdp11/40 没有的特性...可能导致失败
*并未完全读懂该函数，列入[[遗留问题]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1007&lt;br/&gt;
1008&nbsp;/* ------------------------- */ &lt;br/&gt;
1009&nbsp;.globl     _backup&lt;br/&gt;
1010&nbsp;/* ------------------------- */ &lt;br/&gt;
1011&nbsp;.globl     _regloc&lt;br/&gt;
1012&nbsp;_backup:&lt;br/&gt;
1013&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),[[code:SSR|ssr]]+2&lt;br/&gt;
1014&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,-(sp)&lt;br/&gt;
1015&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,backup&lt;br/&gt;
1016&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,[[code:SSR|ssr]]+2&lt;br/&gt;
1017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2&lt;br/&gt;
1018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    jflg,r0&lt;br/&gt;
1019&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     2f&lt;br/&gt;
1020&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r0&lt;br/&gt;
1021&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    [[code:SSR|ssr]]+2,r1&lt;br/&gt;
1022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,1f&lt;br/&gt;
1023&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    [[code:SSR|ssr]]+3,r1&lt;br/&gt;
1024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,1f&lt;br/&gt;
1025&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    _regloc+7,r1&lt;br/&gt;
1026&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASL|asl]]     r1&lt;br/&gt;
1027&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADD|add]]     r0,r1&lt;br/&gt;
1028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:SSR|ssr]]+4,(r1)&lt;br/&gt;
1029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     r0&lt;br/&gt;
1030&nbsp;2:&lt;br/&gt;
1031&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1032&nbsp;1:&lt;br/&gt;
1033&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,-(sp)&lt;br/&gt;
1034&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASR|asr]]     (sp)&lt;br/&gt;
1035&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASR|asr]]     (sp)&lt;br/&gt;
1036&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASR|asr]]     (sp)&lt;br/&gt;
1037&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!7,r1&lt;br/&gt;
1038&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    _regloc(r1),r1&lt;br/&gt;
1039&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASL|asl]]     r1&lt;br/&gt;
1040&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADD|add]]     r0,r1&lt;br/&gt;
1041&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SUB|sub]]     (sp)+,(r1)&lt;br/&gt;
1042&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1043&lt;br/&gt;
1044&nbsp;/ hard part&lt;br/&gt;
1045&nbsp;/ simulate the [[code:SSR|ssr]]2 register missing on 11/40&lt;br/&gt;
1046&lt;br/&gt;
1047&nbsp;backup:&lt;br/&gt;
1048&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     r2/ backup register [[code:SSR|ssr]]1 &lt;br/&gt;
1049&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $1,bflg/ clrs jflg &lt;br/&gt;
1050&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:SSR|ssr]]+4,r0&lt;br/&gt;
1051&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,fetch&lt;br/&gt;
1052&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r0,r1&lt;br/&gt;
1053&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASH|ash]]     $-11.,r0&lt;br/&gt;
1054&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!36,r0&lt;br/&gt;
1055&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JMP|jmp]]     *0f(r0)&lt;br/&gt;
1056&nbsp;0:&nbsp;&nbsp;&nbsp;t00; t01; t02; t03; t04; t05; t06; t07 &lt;br/&gt;
1057&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t10; t11; t12; t13; t14; t15; t16; t17 &lt;br/&gt;
1058&lt;br/&gt;
1059&nbsp;t00:&lt;br/&gt;
1060&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLRB|clrb]]    bflg&lt;br/&gt;
1061&lt;br/&gt;
1062&nbsp;t10:&lt;br/&gt;
1063&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,r0&lt;br/&gt;
1064&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SWAB|swab]]    r0&lt;br/&gt;
1065&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!16,r0&lt;br/&gt;
1066&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JMP|jmp]]     *0f(r0)&lt;br/&gt;
1067&nbsp;0:&nbsp;&nbsp;&nbsp;u0; u1; u2; u3; u4; u5; u6; u7 &lt;br/&gt;
1068&lt;br/&gt;
1069&nbsp;u6:&nbsp;/ single op, m[tf]pi, [[pdp11:SXT|sxt]], illegal &lt;br/&gt;
1070&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $400,r1&lt;br/&gt;
1071&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     u5/ all but m[tf], [[pdp11:SXT|sxt]] &lt;br/&gt;
1072&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $200,r1&lt;br/&gt;
1073&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     1f/ [[pdp11:MFPI|mfpi]] &lt;br/&gt;
1074&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $100,r1&lt;br/&gt;
1075&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     u5/ [[pdp11:SXT|sxt]] &lt;br/&gt;
1076&lt;br/&gt;
1077&nbsp;/ simulate [[pdp11:MTPI|mtpi]] with double (sp)+,dd&lt;br/&gt;
1078&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $4000,r1/ turn instr into (sp)+ &lt;br/&gt;
1079&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] t01 &lt;br/&gt;
1080&lt;br/&gt;
1081&nbsp;/ simulate [[pdp11:MFPI|mfpi]] with double ss,-(sp)&lt;br/&gt;
1082&nbsp;1:&lt;br/&gt;
1083&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASH|ash]]     $6,r1&lt;br/&gt;
1084&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $46,r1/ -(sp) &lt;br/&gt;
1085&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] t01 &lt;br/&gt;
1086&lt;br/&gt;
1087&nbsp;u4: / [[pdp11:JSR|jsr]] &lt;br/&gt;
1088&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,r0&lt;br/&gt;
1089&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,setreg / assume no fault &lt;br/&gt;
1090&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $173000,r2 / -2 from sp &lt;br/&gt;
1091&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1092&lt;br/&gt;
1093&nbsp;t07: / EIS &lt;br/&gt;
1094&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLRB|clrb]]    bflg&lt;br/&gt;
1095&lt;br/&gt;
1096&nbsp;u0: / [[pdp11:JMP|jmp]], [[pdp11:SWAB|swab]] &lt;br/&gt;
1100&lt;br/&gt;
1101&nbsp;t01: / [[pdp11:MOV|mov]] &lt;br/&gt;
1102&nbsp;t02: / [[pdp11:CMP|cmp]] &lt;br/&gt;
1103&nbsp;t03: / [[pdp11:BIT|bit]] &lt;br/&gt;
1104&nbsp;t04: / [[pdp11:BIC|bic]] &lt;br/&gt;
1105&nbsp;t05: / [[pdp11:BIS|bis]] &lt;br/&gt;
1106&nbsp;t06: / [[pdp11:ADD|add]] &lt;br/&gt;
1107&nbsp;t16: / [[pdp11:SUB|sub]] &lt;br/&gt;
1108&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLRB|clrb]]    bflg&lt;br/&gt;
1109&lt;br/&gt;
1110&nbsp;t11: / [[pdp11:MOVB|movb]] &lt;br/&gt;
1111&nbsp;t12: / [[pdp11:CMPB|cmpb]] &lt;br/&gt;
1112&nbsp;t13: / [[pdp11:BITB|bitb]] &lt;br/&gt;
1113&nbsp;t14: / [[pdp11:BICB|bicb]] &lt;br/&gt;
1114&nbsp;t15: / [[pdp11:BISB|bisb]] &lt;br/&gt;
1115&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,r0&lt;br/&gt;
1116&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASH|ash]]     $-6,r0&lt;br/&gt;
1117&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,setreg&lt;br/&gt;
1118&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SWAB|swab]]    r2&lt;br/&gt;
1119&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,r0&lt;br/&gt;
1120&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,setreg&lt;br/&gt;
1121&lt;br/&gt;
1122&nbsp;/ if delta(dest) is zero,&lt;br/&gt;
1123&nbsp;/ no need to fetch source&lt;br/&gt;
1124&lt;br/&gt;
1125&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $370,r2&lt;br/&gt;
1126&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     1f&lt;br/&gt;
1127&lt;br/&gt;
1128&nbsp;/ if mode(source) is R,&lt;br/&gt;
1129&nbsp;/ no fault is possible&lt;br/&gt;
1130&lt;br/&gt;
1131&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $7000,r1&lt;br/&gt;
1132&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     1f&lt;br/&gt;
1133&lt;br/&gt;
1134&nbsp;/ if reg(source) is reg(dest),&lt;br/&gt;
1135&nbsp;/ too bad.&lt;br/&gt;
1136&lt;br/&gt;
1137&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,-(sp)&lt;br/&gt;
1138&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $174370,(sp)&lt;br/&gt;
1139&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMPB|cmpb]]    1(sp),(sp)+&lt;br/&gt;
1140&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     t17&lt;br/&gt;
1141&lt;br/&gt;
1142&nbsp;/ start source cycle&lt;br/&gt;
1143&nbsp;/ pick up value of reg&lt;br/&gt;
1144&lt;br/&gt;
1145&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,r0&lt;br/&gt;
1146&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASH|ash]]     $-6,r0&lt;br/&gt;
1147&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!7,r0&lt;br/&gt;
1148&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    _regloc(r0),r0&lt;br/&gt;
1149&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASL|asl]]     r0&lt;br/&gt;
1150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADD|add]]     [[code:SSR|ssr]]+2,r0&lt;br/&gt;
1151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (r0),r0&lt;br/&gt;
1152&lt;br/&gt;
1153&nbsp;/ if reg has been incremented,&lt;br/&gt;
1154&nbsp;/ must decrement it before fetch&lt;br/&gt;
1155&lt;br/&gt;
1156&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $174000,r2&lt;br/&gt;
1157&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BLE|ble]]     2f&lt;br/&gt;
1158&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:DEC|dec]]     r0&lt;br/&gt;
1159&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $10000,r2&lt;br/&gt;
1160&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     2f&lt;br/&gt;
1161&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:DEC|dec]]     r0&lt;br/&gt;
1162&nbsp;2:&lt;br/&gt;
1163&lt;br/&gt;
1164&nbsp;/ if mode is 6,7 fetch and [[pdp11:ADD|add]] X(R) to R&lt;br/&gt;
1165&lt;br/&gt;
1166&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $4000,r1&lt;br/&gt;
1167&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     2f&lt;br/&gt;
1168&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $2000,r1&lt;br/&gt;
1169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     2f&lt;br/&gt;
1170&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r0,-(sp)&lt;br/&gt;
1171&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:SSR|ssr]]+4,r0&lt;br/&gt;
1172&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sdd     $2,r0&lt;br/&gt;
1173&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,fetch&lt;br/&gt;
1174&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADD|add]]     (sp)+,r0&lt;br/&gt;
1175&nbsp;2:&lt;br/&gt;
1176&lt;br/&gt;
1177&nbsp;/ fetch operand&lt;br/&gt;
1178&nbsp;/ if mode is 3,5,7 fetch *&lt;br/&gt;
1179&lt;br/&gt;
1180&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,fetch&lt;br/&gt;
1181&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $1000,r1&lt;br/&gt;
1182&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     1f&lt;br/&gt;
1183&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $6000,r1&lt;br/&gt;
1184&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     fetch&lt;br/&gt;
1185&nbsp;1:&lt;br/&gt;
1186&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1187&lt;br/&gt;
1188&nbsp;t17: / illegal  &lt;br/&gt;
1189&nbsp;u1: / [[pdp11:BR|br]]  &lt;br/&gt;
1190&nbsp;u2: / [[pdp11:BR|br]]  &lt;br/&gt;
1191&nbsp;u3: / [[pdp11:BR|br]]  &lt;br/&gt;
1192&nbsp;u7: / illegal  &lt;br/&gt;
1193&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:INCB|incb]]    jflg&lt;br/&gt;
1194&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1195&lt;br/&gt;
1196&nbsp;setreg:&lt;br/&gt;
1197&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r0,-(sp)&lt;br/&gt;
1198&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!7,r0&lt;br/&gt;
1199&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     r0,r2&lt;br/&gt;
1200&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r0&lt;br/&gt;
1201&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASH|ash]]     $-3,r0&lt;br/&gt;
1202&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!7,r0&lt;br/&gt;
1203&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    0f(r0),r0&lt;br/&gt;
1204&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TSTB|tstb]]    bflg&lt;br/&gt;
1205&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     1f&lt;br/&gt;
1206&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $2,r2&lt;br/&gt;
1207&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     2f&lt;br/&gt;
1208&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $4,r2&lt;br/&gt;
1209&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     2f&lt;br/&gt;
1210&nbsp;1:&lt;br/&gt;
1211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r0,$20&lt;br/&gt;
1212&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     2f&lt;br/&gt;
1213&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r0,$-20&lt;br/&gt;
1214&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     2f&lt;br/&gt;
1215&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASL|asl]]     r0&lt;br/&gt;
1216&nbsp;2:&lt;br/&gt;
1217&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BISB|bisb]]    r0,r2&lt;br/&gt;
1218&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1219&lt;br/&gt;
1220&nbsp;0: .byte   0,0,10,20,-10,-20,0,0&lt;br/&gt;
1221&lt;br/&gt;
1222&nbsp;fetch:&lt;br/&gt;
1223&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $1,r0&lt;br/&gt;
1224&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     nofault,-(sp)&lt;br/&gt;
1225&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $1f,nofault&lt;br/&gt;
1226&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MFPI|mfpi]]    (r0)&lt;br/&gt;
1227&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r0&lt;br/&gt;
1228&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,nofault&lt;br/&gt;
1229&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1230&lt;br/&gt;
1231&nbsp;1:&lt;br/&gt;
1232&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,nofault &lt;br/&gt;
1233&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLRB|clrb]]    r2 / clear out dest on fault  &lt;br/&gt;
1234&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $-1,r0&lt;br/&gt;
1235&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1236&lt;br/&gt;
1237&nbsp;.bss&lt;br/&gt;
1238&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bflg: .=.+1 &lt;br/&gt;
1239&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jflg: .=.+1 &lt;br/&gt;
1240&nbsp;.text&lt;br/&gt;
1241&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:trap]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:backup by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:badblock</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*判断 指定盘块 是否为 指定设备的一般盘块
**参看[[文件系统]]
*共传入三个参数 afp,abn,dev
**afp : 指定设备的超级块结构，类型为[[code:struct filsys|struct filsys]]
**abn : 指定块号
**dev : 指定设备的设备号
*返回值
**若指定盘块是一般盘块，则返回0
**若指定盘块不是一般盘块，例如是超级块或INODE块，则返回1
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7030 &lt;br/&gt;
7031&nbsp;/* &lt;br/&gt;
7032&nbsp;&nbsp;* Check that a block number is in the &lt;br/&gt;
7033&nbsp;&nbsp;* range between the I list and the size &lt;br/&gt;
7034&nbsp;&nbsp;* of the device. &lt;br/&gt;
7035&nbsp;&nbsp;* This is used mainly to check that a &lt;br/&gt;
7036&nbsp;&nbsp;* garbage file system has not been mounted. &lt;br/&gt;
7037&nbsp;&nbsp;* &lt;br/&gt;
7038&nbsp;&nbsp;* bad block on dev x/y -- not in range &lt;br/&gt;
7039&nbsp;&nbsp;*/ &lt;br/&gt;
7040&nbsp;badblock(afp, abn, dev) &lt;br/&gt;
7041&nbsp;{ &lt;br/&gt;
7042&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct filsys|struct filsys]] *fp; &lt;br/&gt;
7043&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register char *bn; &lt;br/&gt;
7044 &lt;br/&gt;
7045&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp = afp; &lt;br/&gt;
7046&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bn = abn; &lt;br/&gt;
7047&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bn &lt; fp-&gt;s_isize+2&lt;nowiki&gt; || &lt;/nowiki&gt;bn &gt;= fp-&gt;s_fsize) { &lt;br/&gt;
7048&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prdev|prdev]]("bad block", dev); &lt;br/&gt;
7049&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(1); &lt;br/&gt;
7050&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若指定盘块不是一般盘块，例如是超级块或INODE块或越界，则
**输出错误信息
**函数返回1
&lt;/div&gt;
7051&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
7052&nbsp;} &lt;br/&gt;
7053&nbsp;/* ------------------------- */ &lt;br/&gt;
7054&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:alloc]]
*[[code:free]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:badblock by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bawrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 给定缓存块 异步写回设备
*共传入一个参数 bp
**bp : 给定缓存块的控制块
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4852&nbsp;&lt;br/&gt;
4853&nbsp;/* Release the buffer, start I/O on it, but don’t wait &lt;br/&gt;
4854&nbsp;&nbsp;* for completion */ &lt;br/&gt;
4855&nbsp;&lt;br/&gt;
4856&nbsp;bawrite(bp) &lt;br/&gt;
4857&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
4858&nbsp;{ &lt;br/&gt;
4859&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp; &lt;br/&gt;
4860&nbsp;&lt;br/&gt;
4861&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp; &lt;br/&gt;
4862&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_flags &lt;nowiki&gt;=| &lt;/nowiki&gt;B_ASYNC; &lt;br/&gt;
4863&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bwrite|bwrite]](rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 B_ASYNC 异步写标志
*调用[[code:bwrite|bwrite]]进行写操作
&lt;/div&gt;
4864&nbsp;} &lt;br/&gt;
4865&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:bdwrite]]
*[[code:writei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bawrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bcopy</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*从 源地址 向 目标地址 复制 指定字长的数据
*共传入3个参数 from,to,count
**from : 源地址
**to : 目标地址
**count : 指定字长
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6581 &lt;br/&gt;
6582&nbsp;/* &lt;br/&gt;
6583&nbsp;&nbsp;* copy count words from from to to. &lt;br/&gt;
6584&nbsp;&nbsp;*/ &lt;br/&gt;
6585&nbsp;bcopy(from, to, count) &lt;br/&gt;
6586&nbsp;int *from, *to;  &lt;br/&gt;
6587&nbsp;{ &lt;br/&gt;
6588&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *a, *b, c; &lt;br/&gt;
6589 &lt;br/&gt;
6590&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = from; &lt;br/&gt;
6591&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b = to; &lt;br/&gt;
6592&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = count; &lt;br/&gt;
6593&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do &lt;br/&gt;
6594&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*b++ = *a++; &lt;br/&gt;
6595&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(--c); &lt;br/&gt;
6596&nbsp;} &lt;br/&gt;
6597&nbsp;/* ------------------------- */ &lt;br/&gt;
6598 &lt;br/&gt;
6599 &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:exit]]
*[[code:smount]]
*[[code:iinit]]
*[[code:alloc]]
*[[code:free]]
*[[code:update]]
*[[code:namei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bcopy by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bdevsw</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*定义了描述块设备(如RK磁盘)的结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4608&nbsp;/* ------------------------- */ &lt;br/&gt;
4609&nbsp;/* Declaration of block device &lt;br/&gt;
4610&nbsp;&nbsp;* switch. Each entry (row) is &lt;br/&gt;
4611&nbsp;&nbsp;* the only link between the &lt;br/&gt;
4612&nbsp;&nbsp;* main unix code and the driver. &lt;br/&gt;
4613&nbsp;&nbsp;* The initialization of the &lt;br/&gt;
4614&nbsp;&nbsp;* device switches is in the &lt;br/&gt;
4615&nbsp;&nbsp;* file conf.c. &lt;br/&gt;
4616&nbsp;&nbsp;*/ &lt;br/&gt;
4617&nbsp;struct     bdevsw  { &lt;br/&gt;
4618&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*d_open)(); &lt;br/&gt;
4619&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*d_close)(); &lt;br/&gt;
4620&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*d_strategy)(); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*设备驱动函数指针
&lt;/div&gt;
4621&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     *d_tab; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*设备缓存管理结构指针
*类型为 [[code:struct devtab|struct devtab]]
*参考[[设备缓存管理]]
&lt;/div&gt;
4622&nbsp;} bdevsw[]; &lt;br/&gt;
4623 /* ------------------------- */ 
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4650&nbsp;/*&lt;br/&gt;
4651&nbsp;&nbsp;* this file is created, along with the file "low.s",&lt;br/&gt;
4652&nbsp;&nbsp;* by the program "mkconf.c", to reflect the actual&lt;br/&gt;
4653&nbsp;&nbsp;* configuration of peripheral devices on a system.&lt;br/&gt;
4654&nbsp;&nbsp;*/&lt;br/&gt;
4655&lt;br/&gt;
4656&nbsp;int (*bdevsw[])()&lt;br/&gt;
4657&nbsp;{&lt;br/&gt;
4658&nbsp;&nbsp;[[code:nulldev|&nulldev]], [[code:nulldev|&nulldev]], [[code:rkstrategy|&rkstrategy]], [[code:struct devtab|&rktab]], /*rk */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于rk磁盘的设备描述
&lt;/div&gt;
4659&nbsp;&nbsp;[[code:nodev|&nodev]], [[code:nodev|&nodev]], [[code:nodev|&nodev]], 0, /* rp */&lt;br/&gt;
4660&nbsp;&nbsp;[[code:nodev|&nodev]], [[code:nodev|&nodev]], [[code:nodev|&nodev]], 0, /* rf */&lt;br/&gt;
4661&nbsp;&nbsp;[[code:nodev|&nodev]], [[code:nodev|&nodev]], [[code:nodev|&nodev]], 0, /* tm */&lt;br/&gt;
4662&nbsp;&nbsp;[[code:nodev|&nodev]], [[code:nodev|&nodev]], [[code:nodev|&nodev]], 0, /* tc */&lt;br/&gt;
4663&nbsp;&nbsp;[[code:nodev|&nodev]], [[code:nodev|&nodev]], [[code:nodev|&nodev]], 0, /* hs */&lt;br/&gt;
4664&nbsp;&nbsp;[[code:nodev|&nodev]], [[code:nodev|&nodev]], [[code:nodev|&nodev]], 0, /* hp */&lt;br/&gt;
4665&nbsp;&nbsp;[[code:nodev|&nodev]], [[code:nodev|&nodev]], [[code:nodev|&nodev]], 0, /* ht */&lt;br/&gt;
4666&nbsp;&nbsp;0&lt;br/&gt;
4667&nbsp;};&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:bread]]
*[[code:breada]]
*[[code:bwrite]]
*[[code:bdwrite]]
*[[code:incore]]
*[[code:getblk]]
*[[code:binit]]
*[[code:swap]]
*[[code:smount]]
*[[code:sumount]]
*[[code:closei]]
*[[code:openi]]
*[[code:iinit]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bdevsw by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bdwrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*对 指定缓存块 进行延迟写
**若 该块对应设备 为磁带设备，进行异步写，而不是延迟写
*共传入一个参数 bp
** bp : 指定的缓存块的管理结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4827&nbsp;&lt;br/&gt;
4828&nbsp;/* &lt;br/&gt;
4829&nbsp;&nbsp;* Release the buffer, marking it so that if it is grabbed &lt;br/&gt;
4830&nbsp;&nbsp;* for another purpose it will be written out before being &lt;br/&gt;
4831&nbsp;&nbsp;* given up (e.g. when writing a partial block where it is &lt;br/&gt;
4832&nbsp;&nbsp;* assumed that another write for the same block will soon &lt;br/&gt;
4833&nbsp;&nbsp;* follow). This can’t  be done for magtape, since writes  &lt;br/&gt;
4834&nbsp;&nbsp;* must be done in the same order as requested. &lt;br/&gt;
4835&nbsp;&nbsp;*/ &lt;br/&gt;
4836&nbsp;bdwrite(bp) &lt;br/&gt;
4837&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
4838&nbsp;{ &lt;br/&gt;
4839&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp; &lt;br/&gt;
4840&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct devtab|struct devtab]] *dp; &lt;br/&gt;
4841 &lt;br/&gt;
4842&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp; &lt;br/&gt;
4843&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = [[code:bdevsw|bdevsw]][ [[code:struct buf|rbp]]-&gt;b_dev[[skill:.d_major|.d_major]] ].[[code:struct devtab|d_tab]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*dp 指向 该块对应的设备的[[code:struct devtab|struct devtab]]管理结构
&lt;/div&gt;
4844&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dp == &tmtab &lt;nowiki&gt;||&lt;/nowiki&gt; dp == &httab) &lt;br/&gt;
4845&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bawrite|bawrite]](rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 对应设备为磁带设备，则异步写
&lt;/div&gt;
4846&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else { &lt;br/&gt;
4847&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;nowiki&gt;rbp-&gt;b_flags =| B_DELWRI | B_DONE; &lt;/nowiki&gt;&lt;br/&gt;
4848&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 该块 置 B_DELWRI 和 B_DONE 标志
*释放该块（将该块置为可用，写设备操作将推后执行）
&lt;/div&gt;
4849&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4850&nbsp;} &lt;br/&gt;
4851&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:writei]]
*[[code:bmap]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bdwrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bflush</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class= "wikiheadnote"&gt;
*将带有延迟写标识且对应于指定设备(或NODEV)的缓存块写回该设备
*传入1个参数dev,为指定设备号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5223&lt;br/&gt;
5224&nbsp;/* make sure all write-behind blocks&lt;br/&gt;
5225&nbsp;&nbsp;* on dev (or NODEV for all)&lt;br/&gt;
5226&nbsp;&nbsp;* are flushed out.&lt;br/&gt;
5227&nbsp;&nbsp;* (from umount and update)&lt;br/&gt;
5228&nbsp;&nbsp;*/&lt;br/&gt;
5229&nbsp;bflush(dev)&lt;br/&gt;
5230&nbsp;{&lt;br/&gt;
5231&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *[[code:struct buf|bp]];&lt;br/&gt;
5232&lt;br/&gt;
5233&nbsp;loop:&lt;br/&gt;
5234&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]6();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
&lt;/div&gt;
5235&nbsp;&nbsp;&nbsp;&nbsp;for ([[code:struct buf|bp]] = [[自由队列|bfreelist]].av_forw; [[code:struct buf|bp]] != &[[自由队列|bfreelist]];&lt;br/&gt;
5236&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp]] = [[code:struct buf|bp]]-&gt;av_forw) {&lt;br/&gt;
5237&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct buf|bp]]-&gt;b_flags&B_DELWRI &&&lt;br/&gt;
5238&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(dev == NODEV&lt;nowiki&gt;||&lt;/nowiki&gt;dev == [[code:struct buf|bp]]-&gt;b_dev)) {&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[自由队列]],寻找带有延迟写标识,且其对应设备号为NODEV或是dev(函数传入参数)的缓存块
&lt;/div&gt;
5239&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp]]-&gt;b_flags =&lt;nowiki&gt;|&lt;/nowiki&gt; B_ASYNC;&lt;br/&gt;
5240&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:notavil|notavil]](bp);&lt;br/&gt;
5241&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bwrite|bwrite]](bp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于找到的缓存块,置异步写标识
*将其从自由队列中取出
*然后写回相应设备
&lt;/div&gt;
5242&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop;&lt;br/&gt;
5243&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
5244&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
5245&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]0();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
5246&nbsp;}&lt;br/&gt;
5247 /* ------------------------- */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:update]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bflush by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bfreelist</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT[[File:buf.h]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bfreelist by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:binit</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*进行I/O块设备 及 缓存机构的初始化
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5051 &lt;br/&gt;
5052&nbsp;/* Initialize the buffer I/O system by freeing &lt;br/&gt;
5053&nbsp;&nbsp;* all buffers and setting all device buffer lists to empty. &lt;br/&gt;
5054&nbsp;&nbsp;*/ &lt;br/&gt;
5055&nbsp;binit() &lt;br/&gt;
5056&nbsp;{ &lt;br/&gt;
5057&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *bp; &lt;br/&gt;
5058&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct devtab|struct devtab]] *dp; &lt;br/&gt;
5059&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int i; &lt;br/&gt;
5060&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct [[code:bdevsw|bdevsw]] *bdp; &lt;br/&gt;
5061 &lt;br/&gt;
5062&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bfreelist|bfreelist]].b_forw = [[code:bfreelist|bfreelist]].b_back = &lt;br/&gt;
5063&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bfreelist|bfreelist]].av_forw = [[code:bfreelist|bfreelist]].av_back = &[[code:bfreelist|bfreelist]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清空
**[[自由队列]]
**[[设备队列#NODEV设备队列|NODEV设备队列]]
&lt;/div&gt;
5064&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i=0; i&lt;NBUF; i++) { &lt;br/&gt;
5065&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = &buf[i]; &lt;br/&gt;
5066&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_dev = -1; &lt;br/&gt;
5067&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_addr = buffers[i]; &lt;br/&gt;
5068&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_back = &[[code:bfreelist|bfreelist]]; &lt;br/&gt;
5069&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_forw = [[code:bfreelist|bfreelist]].b_forw; &lt;br/&gt;
5070&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bfreelist|bfreelist]].b_forw-&gt;b_back = bp; &lt;br/&gt;
5071&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bfreelist|bfreelist]].b_forw = bp; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*初始化 缓存管理结构
*将 该缓存 挂入[[设备队列#NODEV设备队列|NODEV设备队列]]
&lt;/div&gt;
5072&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_flags = B_BUSY; &lt;br/&gt;
5073&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*目的是将 该缓存 挂入[[自由队列]]
*5072 句不是很必要(引自 Lions源代码分析)
&lt;/div&gt;
5074&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5075&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下循环遍历[[code:bdevsw]]块设备数组
*bdp-&gt;d_open == 0 为数组结束条件
&lt;/div&gt;
5076&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (bdp = [[code:bdevsw|bdevsw]]; bdp-&gt;d_open; bdp++) { &lt;br/&gt;
5077&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = bdp-&gt;d_tab; &lt;br/&gt;
5078&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dp) { &lt;br/&gt;
5079&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp-&gt;b_forw = dp; &lt;br/&gt;
5080&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp-&gt;b_back = dp; &lt;br/&gt;
5081&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将每个块设备的[[设备队列]]清空
&lt;/div&gt;
5082&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; &lt;br/&gt;
5083&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5084&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:nblkdev|nblkdev]] = i; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 nblkdev 初始化为 块设备总数
&lt;/div&gt;
5085&nbsp;} &lt;br/&gt;
5086&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:main]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:binit by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bmap</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*给定文件中相应的块号返回该块的实际物理块号
*传入两个参数,ip,nb
**ip:文件对应的内存inode
**nb:指定的在文件中的相应块号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6407&nbsp;&lt;br/&gt;
6408&nbsp;/* Bmap defines the structure of file system storage &lt;br/&gt;
6409&nbsp;&nbsp;* by returning the physical block number on a device given  &lt;br/&gt;
6410&nbsp;&nbsp;* the inode and the logical block number in a file. &lt;br/&gt;
6411&nbsp;&nbsp;* When convenient, it also leaves the physical &lt;br/&gt;
6412&nbsp;&nbsp;* block number of the next block of the file in rablock     &lt;br/&gt;
6413&nbsp;&nbsp;* for use in read-ahead. &lt;br/&gt;
6414&nbsp;&nbsp;*/ &lt;br/&gt;
6415&nbsp;bmap(ip, bn) &lt;br/&gt;
6416&nbsp;[[code:struct inode|struct inode]] *ip; &lt;br/&gt;
6417&nbsp;int bn; &lt;br/&gt;
6418&nbsp;{ &lt;br/&gt;
6419&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *bp, *bap, nb; &lt;br/&gt;
6420&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int *nbp, d, i; &lt;br/&gt;
6421 &lt;br/&gt;
6422&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = ip-&gt;i_dev; &lt;br/&gt;
6423&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bn & ~077777) { &lt;br/&gt;
6424&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EFBIG; &lt;br/&gt;
6425&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
6426&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6427&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ip-&gt;i_mode&ILARG) == 0) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断是否含ILARG标志,包含表明为大文件.详见[[file:ino.h|ino.h]]
&lt;/div&gt;
6428 &lt;br/&gt;
6429&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* small file algorithm */ &lt;br/&gt;
6430 &lt;br/&gt;
6431&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((bn & ~7) != 0) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断块号是否大于七,(小于则仍为小型文件,大于表明要进行扩展)
&lt;/div&gt;
6432 &lt;br/&gt;
6433&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* convert small to large */ &lt;br/&gt;
6434 &lt;br/&gt;
6435&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((bp = [[code:alloc|alloc]](d)) == NULL) &lt;br/&gt;
6436&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
6437&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bap = bp-&gt;b_addr; &lt;br/&gt;
6438&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i&lt;8; i++) { &lt;br/&gt;
6439&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*bap++ = ip-&gt;i_addr[i]; &lt;br/&gt;
6440&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_addr[i] = 0; &lt;br/&gt;
6441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6442&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_addr[0] = bp-&gt;b_blkno; &lt;br/&gt;
6443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bdwrite|bdwrite]](bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处之所以要写将bp写回是因为在调用[[code:alloc|alloc]](d)时清空了bp的内容,此时bp的内容与磁盘上对应块的内容不同,于是采取延迟写策略写回磁盘
&lt;/div&gt;
6444&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_mode &lt;nowiki&gt;=|&lt;/nowiki&gt; ILARG; &lt;br/&gt;
6445&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto large; &lt;br/&gt;
6446&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6447&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nb = ip-&gt;i_addr[bn]; &lt;br/&gt;
6448&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(nb == 0 && (bp = [[code:alloc|alloc]](d)) != NULL) { &lt;br/&gt;
6449&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bdwrite|bdwrite]](bp); &lt;br/&gt;
6450&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nb = bp-&gt;b_blkno; &lt;br/&gt;
6451&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_addr[bn] = nb; &lt;br/&gt;
6452&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; IUPD; &lt;br/&gt;
6453&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6454&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rablock = 0; &lt;br/&gt;
6455&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bn&lt;7) &lt;br/&gt;
6456&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rablock = ip-&gt;i_addr[bn+1]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果bn指示的块号小于7,则将预读块置为其下一块的物理地址.关于rablock的定义,见[[file:systm.h|systm.h]]第235行
&lt;/div&gt;
6457&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(nb); &lt;br/&gt;
6458&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6459  &lt;br/&gt;
6460    /* large file algorithm */ &lt;br/&gt;
6461 &lt;br/&gt;
6462&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;large:  &lt;br/&gt;
6463&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = bn&gt;&gt;8; &lt;br/&gt;
6464&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bn & 0174000) &lt;br/&gt;
6465&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 7; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若bn &gt;= 8*256,则(i = bn&gt;&gt;8)  &gt;= 8,此时将i置为7
&lt;/div&gt;
6466&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((nb=ip-&gt;i_addr[i]) == 0) { &lt;br/&gt;
6467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; IUPD; &lt;br/&gt;
6468&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((bp = [[code:alloc|alloc]](d)) == NULL) &lt;br/&gt;
6469&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
6470&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_addr[i] = bp-&gt;b_blkno; &lt;br/&gt;
6471&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
6472&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]](d, nb); &lt;br/&gt;
6473&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bap = bp-&gt;b_addr; &lt;br/&gt;
6474 &lt;br/&gt;
6475&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* "huge" fetch of double indirect block */ &lt;br/&gt;
6476 &lt;br/&gt;
6477&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(i == 7) { &lt;br/&gt;
6478&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = ((bn&gt;&gt;8) & 0377) - 7; &lt;br/&gt;
6479&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((nb=bap[i]) == 0) { &lt;br/&gt;
6480&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((nbp = alloc(d)) == NULL) { &lt;br/&gt;
6481&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
6482&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
6483&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6484&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bap[i] = nbp-&gt;b_blkno; &lt;br/&gt;
6485&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bdwrite|bdwrite]](bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*由于bp的内容已与磁盘中对应块中内容不符,故需延迟写回磁盘以更新
&lt;/div&gt;
6486&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { &lt;br/&gt;
6487&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
6488&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nbp = [[code:bread|bread]](d, nb); &lt;br/&gt;
6489&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6490&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = nbp; &lt;br/&gt;
6491&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bap = bp-&gt;b_addr; &lt;br/&gt;
6492&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6493 &lt;br/&gt;
6494&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* normal indirect fetch */ &lt;br/&gt;
6495 &lt;br/&gt;
6496&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = bn & 0377; &lt;br/&gt;
6497&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((nb=bap[i]) == 0 && (nbp = [[code:alloc|alloc]](d)) != NULL) { &lt;br/&gt;
6498&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nb = nbp-&gt;b_blkno; &lt;br/&gt;
6499&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bap[i] = nb; &lt;br/&gt;
6500&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bdwrite|bdwrite]](nbp); &lt;br/&gt;
6501&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bdwrite|bdwrite]](bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*由于bp,nbp的内容已与磁盘中对应块中内容不符,故需延迟写回磁盘以更新
&lt;/div&gt;
6502&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
6503&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
6504&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rablock = 0; &lt;br/&gt;
6505&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(i &lt; 255) &lt;br/&gt;
6506&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rablock = bap[i+1]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果bn指示的块号小于255,则将预读块置为其下一块的物理地址.关于rablock的定义,见[[file:systm.h|systm.h]]第235行
&lt;/div&gt;
6507&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(nb); &lt;br/&gt;
6508&nbsp;} &lt;br/&gt;
6509&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_bmap.png"/></p>
===Ref===
[[文件系统]]
===Caller===
*[[code:readi]]
*[[code:writei]]
*[[code:namei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bmap by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bread</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将指定设备指定块号的内容读入缓存池,并返回存放指定内容的缓存块[[code:struct buf|管理结构]]的指针
*传入两个参数dev,blkno
**dev:指定设备号
**blkno:指定块号
*返回 读取的缓存块
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4750&lt;br/&gt;
4751&nbsp;/* Read in (if necessary) the block and&lt;br/&gt;
4752&nbsp;&nbsp;* return a buffer pointer.&lt;br/&gt;
4753&nbsp;&nbsp;*/&lt;br/&gt;
4754&nbsp;bread(dev, blkno)&lt;br/&gt;
4755&nbsp;{&lt;br/&gt;
4756&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp;&lt;br/&gt;
4757&lt;br/&gt;
4758&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = [[code:getblk|getblk]](dev, blkno);&lt;br/&gt;
4759&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rbp-&gt;b_flags&B_DONE)&lt;br/&gt;
4760&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(rbp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用[[code:getblk|getblk]]获取一个指向缓存块[[code:struct buf|管理结构]]的指针
*若标志位中包含B_DONE,表明所得缓存块中已经包含要读取的信息
**此时直接返回指向该缓存块[[code:struct buf|管理结构]]的指针
&lt;/div&gt;
4761&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_flags =&lt;nowiki&gt;|&lt;/nowiki&gt; B_READ;&lt;br/&gt;
4762&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_wcount = -256;&lt;br/&gt;
4763&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][dev[[skill:.d_major|.d_major]] ].d_strategy)(rbp);&lt;br/&gt;
4764&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iowait|iowait]](rbp);&lt;br/&gt;
4765&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(rbp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若标志位中不含B_DONE,表明所得缓存块还未读入待读取的信息
**此时将标志位置B_READ
**将传输字节数 设置为512字节，计数寄存器要求传入补码（-256 = 512的补码）
**将缓存块放入设备I/O队列,启动设备
***此处使用 [[编程技巧#无名结构|编程技巧之无名结构]]，结构定义在 [[File:conf.h|conf.h]] 
**等待I/O操作结束后,返回指向该缓存块[[code:struct buf|管理结构]]的指针
&lt;/div&gt;
4766 }&lt;br/&gt;
4767&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:wait]]
*[[code:breada]]
*[[code:stat1]]
*[[code:smount]]
*[[code:readi]]
*[[code:writei]]
*[[code:bmap]]
*[[code:iinit]]
*[[code:alloc]]
*[[code:ialloc]]
*[[code:iget]]
*[[code:iupdat]]
*[[code:itrunc]]
*[[code:namei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bread by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:breada</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*从指定设备，读取块并预读块
*共传入三个参数 adev blkno rablkno
**adev : 指定设备号
**blkno : 读取块的块号
**rablkno : 预读块的块号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4768 &lt;br/&gt;
4769&nbsp;/* &lt;br/&gt;
4770&nbsp;&nbsp;* Read in the block, like bread, but also start I/O on the &lt;br/&gt;
4771&nbsp;&nbsp;* read-ahead block (which is not allocated to the caller) &lt;br/&gt;
4772&nbsp;&nbsp;*/ &lt;br/&gt;
4773&nbsp;breada(adev, blkno, rablkno) &lt;br/&gt;
4774&nbsp;{ &lt;br/&gt;
4775&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp, *rabp; &lt;br/&gt;
4776&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int dev; &lt;br/&gt;
4777 &lt;br/&gt;
4778&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dev = adev; &lt;br/&gt;
4779&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = 0; &lt;br/&gt;
4780&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (![[code:incore|incore]](dev, blkno)) { &lt;br/&gt;
4781&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = [[code:getblk|getblk]](dev, blkno); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*在指定设备的[[设备队列]]中 查找匹配 blkno 的缓存块 （[[code:incore|incore]])
*如找不到，则调用 [[code:getblk|getblk]] 申请可用缓存块
&lt;/div&gt;
4782&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((rbp-&gt;b_flags&B_DONE) == 0) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处参看 [[code:breada#讨论|讨论]]
&lt;/div&gt;
4783&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_flags &lt;nowiki&gt;=| &lt;/nowiki&gt;B_READ; &lt;br/&gt;
4784&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_wcount = -256; &lt;br/&gt;
4785&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][adev[[skill:.d_major|.d_major]] ].d_strategy)(rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 B_READ 标志，置传输字节数
*启动 设备驱动进行I/O
*在此不等待I/O结束，而是在函数末尾调用 [[code:iowait|iowait]]等待I/O，以提高效率
&lt;/div&gt;
4786&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4787&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下进行预读块处理
&lt;/div&gt;
4788&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rablkno && ![[code:incore|incore]](dev, rablkno)) { &lt;br/&gt;
4789&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rabp = [[code:getblk|getblk]](dev, rablkno); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*在指定设备的[[设备队列]]中 查找匹配 rablkno 的缓存块 （[[code:incore|incore]])
*如找不到，则调用 [[code:getblk|getblk]] 申请可用缓存块
&lt;/div&gt;
4790&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rabp-&gt;b_flags & B_DONE) &lt;br/&gt;
4791&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](rabp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处参看 [[code:breada#讨论|讨论]]
&lt;/div&gt;
4792&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else { &lt;br/&gt;
4793&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rabp-&gt;b_flags &lt;nowiki&gt;=|B_READ|B_ASYNC;&lt;/nowiki&gt; &lt;br/&gt;
4794&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rabp-&gt;b_wcount = -256; &lt;br/&gt;
4795&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][adev[[skill:.d_major|.d_major]] ].d_strategy)(rabp); &lt;br/&gt;
4796&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 B_READ B_ASYNC 标志，置传输字节数
*启动 设备驱动进行异步I/O
*由于预读块是异步I/O,在此不等待I/O结束
&lt;/div&gt;
4797&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4798&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rbp==0) &lt;br/&gt;
4799&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return([[code:bread|bread]](dev, blkno)); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若rbp == 0 ,说明直接从 指定设备[[设备队列]]中找到了读取块的缓存
*调用[[code:bread|bread]]读出此缓存
&lt;/div&gt;
4800&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iowait|iowait]](rbp); &lt;br/&gt;
4801&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*否则，等待读取块 I/O结束，返回块缓存
&lt;/div&gt;
4802&nbsp;} &lt;br/&gt;
4803&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=讨论=
*以下是关于4782行，4790 - 4791行的讨论
*以4782行为例
:4780行调用[[code:incore|incore]]，已经完成了[[code:getblk|getblk]]中查找现成缓存块的工作(4937 - 4950)
:所以4781调用[[code:getblk|getblk]]的作用仅是申请缓存块
:那么4782的判断显得有些多余，因为申请的缓存块不可能置B_DONE标志
:4790 - 4791行结论类似
*第二种观点认为
:[[code:incore|incore]]和 [[code:getblk|getblk]]之间可能存在 I/O中断（比如I/O完成），释放了缓存块，所以才由4782进行判断
:但这种可能性存在可能性很小，比起每次都进行4782的判断，显得开销入不敷出
*此处被列入[[遗留问题]]
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_breada.png"/></p>

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:readi]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:breada by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:brelse</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*释放指定的缓存块
**唤醒所有等待使用该缓存块的进程
**唤醒所有等待可用缓存块的进程
**清除该块 B_WANTED B_BUSY B_ASYN 标志
**将该块插入[[自由队列]]队尾
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4866 &lt;br/&gt;
4867&nbsp;/* release the buffer, with no I/O implied. &lt;br/&gt;
4868&nbsp;&nbsp;*/ &lt;br/&gt;
4869&nbsp;brelse(bp) &lt;br/&gt;
4870&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
4871&nbsp;{ &lt;br/&gt;
4872&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp, **backp; &lt;br/&gt;
4873&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int sps; &lt;br/&gt;
4874 &lt;br/&gt;
4875&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp; &lt;br/&gt;
4876&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rbp-&gt;b_flags&B_WANTED) &lt;br/&gt;
4877&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*唤醒所有等待使用该缓存块的进程
&lt;/div&gt;
4878&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[File:buf.h|bfreelist]].b_flags&B_WANTED) { &lt;br/&gt;
4879&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[File:buf.h|bfreelist]].b_flags =& ~B_WANTED; &lt;br/&gt;
4880&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&[[File:buf.h|bfreelist]]); &lt;br/&gt;
4881&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*唤醒所有等待可用缓存块的进程
*这些进程在[[睡眠原因#bfreelist|bfreelist]]上睡眠(bfreelist此时为空，且置标志B_WANTED),参看[[睡眠原因#bfreelist|睡眠原因]]
&lt;/div&gt;
4882&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rbp-&gt;b_flags&B_ERROR) &lt;br/&gt;
4883&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_dev[[skill:.d_minor|.d_minor]] = -1;  /* no assoc. on error */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果该缓存块存在错误，作此操作 防止进程错误引用此块
*(以上引自 Lions 代码分析)
&lt;/div&gt;
4884&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backp = &[[File:buf.h|bfreelist]].av_back; &lt;br/&gt;
4885&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sps = PS[[skill:integ|-&gt;integ]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[PS]]保存到sps
&lt;/div&gt;
4886&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级设为6
&lt;/div&gt;
4887&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_flags =& &lt;nowiki&gt;~(B_WANTED|B_BUSY|B_ASYNC); &lt;/nowiki&gt;&lt;br/&gt;
4888&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*backp)-&gt;av_forw = rbp; &lt;br/&gt;
4889&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;av_back = *backp; &lt;br/&gt;
4890&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*backp = rbp; &lt;br/&gt;
4891&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;av_forw = &[[File:buf.h|bfreelist]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清除该块 B_WANTED B_BUSY B_ASYN 标志
*将该块插入[[自由队列]]队尾
&lt;/div&gt;
4892&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS[[skill:integ|-&gt;integ]] = sps; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从sps还原[[PS]]
*还原[[PS]] 相当于 开中断
&lt;/div&gt;

4893&nbsp;} &lt;br/&gt;
4894&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:exec]]
*[[code:wait]]
*[[code:breada]]
*[[code:bwrite]]
*[[code:bdwrite]]
*[[code:iodone]]
*[[code:binit]]
*[[code:stat1]]
*[[code:smount]]
*[[code:sumount]]
*[[code:readi]]
*[[code:writei]]
*[[code:bmap]]
*[[code:iinit]]
*[[code:alloc]]
*[[code:ialloc]]
*[[code:iget]]
*[[code:itrunc]]
*[[code:namei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:brelse by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:bwrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class = "wikiheadnote"&gt;
*将指定缓存块中的内容写回设备
*共传入一个参数 bp
**bp : [[code:struct buf|struct buf]]结构，是 欲写入缓存块的控制结构
&lt;/div&gt;
&lt;div class = "wikicode"&gt;
4804&lt;br/&gt;
4805&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
4806&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Write the buffer, waiting for completion.&lt;br/&gt;
4807&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The release the buffer.&lt;br/&gt;
4808&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
4809&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bwrite(bp)&lt;br/&gt;
4810&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|struct buf]] *bp;&lt;br/&gt;
4811&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&lt;br/&gt;
4812&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp;&lt;br/&gt;
4813&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register flag;&lt;br/&gt;
4814&lt;br/&gt;
4815&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp;&lt;br/&gt;
4816&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = rbp-&gt;b_flags;&lt;br/&gt;
4817&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_flags&lt;nowiki&gt; =& ~(B_READ | B_DONE | B_ERROR | B_DELWRI); &lt;/nowiki&gt;&lt;br/&gt;
4818&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_wcount = -256;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清 B_READ  B_DONE  B_ERROR  B_DELWRI 标志
*将传输字节数 设置为512字节，计数寄存器要求传入补码，-256 = 512的补码
&lt;/div&gt;
4819&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][rbp-&gt;b_dev[[skill:.d_major|.d_major]] ].d_strategy)(rbp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*启动 设备驱动函数 处理此缓存块
**将缓存块置入 [[设备I/O队列]]
**启动设备
&lt;/div&gt;
4820&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((flag&B_ASYNC) == 0) {&lt;br/&gt;
4821&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iowait|iowait]](rbp);&lt;br/&gt;
4822&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](rbp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*当没有异步写标志时,表明该次为同步写
*等待该次写操作I/O完成
*释放该缓存快
&lt;/div&gt;
4823&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if ((flag&B_DELWRI)==0)&lt;br/&gt;
4824&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:geterror|geterror]](rbp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若有异步写(B_ASYNC)标志,则不用等待该次I/O完成
**当无延迟写(B_DELWRI)标志时,表明该缓存块只有当前进程修改过,[[code:geterror|geterror]]将错误信息传给[[code:user|user]]结构，返回给用户
**当有延迟写(B_DELWRI)标志时,表明该缓存块可能被多个进程修改过.若出错则无法判断是哪个进程出错&lt;br/&gt;若调用[[code:geterror|geterror]]则只向现行进程报错,会产生歧义.&lt;br/&gt;对于这种情况，索性就不报错
&lt;/div&gt;
4825&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
4826&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;
===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_bwrite_1.png"/></p>

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:exit]]
*[[code:bawrite]]
*[[code:getblk]]
*[[code:bflush]]
*[[code:free]]
*[[code:update]]
*[[code:iupdat]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:bwrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:call</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[code:0751 ~ 0805]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:call by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:call1</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[code:0751 ~ 0805]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:call1 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:callout</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[file:systm.h]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:callout by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:canon</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*取出tty原始队列中的内容(直到遇到定界符或者[[code:canonb|canonb]]数组已满),经过处理后导入tty非原始队列
*传入1个参数:
**atp:指定[[code:struct tty|tty]]
*返回值:
**若导入成功,返回1
**否则,返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8269&nbsp;/* transfer raw input list to canonical list,&lt;br/&gt;
8270&nbsp;&nbsp;* doing erase-kill processing and handling escapes.&lt;br/&gt;
8271&nbsp;&nbsp;* It waits until a full line has been typed in cooked mode,&lt;br/&gt;
8272&nbsp;&nbsp;* or until any character has been typed in raw mode.&lt;br/&gt;
8273&nbsp;&nbsp;*/&lt;br/&gt;
8274&nbsp;canon(atp)&lt;br/&gt;
8275&nbsp;struct tty *atp;&lt;br/&gt;
8276&nbsp;{&lt;br/&gt;
8277&nbsp;&nbsp;&nbsp;&nbsp;register char *bp;&lt;br/&gt;
8278&nbsp;&nbsp;&nbsp;&nbsp;char *bp1;&lt;br/&gt;
8279&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp;&lt;br/&gt;
8280&nbsp;&nbsp;&nbsp;&nbsp;register int c;&lt;br/&gt;
8282&nbsp;&nbsp;&nbsp;&nbsp;tp = atp;&lt;br/&gt;
8283&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]5();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级设为5
&lt;/div&gt;
8284&nbsp;&nbsp;&nbsp;&nbsp;while ([[code:struct tty|tp-&gt;t_delct]]==0) {&lt;br/&gt;
8285&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:struct tty|tp-&gt;t_state]]&CARR_ON)==0)&lt;br/&gt;
8286&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0);&lt;br/&gt;
8287&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&tp-&gt;t_rawq, TTIPRI);&lt;br/&gt;
8288&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若定界符数为0
**若该中断在逻辑上不存在,直接返回
**否则睡眠
***[[睡眠原因|睡眠原因:struct clist]]
***[[睡眠优先级]]:TTIPRI
&lt;/div&gt;
8289&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
8291&nbsp;&nbsp;&nbsp;&nbsp;bp = &canonb[2];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*用bp指示字符插入[[code:canonb|canonb]]数组的位置,此处以数组第三个字符的位置为开头,这样做的原因是防止后面bp[-2]寻址时溢出
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*8284 - 8318:
*这是一个循环,每次从原始队列中取一个字符,并且进行相应处理
&lt;/div&gt;
8292&nbsp;&nbsp;&nbsp;&nbsp;while ((c=[[code:getc|getc]](&[[code:struct tty|tp-&gt;t_rawq]])) &gt;= 0) {&lt;br/&gt;
8293&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c==0377) {&lt;br/&gt;
8294&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct tty|tp-&gt;t_delct]]--;&lt;br/&gt;
8295&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&lt;br/&gt;
8296&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若取出的是定界符,则定界符数减1
*退出循环
&lt;/div&gt;
8297&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:struct tty|tp-&gt;t_flags]]&RAW)==0) {&lt;br/&gt;
8298&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp[-1]!='\\') {&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若终端使用原始方式工作,且前一个字符不是转意字符
&lt;/div&gt;
8299&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c==[[code:struct tty|tp-&gt;t_erase]]) {&lt;br/&gt;
8300&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp &gt; &[[code:canonb|canonb]][2])&lt;br/&gt;
8301&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp--;&lt;br/&gt;
8302&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;&lt;br/&gt;
8303&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若读入的为'擦去字符'编辑功能字符,且有可以删除的字符
**则bp退回一个字符位置,开始下一次循环
&lt;/div&gt;
8304&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c==[[code:struct tty|tp-&gt;t_kill]])&lt;br/&gt;
8305&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若读入的为'删除当前行'编辑功能字符
**放弃当前积累起的所有字符,回到8290行,从头开始
&lt;/div&gt;
8306&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c==CEOT)&lt;br/&gt;
8307&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若读入的字符为'eot'编辑功能字符
**忽略该字符该字符,开始下一次循环
&lt;/div&gt;
8308&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else&lt;br/&gt;
&lt;div class="wikinote"&gt;
*8309 - 8314:是对前一字符是转移字符的处理
&lt;/div&gt;
8309&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:maptab|maptab]][c] && ([[code:maptab|maptab]][c]==c &lt;nowiki&gt;||&lt;/nowiki&gt; ([[code:struct tty|tp-&gt;t_flags]]&LCASE))) {&lt;br/&gt;
8310&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp[-2] != '\\')&lt;br/&gt;
8311&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = [[code:maptab|maptab]][c];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进行转义字符的处理
&lt;/div&gt;
8312&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp--;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*bp退回一个字符位置
&lt;/div&gt;
8313&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
8314&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;

8315&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*bp++ = c;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将读出的字符放入[[code:canonb|canonb]]数组中,位由bp所指示
&lt;/div&gt;
8316&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp&gt;=[[code:canonb|canonb]]+CANBSIZ)&lt;br/&gt;
8317&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若[[code:canonb|canonb]]数组已满,则退出循环
&lt;/div&gt;
8318&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
8319&nbsp;&nbsp;&nbsp;&nbsp;bp1 = bp;&lt;br/&gt;
8320&nbsp;&nbsp;&nbsp;&nbsp;bp = &[[code:canonb|canonb]][2];&lt;br/&gt;
8321&nbsp;&nbsp;&nbsp;&nbsp;c = &[[code:struct tty|tp-&gt;t_canq]];&lt;br/&gt;
8322&nbsp;&nbsp;&nbsp;&nbsp;while (bp&lt;bp1)&lt;br/&gt;
8323&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:putc|putc]](*bp++, c);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[code:canonb|canonb]]数组中的字符一个个全部加入到非原始输入队列中
&lt;/div&gt;
8324&nbsp;&nbsp;&nbsp;&nbsp;return(1);&lt;br/&gt;
8325&nbsp;}&lt;br/&gt;
8326&nbsp;/* -------------------------   */&lt;br/&gt;

===Caller===
*[[code:ttread]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:canon by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:canonb</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[file:systm.h]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:canonb by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:cdevsw</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*字符设备 设备驱动表
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4632&lt;br/&gt;
4633&nbsp;/* Character device switch.&lt;br/&gt;
4634&nbsp;&nbsp;*/&lt;br/&gt;
4635&nbsp;struct     cdevsw  {&lt;br/&gt;
4636&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*d_open)();&lt;br/&gt;
4637&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*d_close)();&lt;br/&gt;
4638&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*d_read)();&lt;br/&gt;
4639&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*d_write)();&lt;br/&gt;
4640&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*d_sgtty)();&lt;br/&gt;
4641&nbsp;} cdevsw[];&lt;br/&gt;
4642&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4668&lt;br/&gt;
4669&nbsp;int (*cdevsw[])()&lt;br/&gt;
4670&nbsp;{&lt;br/&gt;
4671&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:klopen|klopen]], &[[code:klclose|klclose]], &[[code:klread|klread]], &[[code:klwrite|klwrite]], &[[code:klsgtty|klsgtty]],&lt;br/&gt;
4672&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* console */ &lt;br/&gt;
4673&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:pcopen|pcopen]], &[[code:pcclose|pcclose]], &[[code:pcread|pcread]], &[[code:pcwrite|pcwrite]], &[[code:nodev|nodev]],&lt;br/&gt;
4674&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* pc */ &lt;br/&gt;
4675&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:lpopen|lpopen]], &[[code:lpclose|lpclose]], &[[code:nodev|nodev]], &[[code:lpwrite|lpwrite]], &[[code:nodev|nodev]],&lt;br/&gt;
4676&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* lp */ &lt;br/&gt;
4677&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* dc */&lt;br/&gt;
4678&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* dh */&lt;br/&gt;
4679&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* dp */&lt;br/&gt;
4680&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* dj */&lt;br/&gt;
4681&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* dn */&lt;br/&gt;
4682&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nulldev|nulldev]], &[[code:nulldev|nulldev]], &[[code:mmread|mmread]], &[[code:mmwrite|mmwrite]], &[[code:nodev|nodev]],&lt;br/&gt;
4683&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* mem */ &lt;br/&gt;
4684&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nulldev|nulldev]], &[[code:nulldev|nulldev]], &[[code:rkread|rkread]], &[[code:rkwrite|rkwrite]], &[[code:nodev|nodev]],&lt;br/&gt;
4685&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* rk */ &lt;br/&gt;
4686&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* rf */&lt;br/&gt;
4687&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* rp */&lt;br/&gt;
4688&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* tm */&lt;br/&gt;
4689&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* hs */&lt;br/&gt;
4690&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* hp */&lt;br/&gt;
4691&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&[[code:nodev|nodev]], &[[code:nodev|nodev]], &[[code:nodev|nodev]],  &[[code:nodev|nodev]],  &[[code:nodev|nodev]], /* ht */&lt;br/&gt;
4692&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&lt;br/&gt;
4693&nbsp;};&lt;br/&gt;
4694&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[字符设备管理]]

===Caller===
*[[code:readi]]
*[[code:writei]]
*[[code:closei]]
*[[code:openi]]
*[[code:sgtty]]
*[[code:cinit]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:cdevsw by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:cfree</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[file:tty.c]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:cfree by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:cfreelist</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[file:tty.c]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:cfreelist by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:chdir</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*转到一个指定的目录下
*从用户态传入一个参数name
**name:要转到的目录的路径名
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3537&lt;br/&gt;
3538&nbsp;chdir()&lt;br/&gt;
3539&nbsp;{&lt;br/&gt;
3540&nbsp;&nbsp;&nbsp;&nbsp;register *ip;&lt;br/&gt;
3541&nbsp;&nbsp;&nbsp;&nbsp;extern [[code:uchar|uchar]];&lt;br/&gt;
3542&lt;br/&gt;
3543&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:namei|namei]](&[[code:uchar|uchar]], 0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*获取所要切换目录的INODE,赋给ip
&lt;/div&gt;
3544&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]] == NULL)&lt;br/&gt;
3545&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若所要切换的目录不存在,直接返回
&lt;/div&gt;
3546&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct inode|ip]]-&gt;i_mode&IFMT) != IFDIR) {&lt;br/&gt;
3547&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENOTDIR;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若所找到的INODE不是一个目录文件,则跑出错误
**[[错误代码]]:ENOTDIR
*用法参看 [[文件系统#inode类型]]
&lt;/div&gt;
3548&nbsp;&nbsp;&nbsp;&nbsp;bad:&lt;br/&gt;
3549&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]);&lt;br/&gt;
3550&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处为 当前用户对所找到的目录没有执行权限的 出错处理
**调用[[code:iput|iput]]函数对INODE进行处理,然后返回
&lt;/div&gt;
3551&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
3552&nbsp;&nbsp;&nbsp;&nbsp;if([[code:access|access]]([[code:struct inode|ip]], IEXEC))&lt;br/&gt;
3553&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若当前用户对所找到的目录没有执行权限,则跳转至3548,进行出错处理
&lt;/div&gt;
3554&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:user|u.u_cdir]]);&lt;br/&gt;
3555&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cdir]] = [[code:struct inode|ip]];&lt;br/&gt;
3556&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]]([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若通过了执行权限检查
**将当前目录INODE的勾连数-1
**将当前目录INODE 置为ip(指定目录的INODE)
**解锁INODE(调用namei时被置锁)
&lt;/div&gt;
3557&nbsp;}&lt;br/&gt;
3558&nbsp;/* -------------------------  */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Param===
:(chdir = 12.)
:&lt;b&gt;sys chdir; dirname&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:chdir by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:chmod</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*chmod 系统调用 的 实现函数
*改变指定文件或目录的访问权限
*从用户态传入2个参数
**参数1: name ,文件或目录的路径名 -&gt; u.u_arg[0]
**参数2: mode ,希望变成的访问模式 -&gt; u.u_arg[1]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3559&lt;br/&gt;
3560&nbsp;chmod()&lt;br/&gt;
3561&nbsp;{&lt;br/&gt;
3562&nbsp;&nbsp;&nbsp;&nbsp;register *ip;&lt;br/&gt;
3563&lt;br/&gt;
3564&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:struct inode|ip]] = [[code:owner|owner]]()) == NULL)&lt;br/&gt;
3565&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*检查当前用户是否是文件的拥有者或者是超级用户
**若不是或者无法根据name指示的路径找到相应INODE,直接返回
**否则,ip=通过name得到的INODE
&lt;/div&gt;
3566&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip-&gt;i_mode]] =& ~07777;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将ip-&gt;i_mode的最后12位(与访问权限有关的位)清空
&lt;/div&gt;
3567&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:user|u.u_uid]])&lt;br/&gt;
3568&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][1] =& ~ISVTX;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若当前用户不是超级用户
**清除传入参数mode中的ISVTX标志,参看[[file:inode.h|inode.h]]
&lt;/div&gt;
3569&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip-&gt;i_mode]] =&lt;nowiki&gt;|&lt;/nowiki&gt; [[code:user|u.u_arg]][1]&07777;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将传入的参数mode的后12位赋给ip-&gt;i_mode
&lt;/div&gt;
3570&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip-&gt;i_flag]] =&lt;nowiki&gt;|&lt;/nowiki&gt; IUPD;&lt;br/&gt;
3571&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip-&gt;i_flag置上IUPD标志,表明该INODE被修改过
*调用iput使ip-&gt;i_count -1,(抵消3564调用owner时间接调用namei而 导致的ip-&gt;i_count +1)
&lt;/div&gt;
3572&nbsp;}&lt;br/&gt;
3573&nbsp;/* ------------------------- */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Param===
:(chmod = 15.)
:&lt;b&gt;sys chmod; name; mode&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:chmod by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:chown</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*改变文件的拥有者和拥有组
*传入两个参数
**参数1:name 文件或者目录路径名 
**参数2:owner 低八位为文件拥有者,高八位为文件的拥有组
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3574&lt;br/&gt;
3575&nbsp;chown()&lt;br/&gt;
3576&nbsp;{&lt;br/&gt;
3577&nbsp;&nbsp;&nbsp;&nbsp;register *ip;&lt;br/&gt;
3578&lt;br/&gt;
3579&nbsp;&nbsp;&nbsp;&nbsp;if (![[code:suser|suser]]() &lt;nowiki&gt;||&lt;/nowiki&gt; (ip = [[code:owner|owner]]()) == NULL)&lt;br/&gt;
3580&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若当前用户不是超级用户或者不是当前文件的拥有者或者由name指示的INODE不存在
**直接返回
*否则
**[[code:struct inode|ip]] = 文件名为name的INODE
&lt;/div&gt;
3581&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_uid = [[code:user|u.u_arg]][1].lobyte;&lt;br/&gt;
3582&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_gid = [[code:user|u.u_arg]][1].hibyte;&lt;br/&gt;
3583&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag =&lt;nowiki&gt;|&lt;/nowiki&gt; IUPD;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip-&gt;i_uid = owner的低8位(文件拥有者)
*ip-&gt;i_gid = owner的高8位(文件拥有组)
**此处使用了[[编程技巧#无名结构|编程技巧之无名结构]]
*置IUPD标志
&lt;/div&gt;
3584&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用iput对ip进行i_count减1操作,这是因为在3579行调用owner时间接调用了namei,使得i_count加了1
&lt;/div&gt;
3585&nbsp;}&lt;br/&gt;
3586 /* -------------------------  */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Param===
:(chmod = 16.)
:&lt;b&gt;sys chown; name; owner&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:chown by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:cinit</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*本过程仅由[[code:main|main]]函数调用一次
*作用为:
**1.初始化[[字符设备管理#自由字符缓存队列|自由字符缓存队列]],并进行了[[字符设备管理#缓存池的改造|缓存池的改造]]
**2.统计字符设备类型数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8231&nbsp;/* Initialize clist by freeing all character blocks, & count 8281&lt;br/&gt;
8232&nbsp;&nbsp;* number of character devices. (Once-only routine)&lt;br/&gt;
8233&nbsp;&nbsp;*/&lt;br/&gt;
8234&nbsp;cinit()&lt;br/&gt;
8235&nbsp;{&lt;br/&gt;
8236&nbsp;&nbsp;&nbsp;&nbsp;register int ccp;&lt;br/&gt;
8237&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct cblock|struct cblock]] *cp;&lt;br/&gt;
8238&nbsp;&nbsp;&nbsp;&nbsp;register [[code:cdevsw|struct cdevsw]] *cdp;&lt;br/&gt;
8239&nbsp;&nbsp;&nbsp;&nbsp;ccp = cfree;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*ccp 指向 [[code:cfree|cfree]]数组的头部
&lt;/div&gt;
8240&nbsp;&nbsp;&nbsp;&nbsp;for (cp=(ccp+07)&~07; cp &lt;= &[[code:cfree|cfree]][NCLIST-1]; cp++) {&lt;br/&gt;
8241&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp-&gt;c_next = [[code:cfreelist|cfreelist]];&lt;br/&gt;
8242&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:cfreelist|cfreelist]] = cp;&lt;br/&gt;
8243&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*寻找[[code:cfree|cfree]]数组中第一个为8整数倍的地址
*将该地址作为第一个字符缓存的起始地址,并顺次构成接下来的缓存,依次加入到[[字符设备管理#自由字符缓存队列|自由字符缓存队列]]中
*参看[[字符设备管理#缓存池的改造|缓存池的改造]]
&lt;/div&gt;
8244&nbsp;&nbsp;&nbsp;&nbsp;ccp = 0;&lt;br/&gt;
8245&nbsp;&nbsp;&nbsp;&nbsp;for(cdp = [[code:cdevsw|cdevsw]]; cdp-&gt;d_open; cdp++)&lt;br/&gt;
8246&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ccp++;&lt;br/&gt;
8247&nbsp;&nbsp;&nbsp;&nbsp;[[code:nchrdev|nchrdev]] = ccp;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:cdevsw|cdevsw]]数组,统计字符设备 数,并赋给 [[code:nchrdev|nchrdev]]
&lt;/div&gt;
8248&nbsp;}&lt;br/&gt;
8249&nbsp;/* -------------------------  */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[字符设备管理]]

===Caller===
*[[code:main]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:cinit by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:clearseg</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 内存 第i块 64字节 置零
*输入一个参数 i
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0674&nbsp;/* ------------------------- */ &lt;br/&gt;
0675&nbsp;.globl     _clearseg&lt;br/&gt;
0676&nbsp;_clearseg:&lt;br/&gt;
0677&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     PS,-(sp)&lt;br/&gt;
0678&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     UISA0,-(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*PS UISA0 保护入栈
*UISD0 将在0681 保护入栈
*以上 将在0689 还原
&lt;/div&gt;
0679&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $30340,PS&lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 PS
**处理机优先级 置 7，[[关中断]]
**先前态 置 用户态
**当前态 置 核心态
&lt;/div&gt;
0680&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     6(sp),UISA0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*UISA0 ← i
&lt;/div&gt;
0681&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     UISD0,-(sp)&lt;br/&gt;
0682&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $6,UISD0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*UISD0 ← 6
**置段 为 可读写
&lt;/div&gt;
0683&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     r0&lt;br/&gt;
0684&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $32.,r1&lt;br/&gt;
0685&nbsp;1:&lt;br/&gt;
0686&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     -(sp)&lt;br/&gt;
0687&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MTPI|mtpi]]    (r0)+&lt;br/&gt;
0688&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SOB|sob]]     r1,1b&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 第i块64字节置零
&lt;/div&gt;
0689&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,UISD0&lt;br/&gt;
0690&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,UISA0&lt;br/&gt;
0691&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,PS&lt;br/&gt;
0692&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
0693&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:main]]
*[[code:exec]]
*[[code:sbreak]]
*[[code:grow]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:clearseg by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:clock</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
3708 &lt;br/&gt;
3709&nbsp;/* &lt;br/&gt;
3710&nbsp;&nbsp;* clock is called straight from &lt;br/&gt;
3711&nbsp;&nbsp;* the real time clock interrupt. &lt;br/&gt;
3712&nbsp;&nbsp;* &lt;br/&gt;
3713&nbsp;&nbsp;* Functions: &lt;br/&gt;
3714&nbsp;&nbsp;* reprime clock &lt;br/&gt;
3715&nbsp;&nbsp;* copy *switches to display &lt;br/&gt;
3716&nbsp;&nbsp;* implement callouts &lt;br/&gt;
3717&nbsp;&nbsp;* maintain user/system times &lt;br/&gt;
3718&nbsp;&nbsp;* maintain date &lt;br/&gt;
3719&nbsp;&nbsp;* profile &lt;br/&gt;
3720&nbsp;&nbsp;* tout wakeup (sys sleep) &lt;br/&gt;
3721&nbsp;&nbsp;* lightning bolt wakeup (every 4 sec) &lt;br/&gt;
3722&nbsp;&nbsp;* alarm clock signals &lt;br/&gt;
3723&nbsp;&nbsp;* jab the scheduler &lt;br/&gt;
3724&nbsp;&nbsp;*/ &lt;br/&gt;
3725&nbsp;clock(dev, sp, r1, nps, r0, pc, ps) &lt;br/&gt;
&lt;div class="wikinote"&gt;
总体思想
*将 整体处理 划分为几部分，划分标准
**处理机优先级是否为0 (是否有更重要的任务需要完成)
**先前态是否为用户态 (核心态运行时，时钟中断尽可能不占用时间)
*时钟中断尽可能节省时间&lt;br/&gt;将统计/计数的工作留给 不重要的时候 再做&lt;br/&gt;而不是严格的按照时间来做
&lt;/div&gt;
3726&nbsp;{ &lt;br/&gt;
3727&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct callo|struct callo]] *p1, *p2; &lt;br/&gt;
3728&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *pp; &lt;br/&gt;
3729 &lt;br/&gt;
3730&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3731&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* restart clock &lt;br/&gt;
3732&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3733 &lt;br/&gt;
3734&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*[[file:systm.h|lks]] = 0115; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*重启 时钟发生器，参看[[时钟]]
*必要性不明，列入[[遗留问题]]
&lt;/div&gt;
3735 &lt;br/&gt;
3736&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3737&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* display register &lt;br/&gt;
3738&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3739 &lt;br/&gt;
3740&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:display|display]](); &lt;br/&gt;
3741 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*"显示"函数在pdp11/40中无实现
&lt;/div&gt;
3742&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3743&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* callouts &lt;br/&gt;
3744&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if done, just return &lt;br/&gt;
3745&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* else update first non-zero time &lt;br/&gt;
3746&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
&lt;div class="wikinote"&gt;
callout总体说明
*callout 用于 按时序 调用指定函数
*数据结构 参看[[code:callout|callout]]
*[[code:clock|clock]]中对于callout的操作总体如下
**callout中第一个未到期的事件 的 剩余时间-1
**处理callout中所有到期事件，并从callout中移除到期事件
&lt;/div&gt;
3747 &lt;br/&gt;
3748&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:callout|callout]][0].c_func == 0) &lt;br/&gt;
3749&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若callout为空，则跳过callout处理过程
&lt;/div&gt;
3750&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2 = &[[code:callout|callout]][0]; &lt;br/&gt;
3751&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(p2-&gt;c_time&lt;=0 && p2-&gt;c_func!=0) &lt;br/&gt;
3752&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2++; &lt;br/&gt;
3753&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2-&gt;c_time--; &lt;br/&gt;
3754 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*callout中第一个未到期的事件 的 剩余时间-1
&lt;/div&gt;
3755&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3756&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if ps is high, just return &lt;br/&gt;
3757&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3758 &lt;br/&gt;
3759&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ps&0340) != 0) &lt;br/&gt;
3760&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 [[处理机优先级]] 不为 0，则跳过callout处理过程
*意图在于 : [[处理机优先级]] 不为0时，则有更紧要的任务需要执行，不进行callout处理以节省时间
&lt;/div&gt;
3761 &lt;br/&gt;
3762&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3763&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* callout &lt;br/&gt;
3764&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3765 &lt;br/&gt;
3766&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl5]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[处理机优先级]] 置 5
*避免插入不必要的中断，使得整个时钟处理时间延长
&lt;/div&gt;
3767&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:callout|callout]][0].c_time &lt;= 0) { &lt;br/&gt;
3768&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1 = &[[code:callout|callout]][0]; &lt;br/&gt;
3769&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(p1-&gt;c_func != 0 && p1-&gt;c_time &lt;= 0) { &lt;br/&gt;
3770&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*p1-&gt;c_func)(p1-&gt;c_arg); &lt;br/&gt;
3771&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1++; &lt;br/&gt;
3772&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3773&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2 = &[[code:callout|callout]][0]; &lt;br/&gt;
3774&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(p2-&gt;c_func = p1-&gt;c_func) { &lt;br/&gt;
3775&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2-&gt;c_time = p1-&gt;c_time; &lt;br/&gt;
3776&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2-&gt;c_arg = p1-&gt;c_arg; &lt;br/&gt;
3777&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1++; &lt;br/&gt;
3778&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2++; &lt;br/&gt;
3779&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3780&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理callout中所有到期事件，并从callout中移除到期事件
&lt;/div&gt;
3781 &lt;br/&gt;
3782&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3783&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* lightning bolt time-out &lt;br/&gt;
3784&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* and time of day &lt;br/&gt;
3785&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3786 &lt;br/&gt;
3787&nbsp;out: &lt;br/&gt;
3788&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ps&UMODE) == UMODE) { &lt;br/&gt;
3789&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_utime]]++; &lt;br/&gt;
3790&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_prof]][3]) &lt;br/&gt;
3791&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:incupc|incupc]](ps, [[code:user|u.u_prof]]); &lt;br/&gt;
3792&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
3793&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_stime]]++; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理 当前进程 [[用户态]]/[[核心态]] 运行时间
*若先前态 为[[用户态]]，并且 [[code:user|u.u_prof[3]]]不为0([[程序统计直方图]]参数不为空)，则进行[[程序统计直方图]]处理
&lt;/div&gt;
3794&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pp = [[code:user|u.u_procp]]; &lt;br/&gt;
3795&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(++pp-&gt;p_cpu == 0) &lt;br/&gt;
3796&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pp-&gt;p_cpu--; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前进程 CPU使用度+1
*若越界，则 不进行+1
&lt;/div&gt;
3797&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(++lbolt &gt;= HZ) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 时钟滴答数 积攒到 整秒，进行整秒处理
&lt;/div&gt;
3798&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ps&0340) != 0) &lt;br/&gt;
3799&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 [[处理机优先级]] 不为0，则直接返回
*这样跳过整秒处理，为了节省执行时间
&lt;/div&gt;
3800&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lbolt =- HZ; &lt;br/&gt;
3801&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(++time[1] == 0) &lt;br/&gt;
3802&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++time[0]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*修正 系统时间
&lt;/div&gt;
3803&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl1]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[处理机优先级]] 置1
*意义不明，列入[[遗留问题]]
&lt;/div&gt;
3804&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(time[1]==tout[1] && time[0]==tout[0]) &lt;br/&gt;
3805&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](tout); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理 因tout睡眠 且 到期的进程，参看[[睡眠原因#tout]]
&lt;/div&gt;
3806&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((time[1]&03) == 0) { &lt;br/&gt;
3807&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runrun++; &lt;br/&gt;
3808&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&lbolt); &lt;br/&gt;
3809&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*每4秒 
**置runrun，强制进行进程调度
**唤醒因lbolt睡眠的进程，[[睡眠原因]] :lbolt&lt;br/&gt;（需要等待较长时间才进行的事务处理，一般用于与外设同步，如在pc-11驱动函数pcopen中使用）
&lt;/div&gt;
3810&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(pp = &[[code:proc|proc]][0]; pp &lt; &[[code:proc|proc]][NPROC]; pp++) &lt;br/&gt;
3811&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pp-&gt;p_stat) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:proc|proc]]数组，对于使用的proc，做如下操作
**p_time++，但最大值为127
**p_cpu-10，但最小值为0，参看[[进程调度#优先数计算]]
**优先数&gt;PUSER，则重新计算优先数，参看[[进程调度#优先数计算]]
&lt;/div&gt;
3812&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(pp-&gt;p_time != 127) &lt;br/&gt;
3813&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pp-&gt;p_time++; &lt;br/&gt;
3814&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((pp-&gt;p_cpu & 0377) &gt; SCHMAG) &lt;br/&gt;
3815&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pp-&gt;p_cpu =- SCHMAG; else &lt;br/&gt;
3816&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pp-&gt;p_cpu = 0; &lt;br/&gt;
3817&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(pp-&gt;p_pri &gt; PUSER) &lt;br/&gt;
3818&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:setpri|setpri]](pp); &lt;br/&gt;
3819&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3820&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(runin!=0) { &lt;br/&gt;
3821&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runin = 0; &lt;br/&gt;
3822&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&runin); &lt;br/&gt;
3823&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*唤醒 等待图像调入内存的进程
*调度决策频率 1次/秒
&lt;/div&gt;
3824&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ps&UMODE) == UMODE) { &lt;br/&gt;
3825&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]] = &r0; &lt;br/&gt;
3826&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:issig|issig]]()) &lt;br/&gt;
3827&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:psig|psig]](); &lt;br/&gt;
3828&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:setpri|setpri]]([[code:user|u.u_procp]]); &lt;br/&gt;
3829&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 先前态 为 [[用户态]]
**r0(传入参数) 地址 送入 [[skill:u.u_ar0|u.u_ar0]]，方便[[信号系统]]函数使用[[skill:u.u_ar0|u.u_ar0]]寻址
**处理信号，参看[[信号系统]]
**重算 当前进程的优先数，参看[[进程调度#优先数计算]]
&lt;/div&gt;
3830&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3831&nbsp;} &lt;br/&gt;
3832&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[时钟]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:clock by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:close</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统调用,用以关闭一个[[code:struct file|file]]结构
*从用户态传入1个参数:
**fildes:通过R0传入,是一个文件描述号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5842&lt;br/&gt;
5843&nbsp;/*&lt;br/&gt;
5844&nbsp;&nbsp;* close system call&lt;br/&gt;
5845&nbsp;&nbsp;*/&lt;br/&gt;
5846&nbsp;close()&lt;br/&gt;
5847&nbsp;{&lt;br/&gt;
5848&nbsp;&nbsp;&nbsp;&nbsp;register *fp;&lt;br/&gt;
5849&lt;br/&gt;
5850&nbsp;&nbsp;&nbsp;&nbsp;fp = [[code:getf|getf]]([[skill:u.u_ar0|u.u_ar0]][R0]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*得到传入的文件描述号对应的[[code:struct file|file]]结构
&lt;/div&gt;
5851&nbsp;&nbsp;&nbsp;&nbsp;if(fp == NULL)&lt;br/&gt;
5852&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若找不到对应[[code:struct file|file]]结构,直接返回
&lt;/div&gt;
5853&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ofile]]&lt;nowiki&gt;[&lt;/nowiki&gt;[[skill:u.u_ar0|u.u_ar0]][R0]] = NULL;&lt;br/&gt;
5854&nbsp;&nbsp;&nbsp;&nbsp;[[code:closef|closef]](fp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于找到的[[code:struct file|file]]结构
**清除其在进程打开文件表中的对应项
**调用closef释放该[[code:struct file|file]]结构
&lt;/div&gt;
5855 }&lt;br/&gt;
5856 /* -------------------------    */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存打开文件结构]]
*[[文件系统]]

===Param===
:(close = 6.)
:(file descriptor in r0)
:&lt;b&gt;sys close&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:close by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:closef</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*"释放" 指定 [[code:struct file|struct file]] 结构 fp
**若fp是管道，做相应操作
**若释放的是fp的最后一个引用，则释放fp对应inode
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6634 &lt;br/&gt;
6635&nbsp;/* &lt;br/&gt;
6636&nbsp;&nbsp;* Internal form of close. &lt;br/&gt;
6637&nbsp;&nbsp;* Decrement reference count on &lt;br/&gt;
6638&nbsp;&nbsp;* file structure and call closei &lt;br/&gt;
6639&nbsp;&nbsp;* on last closef. &lt;br/&gt;
6640&nbsp;&nbsp;* Also make sure the pipe protocol &lt;br/&gt;
6641&nbsp;&nbsp;* does not constipate. &lt;br/&gt;
6642&nbsp;&nbsp;*/ &lt;br/&gt;
6643&nbsp;closef(fp) &lt;br/&gt;
6644&nbsp;int *fp; &lt;br/&gt;
6645&nbsp;{ &lt;br/&gt;
6646&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rfp, *ip; &lt;br/&gt;
6647 &lt;br/&gt;
6648&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|rfp]] = fp; &lt;br/&gt;
6649&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|rfp]]-&gt;f_flag&FPIPE) { &lt;br/&gt;
6650&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:struct file|rfp]]-&gt;f_inode; &lt;br/&gt;
6651&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_mode =& ~(IREAD&lt;nowiki&gt;|&lt;/nowiki&gt;IWRITE); &lt;br/&gt;
6652&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]]([[code:struct inode|ip]]+1); &lt;br/&gt;
6653&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]]([[code:struct inode|ip]]+2); &lt;br/&gt;
6654&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若fp是管道文件，ip是fp对应的inode
**释放ip的读写标志
**唤醒 等待读/写 ip的进程
***参看[[睡眠原因#(struct inode)+1]]
***参看[[睡眠原因#(struct inode)+2]]
&lt;/div&gt;
6655&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|rfp]]-&gt;f_count &lt;= 1) &lt;br/&gt;
6656&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:closei|closei]]([[code:struct file|rfp]]-&gt;f_inode, [[code:struct file|rfp]]-&gt;f_flag&FWRITE); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若释放的是fp的最后一个引用，则释放fp对应[[code:struct inode|inode]]
*关于 为什么 标志位赋 &FWRITE ，并不清楚，列入[[遗留问题]]
&lt;/div&gt;
6657&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rfp-&gt;f_count--; &lt;br/&gt;
6658&nbsp;} &lt;br/&gt;
6659&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统]]
*[[内存打开文件结构]]

===Caller===
*[[code:exit]]
*[[code:close]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:closef by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:closei</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*"释放" 指定的INODE ip
**若ip为普通INODE，该函数与[[code:iput|iput]]作用相同
**若ip为 设备装载INODE，且"释放"的是对ip的最后一个引用，则同时关闭设备(d_close())
**参看[[文件系统#装载文件系统]]
*传入2个参数 ip,rw
**ip : 指向指定的INODE
**rw : 读写模式，模式常量参看[[file:file.h|file.h]]
***读写模式只在调用 d_close()时使用，含义不明，列入[[遗留问题]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6660 &lt;br/&gt;
6661&nbsp;/* &lt;br/&gt;
6662&nbsp;&nbsp;* Decrement reference count on an &lt;br/&gt;
6663&nbsp;&nbsp;* inode due to the removal of a &lt;br/&gt;
6664&nbsp;&nbsp;* referencing file structure. &lt;br/&gt;
6665&nbsp;&nbsp;* On the last closei, switchout &lt;br/&gt;
6666&nbsp;&nbsp;* to the close entry point of special &lt;br/&gt;
6667&nbsp;&nbsp;* device handler. &lt;br/&gt;
6668&nbsp;&nbsp;* Note that the handler gets called &lt;br/&gt;
6669&nbsp;&nbsp;* on every open and only on the last &lt;br/&gt;
6670&nbsp;&nbsp;* close. &lt;br/&gt;
6671&nbsp;&nbsp;*/ &lt;br/&gt;
6672&nbsp;closei(ip, rw) &lt;br/&gt;
6673&nbsp;int *ip; &lt;br/&gt;
6674&nbsp;{ &lt;br/&gt;
6675&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct inode|rip]]; &lt;br/&gt;
6676&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register dev, maj; &lt;br/&gt;
6677 &lt;br/&gt;
6678&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|rip]] = ip; &lt;br/&gt;
6679&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dev = [[code:struct inode|rip]]-&gt;i_addr[0]; &lt;br/&gt;
6680&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maj = [[code:struct inode|rip]]-&gt;i_addr[0][[skill:.d_major|.d_major]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*仅当 ip 为设备装载INODE时
**dev ← 设备号
**maj ← 主设备号
**参看[[文件系统#装载文件系统]]
*当ip为普通INODE，dev,maj 没有意义
&lt;/div&gt;
6681&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|rip]]-&gt;i_count &lt;= 1) &lt;br/&gt;
6682&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch([[code:struct inode|rip]]-&gt;i_mode&IFMT) { &lt;br/&gt;
6683 &lt;br/&gt;
6684&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case IFCHR: &lt;br/&gt;
6685&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:cdevsw|cdevsw]][maj].d_close)(dev, rw); &lt;br/&gt;
6686&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
6687 &lt;br/&gt;
6688&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case IFBLK: &lt;br/&gt;
6689&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][maj].d_close)(dev, rw); &lt;br/&gt;
6690&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*仅当 ip 为设备装载INODE时
**若"释放"的是对ip的最后一个引用，则试图关闭设备
**参看[[文件系统#装载文件系统]]
**6682的用法 参看 [[文件系统#inode类型]]
*当ip为普通INODE，以上部分没有意义
&lt;/div&gt;
6691&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|rip]]); &lt;br/&gt;
6692&nbsp;} &lt;br/&gt;
6693&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统#装载文件系统]]

===Caller===
*[[code:closef]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:closei by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:clrbuf</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*清零 指定缓存管理块对应的缓存块
*共传入一个参数 bp
*bp : 指定的缓存管理块
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5035&nbsp;&lt;br/&gt;
5036&nbsp;/* Zero the core associated with a buffer. &lt;br/&gt;
5037&nbsp;&nbsp;*/ &lt;br/&gt;
5038&nbsp;clrbuf(bp) &lt;br/&gt;
5039&nbsp;int *bp; &lt;br/&gt;
5040&nbsp;{ &lt;br/&gt;
5041&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *p; &lt;br/&gt;
5042&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register c; &lt;br/&gt;
5043 &lt;br/&gt;
5044&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = bp-&gt;b_addr; &lt;br/&gt;
5045&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = 256; &lt;br/&gt;
5046&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do &lt;br/&gt;
5047&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p++ = 0; &lt;br/&gt;
5048&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(--c); &lt;br/&gt;
5049&nbsp;} &lt;br/&gt;
5050&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:alloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:clrbuf by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:copyin</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:1242 ~ 1281]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:copyin by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:copyout</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:1242 ~ 1281]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:copyout by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:copyseg</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*传入2个参数,参数1:块A地址,参数2:块B地址
*将A块中的内容拷贝到B块中
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0694&nbsp;/* -------------------------*/&lt;br/&gt;
0695&nbsp;.globl     _copyseg&lt;br/&gt;
0696&nbsp;_copyseg:&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[汇编函数调用的现场保护]]后的堆栈状态:
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/copyseg_0.png"/></p>
&lt;/div&gt;
0697&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     PS,-(sp)&lt;br/&gt;
0698&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     UISA0,-(sp)&lt;br/&gt;
0699&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     UISA1,-(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将PS,UISA0,UISA1保护进栈
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/copyseg_1.png"/></p>
&lt;/div&gt;
0700&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $30340,PS&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将处理器当前态设为核心态,先前态设为用户态,处理机优先级设为7([[关中断]])
*参看[[处理机状态字]]
&lt;/div&gt;
0701&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     10(sp),UISA0&lt;br/&gt;
0702&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     12(sp),UISA1&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将参数1(块A地址)读入UISA0,将参数2(块B地址)读入UISA1,参见[[遗留问题]]
&lt;/div&gt;
0703&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     UISD0,-(sp)&lt;br/&gt;
0704&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     UISD1,-(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将UISD0,UISD1保护进栈
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/copyseg_2.png"/></p>
&lt;/div&gt;
0705&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $6,UISD0&lt;br/&gt;
0706&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $6,UISD1&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将UISD0,UISD1置为可读写状态,参见[[Pdp11:页说明寄存器]]
&lt;/div&gt;
0707&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,-(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将R2保护进栈
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/copyseg_3.png"/></p>
&lt;/div&gt;
0708&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     r0&lt;br/&gt;
0709&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $8192.,r1&lt;br/&gt;
0710&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $32.,r2&lt;br/&gt;
&lt;div class="wikinote"&gt;
*置R0=0=0000000000000000(16位2进制),下图为(R0)的寻址过程
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/copyseg_2_1.png"/></p>
*置R1=8192=0010000000000000(16位2进制),下图为(R1)的寻址过程
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/copyseg_2_2.png"/></p>
*详见[[Pdp11:内存管理]]
*置R2=32,表示拷贝次数
**由于一内存块为64个字节,而每次拷贝为1个字(2个字节),所以拷贝一块需拷贝32次
&lt;/div&gt;
0711&nbsp;1:&lt;br/&gt;
0712&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MFPI|mfpi]]    (r0)+&lt;br/&gt;
&lt;div class="wikinote"&gt;
*(R0)入栈,(R0)++,指向下一个字
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/copyseg_4.png"/></p>
&lt;/div&gt;
0713&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MTPI|mtpi]]    (r1)+&lt;br/&gt;
&lt;div class="wikinote"&gt;
*弹出栈顶至(R1)中,(R1)++,指向下一个字
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/copyseg_5.png"/></p>
&lt;/div&gt;
0714&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SOB|sob]]     r2,1b&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将块A中的内容一个字一个字拷贝给块B
&lt;/div&gt;
0715&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2&lt;br/&gt;
0716&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,UISD1&lt;br/&gt;
0717&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,UISD0&lt;br/&gt;
0718&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,UISA1&lt;br/&gt;
0719&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,UISA0&lt;br/&gt;
0720&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,PS&lt;br/&gt;
&lt;div class="wikinote"&gt;
*从栈中恢复R2,UISA0,UISA1,UISD0,UISD1,PS的值
&lt;/div&gt;
0721&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;div class="wikinote"&gt;
*恢复原PC值,程序继续执行
&lt;/div&gt;
0722&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:newproc]]
*[[code:expand]]
*[[code:sbreak]]
*[[code:grow]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:copyseg by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:core</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将进程的可交换图像部分内容写入当前目录的core文件中
*返回值:
**若成功写入,返回1
**否则,返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4083&lt;br/&gt;
4084&nbsp;/*&lt;br/&gt;
4085&nbsp;&nbsp;* Create a core image on the file "core"&lt;br/&gt;
4086&nbsp;&nbsp;* If you are looking for protection glitches,&lt;br/&gt;
4087&nbsp;&nbsp;* there are probably a wealth of them here&lt;br/&gt;
4088&nbsp;&nbsp;* when this occurs to a suid command.&lt;br/&gt;
4089&nbsp;&nbsp;*&lt;br/&gt;
4090&nbsp;&nbsp;* It writes USIZE block of the&lt;br/&gt;
4091&nbsp;&nbsp;* user.h area followed by the entire&lt;br/&gt;
4092&nbsp;&nbsp;* data+stack segments.&lt;br/&gt;
4093&nbsp;&nbsp;*/&lt;br/&gt;
4094&nbsp;core()&lt;br/&gt;
4095&nbsp;{&lt;br/&gt;
4096&nbsp;&nbsp;&nbsp;&nbsp;register s, *ip;&lt;br/&gt;
4097&nbsp;&nbsp;&nbsp;&nbsp;extern [[code:schar|schar]];&lt;br/&gt;
4098&lt;br/&gt;
4099&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = 0;&lt;br/&gt;
4100&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_dirp]] = "core";&lt;br/&gt;
4101&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:namei|namei]](&[[code:schar|schar]], 1);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*在用户所在目录中寻找是否有名为"core"的文件并且将找到的INODE赋给ip
&lt;/div&gt;
4102&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]] == NULL) {&lt;br/&gt;
4103&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]])&lt;br/&gt;
4104&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0);&lt;br/&gt;
4105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:maknode|maknode]](0666);&lt;br/&gt;
4106&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip == NULL)&lt;br/&gt;
4107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若没有找到
**若发生错误
***返回0
**否则创建一个INODE赋给ip,传入参数mode = 0666 =&lt;nowiki&gt; IREAD|IWRITE|ITEXT|IWANT|IACC|IUPD &lt;/nowiki&gt;,参看[[file:inode.h|inode.h]]
**若创建失败
***返回0
&lt;/div&gt;
4108&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
4109&nbsp;&nbsp;&nbsp;&nbsp;if(![[code:access|access]](ip, IWRITE) &&&lt;br/&gt;
4110&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(ip-&gt;i_mode&IFMT) == 0 &&&lt;br/&gt;
4111&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_uid]] == [[code:user|u.u_ruid]]) {&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若身份验证通过,同时ip为普通INODE,并且用户的有效ID = 真实ID (参看[[权限管理]])
&lt;/div&gt;
4112&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:itrunc|itrunc]](ip);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清ip所对应的文件.将ip所有相关磁盘块释放掉
&lt;/div&gt;
4113&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][0] = 0;&lt;br/&gt;
4114&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] = 0;&lt;br/&gt;
4115&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] = &u;&lt;br/&gt;
4116&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = USIZE*64;&lt;br/&gt;
4117&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_segflg]] = 1;&lt;br/&gt;
4118&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:writei|writei]](ip);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置I/O参数,将PPDA区写入core文件中,参数作用详见[[code:writei|writei]]
*说明:PPDA区属于核心态地址空间,所以需要将[[code:user|u.u_segflg]]置为1,以用来在核心态地址空间寻址
&lt;/div&gt;
4119&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = [[code:proc|u.u_procp]]-&gt;p_size - USIZE;&lt;br/&gt;
4120&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:estabur|estabur]](0, s, 0, 0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*s = 进程图像中除PPDA区以外的部分的长度
*根据s设置相对地址映照表
&lt;/div&gt;
4121&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] = 0;&lt;br/&gt;
4122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = s*64;&lt;br/&gt;
4123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_segflg]] = 0;&lt;br/&gt;
4124&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:writei|writei]](ip);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置I/O参数,将进程图像中除了PPDA区外的其他部分(数据段+用户栈)写入core文件中,参数作用详见[[code:writei|writei]]
*说明:进程图像中除PPDA区以外的部分 属于用户态地址空间,所以需要将[[code:user|u.u_segflg]]置为0,以用来在用户态地址空间寻址
&lt;/div&gt;
4125&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
4126&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](ip);&lt;br/&gt;
4127&nbsp;&nbsp;&nbsp;&nbsp;return(u.u_error==0);&lt;br/&gt;
4128&nbsp;}&lt;br/&gt;
4129 /* ------------------------- */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存管理]]
*[[进程图像]]

===Caller===
*[[code:psig]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:core by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:cpass</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote" &gt;
*从指定指定空间的指定地址读出字节
*修改　u_base,u_count,u_offset,参看[[code:user|user]]
**地址空间　由　[[code:user|u.u_segflg]]指明
**指定地址　由　[[code:user|u.u_base]]提供
** c : 存放读出的字节
*返回值
**若出错,则返回-1
**当u_count == 0 (读出任务完成),则返回-1
**否则返回读出的字节
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6534&lt;br/&gt;
6535&nbsp;&nbsp;/*&lt;br/&gt;
6537&nbsp;&nbsp;* write call at location u_base;&lt;br/&gt;
6538&nbsp;&nbsp;* update u_base, u_count, and u_offset.  Return -1&lt;br/&gt;
6539&nbsp;&nbsp;* when u_count is exhausted.  u_base is in the user?ˉs&lt;br/&gt;
6540&nbsp;&nbsp;* address space unless u_segflg is set.&lt;br/&gt;
6541&nbsp;&nbsp;*/&lt;br/&gt;
6542&nbsp;&nbsp;cpass()&lt;br/&gt;
6543&nbsp;&nbsp;{&lt;br/&gt;
6544&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register c;&lt;br/&gt;
6545&lt;br/&gt;
6546&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_count]] == 0)&lt;br/&gt;
6547&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(-1);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若u_count==0(已读完),则返回-1
&lt;/div&gt;
6548&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_segflg]])&lt;br/&gt;
6549&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = *[[code:user|u.u_base]]; else&lt;br/&gt;
6550&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((c=[[code:fubyte|fubyte]]([[code:user|u.u_base]])) &lt; 0) {&lt;br/&gt;
6551&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EFAULT;&lt;br/&gt;
6552&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(-1);&lt;br/&gt;
6553&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
* 若 目标地址空间 为 [[核心态]]地址空间，则直接从目标地址读出字节
* 若 目标地址空间 为 [[用户态]]地址空间，则调用[[code:fubyte|fubyte]] 向目标地址读出字节
**若出错
***抛出错误，[[错误代码]]为EFAULT
***返回-1
&lt;/div&gt;
6554&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]]--;&lt;br/&gt;
6555&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(++[[code:user|u.u_offset]][1] == 0)&lt;br/&gt;
6556&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][0]++;&lt;br/&gt;
6557&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]]++;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*修改相应参数
**[[code:user|u.u_count]]
**[[code:user|u.u_offset]]
**[[code:user|u.u_base]]
*参看[[code:user|user]]
&lt;/div&gt;
6558&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(c&0377);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*返回c的低八位
&lt;/div&gt;
6559&nbsp;&nbsp;}&lt;br/&gt;
6560&nbsp;&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:iomove]]
*[[code:ttwrite]]
*[[code:mmwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:cpass by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:creat</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*创建文件 的系统调用
*从 用户态 传入2个参数 name, mode
**name : 文件路径
**mode : 
***0 : 读模式
***1 : 写模式
***2 : 读写模式
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5777 &lt;br/&gt;
5778&nbsp;/* &lt;br/&gt;
5779&nbsp;&nbsp;* creat system call &lt;br/&gt;
5780&nbsp;&nbsp;*/ &lt;br/&gt;
5781&nbsp;creat() &lt;br/&gt;
5782&nbsp;{ &lt;br/&gt;
5783&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *ip; &lt;br/&gt;
5784&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern uchar; &lt;br/&gt;
5785 &lt;br/&gt;
5786&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:namei|namei]](&[[code:uchar|uchar]], 1); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip 指向 文件路径name 对应的 文件inode块
&lt;/div&gt;
5787&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip == NULL) { &lt;br/&gt;
5788&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]]) &lt;br/&gt;
5789&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5790&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:maknode|maknode]]([[code:user|u.u_arg]][1]&07777&(~ISVTX)); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*创建INODE，并链入父目录
*标志位强制清 ISVTX，定义参看[[File:inode.h|inode.h]]
&lt;/div&gt;
5791&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ip==NULL) &lt;br/&gt;
5792&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5793&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:open1|open1]](ip, FWRITE, 2); &lt;br/&gt;
5794&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else&lt;br/&gt;
&lt;div class="wikinote"&gt;
*LIONS源代码原文为
&lt;div class="wikiheadcode"&gt;
5794&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;/div&gt;
疑为笔误
&lt;/div&gt;
5795&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:open1|open1]](ip, FWRITE, 1); &lt;br/&gt;
5796&nbsp;} &lt;br/&gt;
5797&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Param===
:(creat = 8.)
:&lt;b&gt;sys creat; name; mode&lt;/b&gt;
:(file descriptor in r0)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:creat by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:cret</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*用于恢复函数现场
*常用于[[函数调用的现场保护]]
*入口要求R5为之前堆栈的栈顶指针
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1428&nbsp;/* -------------------------*/&lt;br/&gt;
1429&nbsp;.globl     cret&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进入cret函数前,R5存储的是待恢复栈的栈顶指针SP
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_cret_1.png"/></p>
&lt;/div&gt;
1430&nbsp;cret:&lt;br/&gt;
1431&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] r5,r1&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将待恢复栈的栈顶指针复制给R1
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_cret_2.png"/></p>
&lt;/div&gt;
1432&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] -(r1),r4&lt;br/&gt;
1433&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] -(r1),r3&lt;br/&gt;
1434&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] -(r1),r2&lt;br/&gt;
&lt;div class="wikinote"&gt;
*恢复存储在待恢复栈中的R4,R3,R2的值
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_cret_3.png"/></p>
&lt;/div&gt;
1435&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] r5,sp&lt;br/&gt;
1436&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] (sp)+,r5&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将栈顶指针指向待恢复栈的栈顶
*退栈恢复被保护在栈中的r5(即下一个待退栈顶指针),至此待恢复的栈退出完毕
*参考[[环境指针]]
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_cret_4.png"/></p>
&lt;/div&gt;
1437&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:RTS|rts]] pc&lt;br/&gt;
&lt;div class="wikinote"&gt;
*退栈将PC恢复至函数调用前的状态
*RTS指令参考[[编程技巧]]
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_cret_5.png"/></p>
&lt;/div&gt;
1438&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[函数调用的现场保护]]
*[[关于汇编函数的说明]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:cret by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:csv</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*用于保护函数现场
*常用于[[函数调用的现场保护]]
*入口要求R5为函数返回地址
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1418&nbsp;/* -------------------------*/ &lt;br/&gt;
1419&nbsp;.globl csv&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进入csv函数前，R5存储函数返回地址PC[0]
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_csv_1.png"/></p>&lt;/div&gt;
1420&nbsp;csv:&lt;br/&gt;
1421&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] r5,r0&lt;br/&gt;
1422&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] sp,r5&lt;br/&gt;
&lt;div class="wikinote"&gt;
*函数返回地址PC[0]复制到R0
*SP复制到R5,参考[[环境指针]]
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_csv_2.png"/></p>&lt;/div&gt;
1423&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] r4,-(sp)&lt;br/&gt;
1424&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] r3,-(sp)&lt;br/&gt;
1425&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]] r2,-(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_csv_3.png"/></p>&lt;/div&gt;
1426&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:JSR|jsr]] pc,(r0)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*函数返回
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_csv_4.png"/></p>
&lt;/div&gt;
1427&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[环境指针]]
*[[函数调用的现场保护]]
*[[关于汇编函数的说明]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:csv by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:deverror</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*打印 设备错误信息
*输入3个参数 bp , o1 , o2
**bp : 设备[[code:struct buf|struct buf]]指针
**o1 : 块号
**o2 : 通常是 错误状态号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2439 &lt;br/&gt;
2440&nbsp;/* &lt;br/&gt;
2441&nbsp;&nbsp;* deverr prints a diagnostic from &lt;br/&gt;
2442&nbsp;&nbsp;* a device driver. &lt;br/&gt;
2443&nbsp;&nbsp;* It prints the device, block number, &lt;br/&gt;
2444&nbsp;&nbsp;* and an octal word (usually some error &lt;br/&gt;
2445&nbsp;&nbsp;* status register) passed as argument. &lt;br/&gt;
2446&nbsp;&nbsp;*/ &lt;br/&gt;
2447&nbsp;deverror([[code:struct buf|bp]], o1, o2) &lt;br/&gt;
2448&nbsp;int *[[code:struct buf|bp]]; &lt;br/&gt;
2449&nbsp;{ &lt;br/&gt;
2450&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rbp; &lt;br/&gt;
2451 &lt;br/&gt;
2452&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|rbp]] = [[code:struct buf|bp]]; &lt;br/&gt;
2453&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prdev|prdev]]("err", [[code:struct buf|rbp]]-&gt;b_dev); &lt;br/&gt;
2454&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("bn%l er%o %o<br/>\n", [[code:struct buf|rbp]]-&gt;b_blkno, o1, o2); &lt;br/&gt;
2455&nbsp;} &lt;br/&gt;
2456&nbsp;/* ------------------------- */ &lt;br/&gt;
2457 &lt;br/&gt;
2458 &lt;br/&gt;
2459 &lt;br/&gt;
2460 &lt;br/&gt;
2461 &lt;br/&gt;
2462 &lt;br/&gt;
2463 &lt;br/&gt;
2464 &lt;br/&gt;
2465 &lt;br/&gt;
2466 &lt;br/&gt;
2467 &lt;br/&gt;
2468 &lt;br/&gt;
2469 &lt;br/&gt;
2470 &lt;br/&gt;
2471 &lt;br/&gt;
2472 &lt;br/&gt;
2473 &lt;br/&gt;
2474 &lt;br/&gt;
2475 &lt;br/&gt;
2476 &lt;br/&gt;
2477 &lt;br/&gt;
2478 &lt;br/&gt;
2479 &lt;br/&gt;
2480 &lt;br/&gt;
2481 &lt;br/&gt;
2482 &lt;br/&gt;
2483 &lt;br/&gt;
2484 &lt;br/&gt;
2485 &lt;br/&gt;
2486 &lt;br/&gt;
2487 &lt;br/&gt;
2488 &lt;br/&gt;
2489 &lt;br/&gt;
2490 &lt;br/&gt;
2491 &lt;br/&gt;
2492 &lt;br/&gt;
2493 &lt;br/&gt;
2494 &lt;br/&gt;
2495 &lt;br/&gt;
2496 &lt;br/&gt;
2497 &lt;br/&gt;
2498 &lt;br/&gt;
2499 &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:rkintr]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:deverror by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:devstart</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*仅在[[code:rkstart|rkstart]]中被调用,用来对[[RK磁盘#RKCS|RKCS]],[[RK磁盘#RKWC|RKWC]],[[RK磁盘#RKBA|RKBA]],[[RK磁盘#RKDA|RKDA]]这四个寄存器进行赋值
*传入四个参数 bp,devloc,devblk,hbcom
**bp:在被调用时传入RK磁盘设备队列管理块的指针
**devloc:在被调用时传入RK磁盘RKDA寄存器的地址
**devblk:在被调用时传入根据当前b_blkno与b_dev.d_minor对应的RKDA寄存器的值
**hbcom:在被调用时传入0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5087&nbsp;&nbsp;&lt;br/&gt;
5088&nbsp;&nbsp;/* Device start routine for disks&lt;br/&gt;
5089&nbsp;&nbsp;* and other devices that have the register&lt;br/&gt;
5090&nbsp;&nbsp;* layout of the older DEC controllers (RF, RK, RP, TM)&lt;br/&gt;
5091&nbsp;&nbsp;*/&lt;br/&gt;
5092&nbsp;&nbsp;#define    IENABLE 0100&lt;br/&gt;
5093&nbsp;&nbsp;#define    WCOM    02&lt;br/&gt;
5094&nbsp;&nbsp;#define    RCOM    04&lt;br/&gt;
5095&nbsp;&nbsp;#define    GO  01&lt;br/&gt;
5096&nbsp;&nbsp;devstart(bp, devloc, devblk, hbcom)&lt;br/&gt;
5097&nbsp;&nbsp;struct buf *bp;&lt;br/&gt;
5098&nbsp;&nbsp;int *devloc;&lt;br/&gt;
5099&nbsp;&nbsp;{&lt;br/&gt;
5100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int *dp;&lt;br/&gt;
5101&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp;&lt;br/&gt;
5102&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int com;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*com为待传给寄存器RKCS的局部变量
&lt;/div&gt;
5103&lt;br/&gt;
5104&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = devloc;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*RKDA地址赋给dp
**则 dp-1 为RKBA地址, dp-2 为RKWC地址, dp-3 为RKCS地址,详见[[RK磁盘#寄存器|RK磁盘 寄存器]]
&lt;/div&gt;
5105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp;&lt;br/&gt;
5106&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp = devblk;  /* block address */&lt;br/&gt;
5107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--dp = rbp-&gt;b_addr;  /* buffer address */&lt;br/&gt;
5108&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--dp = rbp-&gt;b_wcount;  /* word count */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[RK磁盘#RKDA|RKDA]]置为devblk
*将[[RK磁盘#RKBA|RKBA]]置为b_addr
*将[[RK磁盘#RKWC|RKWC]]置为b_wcount
&lt;/div&gt;
5109&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com = (hbcom&lt;&lt;8) &lt;nowiki&gt;|&lt;/nowiki&gt; IENABLE &lt;nowiki&gt;|&lt;/nowiki&gt; GO &lt;nowiki&gt;|&lt;/nowiki&gt;&lt;br/&gt;
5110&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((rbp-&gt;b_xmem & 03) &lt;&lt; 4);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*com置IENABLE,GO标志
*将第4,5两位置为rbp-&gt;xmem的高2位,rbp-&gt;xmem的意义参见[[code:struct buf|struct buf]]
&lt;/div&gt;
5111&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rbp-&gt;b_flags&B_READ)&lt;br/&gt;
5112&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com =&lt;nowiki&gt;|&lt;/nowiki&gt; RCOM;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果为读,置RCOM标志
&lt;/div&gt;
5113&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&lt;br/&gt;
5114&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com =&lt;nowiki&gt;|&lt;/nowiki&gt; WCOM;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果为写,置WCOM标志
&lt;/div&gt;
5115&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--dp = com;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将com赋值给[[RK磁盘#RKCS|RKCS]]
&lt;/div&gt;
5116&nbsp;&nbsp;}&lt;br/&gt;
5117 /* -------------------------    */&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:rkstart]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:devstart by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:display</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0887 ~ 0892]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:display by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:dpadd</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将字长的数据加到双字长的数据
*共传入两个参数
*字长的数据，设为a
*双字长数据的地址，设为b
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1317&nbsp;/* ------------------------- */ &lt;br/&gt;
1318&nbsp;.globl     _dpadd&lt;br/&gt;
1319&nbsp;&nbsp;dpadd:&lt;br/&gt;
1320&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将b赋给R0
&lt;/div&gt;
1321&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADD|add]]     4(sp),2(r0)&lt;br/&gt;
1322&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADC|adc]]     (r0)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将a加入b地址的数据中
*由于是 字长数据 + 双字长数据，需要处理进位
&lt;/div&gt;
1323&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rts     pc&lt;br/&gt;
1324&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:wait]]
*[[code:rdwr]]
*[[code:seek]]
*[[code:sslep]]
*[[code:iomove]]
*[[code:mmwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:dpadd by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:dpcmp</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*对两个双字长数据进行比较大小
*共输入四个参数，设为A,a,B,b
*A : 第一个数据的高位
*a : 第一个数据的低位
*B : 第二个数据的高位
*b : 第二个数据的低位
*返回值 : 在 -512 ~ 512 的范围内返回Aa - Bb，规则如下
**若 Aa - Bb &gt; 512 ，则返回512
**若 Aa - Bb &lt; -512 ，则返回-512
**否则， 返回Aa - Bb
&lt;/div&gt;
&lt;div class="wikicode"&gt;
&lt;div class="wikiheadnote"&gt;
*具体分析请参考[[code:dpcmp#附图|附图]]
&lt;/div&gt;
1325&nbsp;/* ------------------------- */ &lt;br/&gt;
1326&nbsp;.globl     _dpcmp&lt;br/&gt;
1327&nbsp;_dpcmp:&lt;br/&gt;
1328&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r0&lt;br/&gt;
1329&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     4(sp),r1&lt;br/&gt;
1330&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SUB|sub]]     6(sp),r0&lt;br/&gt;
1331&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SUB|sub]]     8(sp),r1&lt;br/&gt;
&lt;div class="wikinote"&gt;
*参数传递参考 [[汇编函数调用的现场保护]]
&lt;/div&gt;
1332&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SBC|sbc]]     r0&lt;br/&gt;
1333&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BGE|bge]]     1f&lt;br/&gt;
1334&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r0,$-1&lt;br/&gt;
1335&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     2f&lt;br/&gt;
1336&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r1,$-512.&lt;br/&gt;
1337&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BHI|bhi]]     3f&lt;br/&gt;
1338 2:&lt;br/&gt;
1339&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $-512.,r0&lt;br/&gt;
1340&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1341 1:&lt;br/&gt;
1342&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     2f&lt;br/&gt;
1343&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r1,$512.&lt;br/&gt;
1344&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BLO|blo]]     3f&lt;br/&gt;
1345 2:&lt;br/&gt;
1346&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $512.,r1&lt;br/&gt;
1347 3:&lt;br/&gt;
1348&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,r0&lt;br/&gt;
1349&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;/div&gt;

===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_dpcmp.png"/></p>

===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:sslep]]
*[[code:readi]]
*[[code:writei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:dpcmp by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:dump</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 系统映像(core) 保存到 磁带设备
*具体实现方法尚未读懂，列入[[遗留问题]]
*函数入口在 [[file:low.s|low.s]] 0523，调用时机不明，列入[[遗留问题]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1350&lt;br/&gt;
1351&nbsp;/* ------------------------- */ &lt;br/&gt;
1352&nbsp;.globl     dump&lt;br/&gt;
1353&nbsp;dump:&lt;br/&gt;
1354&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $1,[[code:SSR|SSR0]]&lt;br/&gt;
1355&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     dump&lt;br/&gt;
1356&lt;br/&gt;
1357&nbsp;/ save regs r0,r1,r2,r3,r4,r5,r6,KIA6&lt;br/&gt;
1358&nbsp;/ starting at abs location 4&lt;br/&gt;
1359&lt;br/&gt;
1360&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r0,4&lt;br/&gt;
1361&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $6,r0&lt;br/&gt;
1362&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,(r0)+&lt;br/&gt;
1363&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,(r0)+&lt;br/&gt;
1364&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r3,(r0)+&lt;br/&gt;
1365&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r4,(r0)+&lt;br/&gt;
1366&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r5,(r0)+&lt;br/&gt;
1367&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     sp,(r0)+&lt;br/&gt;
1368&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     KISA6,(r0)+&lt;br/&gt;
1369&lt;br/&gt;
1370&nbsp;/ dump all of core (ie to first mt error)&lt;br/&gt;
1371&nbsp;/ onto mag tape. (9 track or 7 track ’binary’)&lt;br/&gt;
1372&lt;br/&gt;
1373&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $MTC,r0&lt;br/&gt;
1374&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $60004,(r0)+&lt;br/&gt;
1375&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     2(r0)&lt;br/&gt;
1376&nbsp;1:&lt;br/&gt;
1377&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $-512.,(r0)&lt;br/&gt;
1378&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:INC|inc]]     -(r0)&lt;br/&gt;
1379&nbsp;2:&lt;br/&gt;
1380&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TSTB|tstb]]    (r0)&lt;br/&gt;
1381&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BGE|bge]]     2b&lt;br/&gt;
1382&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:TST|tst]]     (r0)+&lt;br/&gt;
1383&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BGE|bge]]     1b&lt;br/&gt;
1384&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RESET|reset]]&lt;br/&gt;
1385&lt;br/&gt;
1386&nbsp;/ end of file and loop&lt;br/&gt;
1387&lt;br/&gt;
1388&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $60007,-(r0)&lt;br/&gt;
1389&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] . &lt;br/&gt;
1390&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[关于汇编函数的说明]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:dump by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:dup</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*生成新的 [[内存打开文件结构|u.u_ofile[]项]]，指向给定的[[code:struct file|file结构]]
*使用1个隐式参数
**文件描述号 : u.u_ar0[R0]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6065 &lt;br/&gt;
6066&nbsp;/* &lt;br/&gt;
6067&nbsp;&nbsp;* the dup system call. &lt;br/&gt;
6068&nbsp;&nbsp;*/ &lt;br/&gt;
6069&nbsp;dup() &lt;br/&gt;
6070&nbsp;{ &lt;br/&gt;
6071&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register i, *[[code:struct file|fp]]; &lt;br/&gt;
6072 &lt;br/&gt;
6073&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]] = [[code:getf|getf]]([[skill:u.u_ar0|u.u_ar0]][R0]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据 文件描述号 查找 指定的[[code:struct file|file结构]]
&lt;/div&gt;
6074&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|fp]] == NULL) &lt;br/&gt;
6075&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6076&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((i = [[code:ufalloc|ufalloc]]()) &lt; 0) &lt;br/&gt;
6077&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6078&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ofile]][i] = [[code:struct file|fp]]; &lt;br/&gt;
6079&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]]-&gt;f_count++; &lt;br/&gt;
6080&nbsp;} &lt;br/&gt;
6081&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[内存打开文件结构]]

===Param===
:(dup = 41.; not in assembler)
:(file descriptor in r0)
:&lt;b&gt;sys dup&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:dup by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:estabur</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*根据 正文段、数据段、栈段的大小，设置地址映照表
*共输入4个参数
**nt : 正文段大小(块数)
**nd : 数据段大小(块数)
**ns : 栈段大小(块数)
**sep : 此参数在 pdp11/40 中无效，始终为0，不作讨论&lt;br/&gt;其意义参看 [[code:user|u.u_sep]]
*返回值
**若成功，则返回0
**失败，则返回-1
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1640 &lt;br/&gt;
1641&nbsp;/* &lt;br/&gt;
1642&nbsp;&nbsp;* Set up software prototype segmentation &lt;br/&gt;
1643&nbsp;&nbsp;* registers to implement the 3 pseudo &lt;br/&gt;
1644&nbsp;&nbsp;* text,data,stack segment sizes passed &lt;br/&gt;
1645&nbsp;&nbsp;* as arguments. &lt;br/&gt;
1646&nbsp;&nbsp;* The argument sep specifies if the &lt;br/&gt;
1647&nbsp;&nbsp;* text and data+stack segments are to &lt;br/&gt;
1648&nbsp;&nbsp;* be separated. &lt;br/&gt;
1649&nbsp;&nbsp;*/ &lt;br/&gt;
1650&nbsp;estabur(nt, nd, ns, sep) &lt;br/&gt;
1651&nbsp;{ &lt;br/&gt;
1652&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register a, *ap, *dp; &lt;br/&gt;
1653 &lt;br/&gt;
1654&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sep) { &lt;br/&gt;
1655&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(cputype == 40) &lt;br/&gt;
1656&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto err; &lt;br/&gt;
1657&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:nseg|nseg]](nt) &gt; 8 &lt;nowiki&gt;||&lt;/nowiki&gt; [[code:nseg|nseg]](nd)+[[code:nseg|nseg]](ns) &gt; 8) &lt;br/&gt;
1658&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto err; &lt;br/&gt;
1659&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
1660&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:nseg|nseg]](nt)+[[code:nseg|nseg]](nd)+[[code:nseg|nseg]](ns) &gt; 8) &lt;br/&gt;
1661&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto err; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 所需内存页 多余8页，则进入错误处理
&lt;/div&gt;
1662&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(nt+nd+ns+USIZE &gt; maxmem) &lt;br/&gt;
1663&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto err; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 所需内存数 大于 maxmem，则进入错误处理
**USIZE 为 PPDA区大小，定义在[[file:param.h|param.h]]
**maxmem 为 每进程能使用的最大内存块数，定义在[[file:systm.h|systm.h]]
&lt;/div&gt;
1664&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0; &lt;br/&gt;
1665&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap = &[[code:user|u.u_uisa]][0]; &lt;br/&gt;
1666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = &[[code:user|u.u_uisd]][0]; &lt;br/&gt;
1667&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(nt &gt;= 128) { &lt;br/&gt;
1668&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = (127&lt;&lt;8) &lt;nowiki&gt;|&lt;/nowiki&gt; RO; &lt;br/&gt;
1669&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ap++ = a; &lt;br/&gt;
1670&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a =+ 128; &lt;br/&gt;
1671&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nt =- 128; &lt;br/&gt;
1672&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
1673&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(nt) { &lt;br/&gt;
1674&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = ((nt-1)&lt;&lt;8) &lt;nowiki&gt;|&lt;/nowiki&gt; RO; &lt;br/&gt;
1675&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ap++ = a; &lt;br/&gt;
1676&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
1677&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sep) &lt;br/&gt;
1678&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ap &lt; &[[code:user|u.u_uisa]][8]) { &lt;br/&gt;
1679&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ap++ = 0; &lt;br/&gt;
1680&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = 0; &lt;br/&gt;
1681&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
1664 - 1681
*设置 正文段 的地址映照表
&lt;/div&gt;
1682&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = USIZE; &lt;br/&gt;
1683&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(nd &gt;= 128) { &lt;br/&gt;
1684&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = (127&lt;&lt;8) &lt;nowiki&gt;|&lt;/nowiki&gt; RW; &lt;br/&gt;
1685&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ap++ = a; &lt;br/&gt;
1686&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a =+ 128; &lt;br/&gt;
1687&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nd =- 128; &lt;br/&gt;
1688&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
1689&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(nd) { &lt;br/&gt;
1690&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = ((nd-1)&lt;&lt;8) &lt;nowiki&gt;|&lt;/nowiki&gt; RW; &lt;br/&gt;
1691&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ap++ = a; &lt;br/&gt;
1692&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a =+ nd; &lt;br/&gt;
1693&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
1694&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ap &lt; &[[code:user|u.u_uisa]][8]) { &lt;br/&gt;
1695&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = 0; &lt;br/&gt;
1696&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ap++ = 0; &lt;br/&gt;
1697&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
1698&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sep) &lt;br/&gt;
1699&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ap &lt; &[[code:user|u.u_uisa]][16]) { &lt;br/&gt;
1700&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = 0; &lt;br/&gt;
1701&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ap++ = 0; &lt;br/&gt;
1702&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
1682 - 1702
*设置 数据段 的地址映照表
&lt;/div&gt;
1703&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a =+ ns; &lt;br/&gt;
1704&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ns &gt;= 128) { &lt;br/&gt;
1705&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a =- 128; &lt;br/&gt;
1706&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ns =- 128; &lt;br/&gt;
1707&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--dp = (127&lt;&lt;8) &lt;nowiki&gt;|&lt;/nowiki&gt; RW; &lt;br/&gt;
1708&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--ap = a; &lt;br/&gt;
1709&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
1710&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ns) { &lt;br/&gt;
1711&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--dp = ((128-ns)&lt;&lt;8) &lt;nowiki&gt;| RW |&lt;/nowiki&gt; ED; &lt;br/&gt;
1712&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--ap = a-128; &lt;br/&gt;
1713&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
1714&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!sep) { &lt;br/&gt;
1715&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap = &[[code:user|u.u_uisa]][0]; &lt;br/&gt;
1716&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = &[[code:user|u.u_uisa]][8]; &lt;br/&gt;
1717&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ap &lt; &[[code:user|u.u_uisa]][8]) &lt;br/&gt;
1718&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = *ap++; &lt;br/&gt;
1719&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap = &[[code:user|u.u_uisd]][0]; &lt;br/&gt;
1720&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = &[[code:user|u.u_uisd]][8]; &lt;br/&gt;
1721&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ap &lt; &[[code:user|u.u_uisd]][8]) &lt;br/&gt;
1722&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp++ = *ap++; &lt;br/&gt;
1723&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
1703 - 1723
*设置 栈段 的地址映照表
&lt;/div&gt;
1724&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sureg|sureg]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 生成的相对地址映照表 装入 寄存器
&lt;/div&gt;
1725&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
1726 &lt;br/&gt;
1727&nbsp;err: &lt;br/&gt;
1728&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENOMEM; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*抛出错误，[[错误代码]] : ENOMEM
&lt;/div&gt;
1729&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(-1); &lt;br/&gt;
1730&nbsp;} &lt;br/&gt;
1731&nbsp;/*----------------------   */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存管理]]

===Caller===
*[[code:main]]
*[[code:exec]]
*[[code:sbreak]]
*[[code:core]]
*[[code:grow]]
*[[code:xalloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:estabur by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:exec</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*exec 的系统调用函数
*将 现行进程 转化为 运行某一程序的进程
*传入参数
**name : 欲运行程序的文件路径，保存在
***u.u_arg[0]
***u.u_dirp ，原因参看[[code:trap|trap]] 2770
**argv : 参数数组指针（指向[[用户态]]地址空间中参数数组的位置）
***参数数组 : 每项 指向 一个参数字符串 ( [[用户态]]地址空间 )
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3008 &lt;br/&gt;
3009&nbsp;/* &lt;br/&gt;
3010&nbsp;&nbsp;* exec system call. &lt;br/&gt;
3011&nbsp;&nbsp;* Because of the fact that an I/O buffer is used &lt;br/&gt;
3012&nbsp;&nbsp;* to store the caller’s arguments during exec, &lt;br/&gt;
3013&nbsp;&nbsp;* and more buffers are needed to read in the text file,   &lt;br/&gt;
3014&nbsp;&nbsp;* deadly embraces waiting for free buffers are possible.  &lt;br/&gt;
3015&nbsp;&nbsp;* Therefore the number of processes simultaneously &lt;br/&gt;
3016&nbsp;&nbsp;* running in exec has to be limited to NEXEC. &lt;br/&gt;
3017&nbsp;&nbsp;*/ &lt;br/&gt;
3018&nbsp;#define    EXPRI   -1 &lt;br/&gt;
3019 &lt;br/&gt;
3020&nbsp;exec() &lt;br/&gt;
3021&nbsp;{ &lt;br/&gt;
3022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int ap, na, nc, *bp; &lt;br/&gt;
3023&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int ts, ds, sep; &lt;br/&gt;
3024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register c, *ip; &lt;br/&gt;
3025&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register char *cp; &lt;br/&gt;
3026&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern uchar; &lt;br/&gt;
3027 &lt;br/&gt;
3028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* pick up file names &lt;br/&gt;
3030&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* and check various modes &lt;br/&gt;
3031&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* for execute permission &lt;br/&gt;
3032&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3033 &lt;br/&gt;
3034&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:namei|namei]](&[[code:uchar|uchar]], 0); &lt;br/&gt;
3035&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip == NULL) &lt;br/&gt;
3036&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip ← 程序文件的INODE
&lt;/div&gt;
3037&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(execnt &gt;= NEXEC) &lt;br/&gt;
3038&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&execnt, EXPRI); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*execnt 定义在 [[file:systm.h|systm.h]]
*若 同时执行[[code:exec|exec]]的进程过多，则睡眠
**[[睡眠原因]] : &execnt
**[[睡眠优先级]] : EXPRI
*此举的解释在3010
**[[code:exec|exec]]需要使用大量的INODE缓存&lt;br/&gt;若同时执行[[code:exec|exec]]进程过多，INODE耗尽，形成资源死锁
&lt;/div&gt;
3039&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;execnt++; &lt;br/&gt;
3040&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:getblk|getblk]](NODEV); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*申请 临时缓存块 bp，用于保存参数
&lt;/div&gt;
3041&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:access|access]](ip, IEXEC) &lt;nowiki&gt;||&lt;/nowiki&gt; (ip-&gt;i_mode&IFMT)!=0) &lt;br/&gt;
3042&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*检查 ip 的执行权限
*检查 ip 是否是特殊文件
&lt;/div&gt;
3043 &lt;br/&gt;
3044&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3045&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* pack up arguments into &lt;br/&gt;
3046&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* allocated disk buffer &lt;br/&gt;
3047&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3048 &lt;br/&gt;
3049&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = bp-&gt;b_addr; &lt;br/&gt;
3050&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;na = 0; &lt;br/&gt;
3051&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nc = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*na : 参数个数
*nc : 参数包含的字符数
&lt;/div&gt;
&lt;div class="wikinote"&gt;
3052 - 3074
*将 参数 从[[用户态]]地址空间 读出，写入bp
&lt;/div&gt;
3052&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ap = [[code:fuword|fuword]]([[code:user|u.u_arg]][1])) { &lt;br/&gt;
3053&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;na++; &lt;br/&gt;
3054&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ap == -1) &lt;br/&gt;
3055&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
3056&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][1] =+ 2; &lt;br/&gt;
3057&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(;;) { &lt;br/&gt;
3058&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = [[code:fubyte|fubyte]](ap++); &lt;br/&gt;
3059&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c == -1) &lt;br/&gt;
3060&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
3061&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*cp++ = c; &lt;br/&gt;
3062&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nc++; &lt;br/&gt;
3063&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(nc &gt; 510) { &lt;br/&gt;
3064&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = E2BIG; &lt;br/&gt;
3065&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 参数字符数 超过 bp大小，则抛出错误
**[[错误代码]] : E2BIG
&lt;/div&gt;
3066&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3067&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c == 0) &lt;br/&gt;
3068&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
3069&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3070&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3071&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((nc&1) != 0) { &lt;br/&gt;
3072&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*cp++ = 0; &lt;br/&gt;
3073&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nc++; &lt;br/&gt;
3074&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 字符数为奇数，则加入空字符补齐
*此处含义不明，列入[[遗留问题]]
&lt;/div&gt;
3075 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*3076 - 3109
*从 程序代码文件 读取 前4个字w[]，保存到u.u_arg[0-3]
**w[0] : 特殊位，用于标识程序特殊性，参看3079，及 man a.out
**w[1] : 正文段大小
**w[2] : 数据段大小
**w[3] : bss区大小
*根据 特殊位，作相关设置&lt;br/&gt;这里不详细说明，请参看 man a.out
&lt;/div&gt;
3076&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* read in first 8 bytes &lt;br/&gt;
3077&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* of file for segment &lt;br/&gt;
3078&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* sizes: &lt;br/&gt;
3079&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* w0 = 407/410/411 (410 -&gt; RO text) (411 -&gt; sep ID) &lt;br/&gt;
3080&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* w1 = text size &lt;br/&gt;
3081&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* w2 = data size &lt;br/&gt;
3082&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* w3 = bss size &lt;br/&gt;
3083&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3084 &lt;br/&gt;
3085&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] = &[[code:user|u.u_arg]][0]; &lt;br/&gt;
3086&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = 8; &lt;br/&gt;
3087&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset[1]]] = 0; &lt;br/&gt;
3088&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset[0]]] = 0; &lt;br/&gt;
3089&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_segflg]] = 1; &lt;br/&gt;
3090&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:readi|readi]](ip); &lt;br/&gt;
3091&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_segflg]] = 0; &lt;br/&gt;
3092&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]]) &lt;br/&gt;
3093&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
3094&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sep = 0; &lt;br/&gt;
3095&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_arg[0]]] == 0407) { &lt;br/&gt;
3096&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][2] =+ [[code:user|u.u_arg]][1]; &lt;br/&gt;
3097&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][1] = 0; &lt;br/&gt;
3098&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
3099&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_arg]][0] == 0411) &lt;br/&gt;
3100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sep++; else &lt;br/&gt;
3101&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_arg]][0] != 0410) { &lt;br/&gt;
3102&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENOEXEC; &lt;br/&gt;
3103&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
3104&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_arg]][1]!=0&&(ip-&gt;i_flag&ITEXT)==0&&ip-&gt;i_count!=1){ &lt;br/&gt;
3106&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ETXTBSY; &lt;br/&gt;
3107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
3108&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 程序文件含有正文段 ([[code:user|u.u_arg]][1]!=0)&lt;br/&gt;且 该文件作为数据文件被其他进程打开((ip-&gt;i_flag&ITEXT)==0&&ip-&gt;i_count!=1)，则抛出错误
**[[错误代码]] : ETXTBSY
**原因 : 正文段不可被修改
&lt;/div&gt;
3109 &lt;br/&gt;
3110&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3111&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* find text and data sizes &lt;br/&gt;
3112&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* try them out for possible &lt;br/&gt;
3113&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* exceed of max sizes &lt;br/&gt;
3114&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3115 &lt;br/&gt;
3116&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ts = (([[code:user|u.u_arg]][1]+63)&gt;&gt;6) & 01777; &lt;br/&gt;
3117&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ds = (([[code:user|u.u_arg]][2]+[[code:user|u.u_arg]][3]+63)&gt;&gt;6) & 0177; &lt;br/&gt;
3118&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:estabur|estabur]](ts, ds, SSIZE, sep)) &lt;br/&gt;
3119&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ts ← 正文段占用内存块数
*ds ← 数据段占用内存块数
*调用[[code:estabur|estabur]]，不是为了 将参数装载到地址映照表，而是为了 检验ts,ds是否超出内存限制
**SSIZE 定义在 [[File:param.h|param.h]]
&lt;/div&gt;
3120 &lt;br/&gt;
3121&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* allocate and clear core &lt;br/&gt;
3123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* at this point, committed &lt;br/&gt;
3124&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to the new image &lt;br/&gt;
3125&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3126 &lt;br/&gt;
3127&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_prof]][3] = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*停止统计 [[程序统计直方图]] 
&lt;/div&gt;
3128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:xfree|xfree]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放 当前进程 的[[共享正文段]]
&lt;/div&gt;
3129&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:expand|expand]](USIZE); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*内存图像空间 收缩到 PPDA区大小
*必要性 值得 讨论...(列入[[遗留问题]])
&lt;/div&gt;
3130&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:xalloc|xalloc]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*分配 [[共享正文段]]
&lt;/div&gt;
3131&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = USIZE+ds+SSIZE; &lt;br/&gt;
3132&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:expand|expand]](c); &lt;br/&gt;
3133&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(--c &gt;= USIZE) &lt;br/&gt;
3134&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:clearseg|clearseg]]([[code:user|u.u_procp]]-&gt;p_addr+c); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*分配 内存图像空间
*除PPDA区外，全部清零
&lt;/div&gt;
3135 &lt;br/&gt;
3136&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* read in data segment */ &lt;br/&gt;
3137 &lt;br/&gt;
3138&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:estabur|estabur]](0, ds, 0, 0); &lt;br/&gt;
3139&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] = 0; &lt;br/&gt;
3140&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] = 020+[[code:user|u.u_arg]][1]; &lt;br/&gt;
3141&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = [[code:user|u.u_arg]][2]; &lt;br/&gt;
3142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:readi|readi]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从 程序文件 读入数据段
*与[[code:xalloc|xalloc]] 4460 类似
&lt;/div&gt;
3143 &lt;br/&gt;
3144&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3145&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* initialize stack segment &lt;br/&gt;
3146&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3147 &lt;br/&gt;
3148&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_tsize]] = ts; &lt;br/&gt;
3149&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_dsize]] = ds; &lt;br/&gt;
3150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ssize]] = SSIZE; &lt;br/&gt;
3151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_sep]] = sep; &lt;br/&gt;
3152&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:estabur|estabur]]([[code:user|u.u_tsize]], [[code:user|u.u_dsize]], [[code:user|u.u_ssize]], [[code:user|u.u_sep]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 新的参数，并置 地址映照表
&lt;/div&gt;
3153&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = bp-&gt;b_addr; &lt;br/&gt;
3154&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap = -nc - na*2 - 4; &lt;br/&gt;
3155&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R6] = ap; &lt;br/&gt;
3156&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](ap, na); &lt;br/&gt;
3157&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = -nc; &lt;br/&gt;
3158&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(na--) { &lt;br/&gt;
3159&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](ap=+2, c); &lt;br/&gt;
3160&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do &lt;br/&gt;
3161&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:subyte|subyte]](c++, *cp); &lt;br/&gt;
3162&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(*cp++); &lt;br/&gt;
3163&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3164&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](ap+2, -1); &lt;br/&gt;
3165 &lt;br/&gt;
&lt;div class="wikinote"&gt;
3153 - 3165
*新用户栈 赋值 为以下形式
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_exec.png"/></p>
*寻址方式: 参看[[编程技巧#负数表示堆栈区]]
&lt;/div&gt;
3166&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
3167&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* set SUID/SGID protections, if no tracing &lt;br/&gt;
3168&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
3169 &lt;br/&gt;
3170&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:user|u.u_procp]]-&gt;p_flag&STRC)==0) { &lt;br/&gt;
3171&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_mode&ISUID) &lt;br/&gt;
3172&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_uid]] != 0) { &lt;br/&gt;
3173&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_uid]] = ip-&gt;i_uid; &lt;br/&gt;
3174&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_uid = ip-&gt;i_uid; &lt;br/&gt;
3175&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3176&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_mode&ISGID) &lt;br/&gt;
3177&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_gid]] = ip-&gt;i_gid; &lt;br/&gt;
3178&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[遗留问题]]
&lt;/div&gt;
3179 &lt;br/&gt;
3180&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* clear sigs, regs, and return */ &lt;br/&gt;
3181 &lt;br/&gt;
3182&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = ip; &lt;br/&gt;
3183&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(ip = &[[code:user|u.u_signal]][0]; ip &lt; &[[code:user|u.u_signal]][NSIG]; ip++) &lt;br/&gt;
3184&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((*ip & 1) == 0) &lt;br/&gt;
3185&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清 用户 信号处理函数
*参看 [[信号系统]]
&lt;/div&gt;
3186&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(cp = &[[code:regloc|regloc]][0]; cp &lt; &[[code:regloc|regloc]][6];) &lt;br/&gt;
3187&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][*cp++] = 0; &lt;br/&gt;
3188&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R7] = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 核心栈 中保存的寄存器值全部置0
*R6的值不被清，在3155被置
&lt;/div&gt;
3189&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(ip = &[[code:user|u.u_fsav]][0]; ip &lt; &[[code:user|u.u_fsav]][25];) &lt;br/&gt;
3190&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip++ = 0; &lt;br/&gt;
3191&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = c; &lt;br/&gt;
3192 &lt;br/&gt;
3193&nbsp;bad: &lt;br/&gt;
3194&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](ip); &lt;br/&gt;
3195&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
3196&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(execnt &gt;= NEXEC) &lt;br/&gt;
3197&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&execnt); &lt;br/&gt;
3198&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;execnt--; &lt;br/&gt;
3199&nbsp;} &lt;br/&gt;
3200&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Param===
:(exec = 11.)
:&lt;b&gt;sys exec; name; args&lt;/b&gt;
:...
:name: &lt;...\0&gt;
:...
:args: arg0; arg1; ...; 0
:arg0: &lt;...\0&gt;
:arg1: &lt;...\0&gt;
:...
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:exec by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:exit</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*进程自我终止
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3212&lt;br/&gt;
3213&nbsp;/* Release resources.&lt;br/&gt;
3214&nbsp;&nbsp;* Save u. area for parent to look at.&lt;br/&gt;
3215&nbsp;&nbsp;* Enter zombie state.&lt;br/&gt;
3216&nbsp;&nbsp;* Wake up parent and init processes,&lt;br/&gt;
3217&nbsp;&nbsp;* and dispose of children.&lt;br/&gt;
3218&nbsp;&nbsp;*/&lt;br/&gt;
3219&nbsp;exit()&lt;br/&gt;
3220&nbsp;{&lt;br/&gt;
3221&nbsp;&nbsp;&nbsp;&nbsp;register int *q, a;&lt;br/&gt;
3222&nbsp;&nbsp;&nbsp;&nbsp;register [[code:proc|struct proc]] *p;&lt;br/&gt;
3223&lt;br/&gt;
3224&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_procp-&gt;p_flag =& ~STRC;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*去除当前进程的STRC标识，参看[[跟踪]]
&lt;/div&gt;
3225&nbsp;&nbsp;&nbsp;&nbsp;for(q = &[[code:user|u]].u_signal[0]; q &lt; &[[code:user|u]].u_signal[NSIG];)&lt;br/&gt;
3226&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*q++ = 1;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清空信号处理函数表,参看[[信号系统]]
&lt;/div&gt;
3227&nbsp;&nbsp;&nbsp;&nbsp;for(q = &[[code:user|u]].u_ofile[0]; q &lt; &[[code:user|u]].u_ofile[NOFILE]; q++)&lt;br/&gt;
3228&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a = *q) {&lt;br/&gt;
3229&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*q = NULL;&lt;br/&gt;
3230&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:closef|closef]](a);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清空进程打开文件表,并关闭原先启用的[[code:struct file|file结构]],参看[[内存打开文件结构]]
&lt;/div&gt;
3231&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
3232&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:user|u]].u_cdir);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放当前所在目录的内存inode
&lt;/div&gt;
3233&nbsp;&nbsp;&nbsp;&nbsp;[[code:xfree|xfree]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放共享正文段
&lt;/div&gt;
3234&nbsp;&nbsp;&nbsp;&nbsp;a = [[code:malloc|malloc]](swapmap, 1);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*在盘交换区上分配大小为1块(512个字节)的空间,我们且称其为 残留信息块
&lt;/div&gt;
3235&nbsp;&nbsp;&nbsp;&nbsp;if(a == NULL)&lt;br/&gt;
3236&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("out of swap");&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若分配失败,提示出错
&lt;/div&gt;
3237&nbsp;&nbsp;&nbsp;&nbsp;p = [[code:getblk|getblk]](swapdev, a);&lt;br/&gt;
3238&nbsp;&nbsp;&nbsp;&nbsp;[[code:bcopy|bcopy]](&u, p-&gt;b_addr, 256);&lt;br/&gt;
3239&nbsp;&nbsp;&nbsp;&nbsp;[[code:bwrite|bwrite]](p);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若分配成功,在内存中为 残留信息块 分配一缓存块p
*将进程图像中的[[code:user|USER结构]]以及其他一些内容读入p
**说明:此处意在保留[[code:user|USER结构]]的信息,其他的内容无所谓
*将缓存块p写回盘交换区的 残留信息块中
&lt;/div&gt;
3240&nbsp;&nbsp;&nbsp;&nbsp;q = [[code:user|u]].u_procp;&lt;br/&gt;
3241&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]](coremap, q-&gt;p_size, q-&gt;p_addr);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放内存中 进程图像站的内存空间
&lt;/div&gt;
3242&nbsp;&nbsp;&nbsp;&nbsp;q-&gt;p_addr = a;&lt;br/&gt;
3243&nbsp;&nbsp;&nbsp;&nbsp;q-&gt;p_stat = SZOMB;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将进程ppda区指针指向残留信息块
*置进程状态为SZOMB,此举是为了让父进程在调用[[code:wait|wait]]函数时搜索自己终止的子进程时使用
&lt;/div&gt;
3244&lt;br/&gt;
3245&nbsp;loop:&lt;br/&gt;
3246&nbsp;&nbsp;&nbsp;&nbsp;for(p = &[[code:struct proc|proc]][0]; p &lt; &[[code:struct proc|proc]][NPROC]; p++)&lt;br/&gt;
3247&nbsp;&nbsp;&nbsp;&nbsp;if(q-&gt;p_ppid == p-&gt;p_pid) {&lt;br/&gt;
3248&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&[[code:struct proc|proc]][1]);&lt;br/&gt;
3249&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](p);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*寻找当前进程的父进程
**若能找到,唤醒父进程与1号进程
&lt;/div&gt;
3250&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(p = &[[code:struct proc|proc]][0]; p &lt; &[[code:struct proc|proc]][NPROC]; p++)&lt;br/&gt;
3251&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(q-&gt;p_pid == p-&gt;p_ppid) {&lt;br/&gt;
3252&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_ppid  = 1;&lt;br/&gt;
3253&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (p-&gt;p_stat == SSTOP)&lt;br/&gt;
3254&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:setrun|setrun]](p);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将当前进程的所有子进程的父进程置为1号进程,你可以把这个动作看作成是交代后事
*若子进程为SSTOP状态,则将其置为就绪态,交代[[跟踪]]的后事
&lt;/div&gt;
3255&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
3256&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:swtch|swtch]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[进程调度]],切换进程上台
&lt;/div&gt;
3257&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* no return */&lt;br/&gt;
3258&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
3259&nbsp;&nbsp;&nbsp;&nbsp;q-&gt;p_ppid = 1;&lt;br/&gt;
3260&nbsp;&nbsp;&nbsp;&nbsp;goto loop;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若不能找到父进程,则强制将1#进程置为父进程,跳转至3245重新搜索
**搜索的结果肯定是搜到父进程为1号进程,然后再执行后续操作
&lt;/div&gt;
3261&nbsp;}&lt;br/&gt;
3262 /* -------------------------   */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程状态]]

===Caller===
*[[code:rexit]]
*[[code:stop]]
*[[code:psig]]
*[[code:procxmt]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:exit by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:expand</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*进程图像大小变化时的相关处理
*传入一个参数 newsize
**newsize:进程图像的新大小
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2250&lt;br/&gt;
2251&nbsp;/*&lt;br/&gt;
2252&nbsp;&nbsp;* Change the size of the data+stack regions of the process.&lt;br/&gt;
2253&nbsp;&nbsp;* If the size is shrinking, it's easy-- just release the&lt;br/&gt;
2254&nbsp;&nbsp;* extra core. If it's growing, and there is core, just&lt;br/&gt;
2255&nbsp;&nbsp;* allocate it and copy the image, taking care to reset&lt;br/&gt;
2256&nbsp;&nbsp;* registers to account for the fact that the system's&lt;br/&gt;
2257&nbsp;&nbsp;* stack has moved.&lt;br/&gt;
2259&nbsp;&nbsp;* swapped out after adjusting the size requirement--&lt;br/&gt;
2260&nbsp;&nbsp;* when it comes in, enough core will be allocated.&lt;br/&gt;
2261&nbsp;&nbsp;* Because of the ssave and SSWAP flags, control will&lt;br/&gt;
2262&nbsp;&nbsp;* resume after the swap in swtch, which executes the return&lt;br/&gt;
2263&nbsp;&nbsp;* from this stack level.&lt;br/&gt;
2264&nbsp;&nbsp;*&lt;br/&gt;
2265&nbsp;&nbsp;* After the expansion, the caller will take care of copying&lt;br/&gt;
2266&nbsp;&nbsp;* the user's stack towards or away from the data area.&lt;br/&gt;
2267&nbsp;&nbsp;*/&lt;br/&gt;
2268&nbsp;expand(newsize)&lt;br/&gt;
2269&nbsp;{&lt;br/&gt;
2270&nbsp;&nbsp;&nbsp;&nbsp;int i, n;&lt;br/&gt;
2271&nbsp;&nbsp;&nbsp;&nbsp;register *p, a1, a2;&lt;br/&gt;
2272&lt;br/&gt;
2273&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]] = [[code:user|u.u_procp]];&lt;br/&gt;
2274&nbsp;&nbsp;&nbsp;&nbsp;n = p-&gt;p_size;&lt;br/&gt;
2275&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]]-&gt;p_size = newsize;&lt;br/&gt;
2276&nbsp;&nbsp;&nbsp;&nbsp;a1 = [[code:proc|p]]-&gt;p_addr;&lt;br/&gt;
2277&nbsp;&nbsp;&nbsp;&nbsp;if(n &gt;= newsize) {&lt;br/&gt;
2278&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]](coremap, n-newsize, a1+newsize);&lt;br/&gt;
2279&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
2280&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若进程图像所需空间保持不变或者变小,则直接释放原内存中多余的空间,返回
&lt;/div&gt;
2281&nbsp;&nbsp;&nbsp;&nbsp;[[code:savu|savu]]([[code:user|u]].u_rsav);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*保存当前r5,r6至[[code:user|u.u_rsav[2]数组]]中
&lt;/div&gt;
2282&nbsp;&nbsp;&nbsp;&nbsp;a2 = [[code:malloc|malloc]](coremap, newsize);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若进程图像所需空间变大,则在内存中分配一块新的空间
&lt;/div&gt;
2283&nbsp;&nbsp;&nbsp;&nbsp;if(a2 == NULL) {&lt;br/&gt;
2284&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:savu|savu]](u.u_ssav);&lt;br/&gt;
2285&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:xswap|xswap]](p, 1, n);&lt;br/&gt;
2286&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]]-&gt;p_flag =&lt;nowiki&gt;|&lt;/nowiki&gt; SSWAP;&lt;br/&gt;
2287&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:swtch|swtch]]();&lt;br/&gt;
2288&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* no return */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若分配失败,则当前进程无法继续在内存中滞留
**保存当前r5,r6至[[code:user|u.u_ssav[2]数组]]中,因为之后会置SSWAP标志,对于带有SSWAP标志的进程,[[code:swtch|swtch]]选中其上台时会从[[code:user|u.u_ssav[2]数组]]中恢复r5,r6
**将进程图像调出至 盘交换区
**置SSWAP标志
**调用[[code:swtch|swtch]]进行[[进程调度]]
&lt;/div&gt;
2289&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2290&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]]-&gt;p_addr = a2;&lt;br/&gt;
2291&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i&lt;n; i++)&lt;br/&gt;
2292&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:copyseg|copyseg]](a1+i, a2++);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若分配成功
**将原进程图像搬至新分配的内存空间
&lt;/div&gt;
2293&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]](coremap, n, a1);&lt;br/&gt;
2295&nbsp;&nbsp;&nbsp;&nbsp;[[code:sureg|sureg]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放原进程图像在内存中的空间
*为进程加载地址映照表
&lt;/div&gt;
2296&nbsp;}&lt;br/&gt;
2297&nbsp;/* -------------------------*/&lt;br/&gt;
2298&lt;br/&gt;
2299&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存管理]]

===Caller===
*[[code:main]]
*[[code:exec]]
*[[code:sbreak]]
*[[code:grow]]
*[[code:xalloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:expand by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:falloc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*在[[code:struct file|file[] ]] 中分配文件结构[[code:struct file|struct file]]
*在[[code:user|u.u_ofile]] 中 分配 文件打开结构
**置[[skill:u.u_ar0|u.u_ar0[R0]]]为i，[[code:user|u.u_ofile[i]]]指向分配的文件打开结构
*返回值
**若无法分配，则返回 NULL
**否则，返回分配的文件结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6838&nbsp;/*&lt;br/&gt;
6839&nbsp;&nbsp;* Allocate a user file descriptor &lt;br/&gt;
6840&nbsp;&nbsp;* and a file structure. &lt;br/&gt;
6841&nbsp;&nbsp;* Initialize the descriptor &lt;br/&gt;
6842&nbsp;&nbsp;* to point at the file structure. &lt;br/&gt;
6843&nbsp;&nbsp;* &lt;br/&gt;
6844&nbsp;&nbsp;* no file -- if there are no available &lt;br/&gt;
6845&nbsp;&nbsp;* file structures. &lt;br/&gt;
6846&nbsp;&nbsp;*/ &lt;br/&gt;
6847&nbsp;falloc() &lt;br/&gt;
6848&nbsp;{ &lt;br/&gt;
6849&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct file|struct file]] *fp; &lt;br/&gt;
6850&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register i; &lt;br/&gt;
6851 &lt;br/&gt;
6852&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((i = [[code:ufalloc|ufalloc]]()) &lt; 0) &lt;br/&gt;
6853&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*在[[code:user|u.u_ofile]] 中 指向打开文件结构的指针
**若分配失败，则返回NULL
**否则 i 置为分配单元在[[code:user|u.u_ofile]]的位置&lt;br/&gt;同时 置[[skill:u.u_ar0|u.u_ar0[R0]]]为i&lt;br/&gt;[[code:user|u.u_ofile[i]]]指向分配的文件打开结构
&lt;/div&gt;
6854&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (fp = &[[code:struct file|file]][0]; fp &lt; &[[code:struct file|file]][NFILE]; fp++) &lt;br/&gt;
6855&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fp-&gt;f_count==0) { &lt;br/&gt;
6856&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ofile]][i] = fp; &lt;br/&gt;
6857&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;f_count++; &lt;br/&gt;
6858&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;f_offset[0] = 0; &lt;br/&gt;
6859&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;f_offset[1] = 0; &lt;br/&gt;
6860&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(fp); &lt;br/&gt;
6861&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:struct file|file]]数组，寻找空闲的元素
*若找到，则
**[[code:user|u.u_ofile]][i] 指向 fp
**初始化 fp 的参数，参看[[code:struct file|struct file]]
&lt;/div&gt;
6862&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("no file<br/>\n"); &lt;br/&gt;
6863&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENFILE; &lt;br/&gt;
6864&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若没找到，则
**打印错误信息
**抛出错误，[[错误代码]] : ENFILE
**返回NULL
&lt;/div&gt;
6865&nbsp;} &lt;br/&gt;
6866&nbsp;/* ------------------------- */ &lt;br/&gt;
6867 &lt;br/&gt;
6868 &lt;br/&gt;
6869 &lt;br/&gt;
6870 &lt;br/&gt;
6871 &lt;br/&gt;
6872 &lt;br/&gt;
6873 &lt;br/&gt;
6874 &lt;br/&gt;
6875 &lt;br/&gt;
6876 &lt;br/&gt;
6877 &lt;br/&gt;
6878 &lt;br/&gt;
6879 &lt;br/&gt;
6880 &lt;br/&gt;
6881 &lt;br/&gt;
6882 &lt;br/&gt;
6883 &lt;br/&gt;
6884 &lt;br/&gt;
6885 &lt;br/&gt;
6886 &lt;br/&gt;
6887 &lt;br/&gt;
6888 &lt;br/&gt;
6889 &lt;br/&gt;
6890 &lt;br/&gt;
6891 &lt;br/&gt;
6892 &lt;br/&gt;
6893 &lt;br/&gt;
6894 &lt;br/&gt;
6895 &lt;br/&gt;
6896 &lt;br/&gt;
6897 &lt;br/&gt;
6898 &lt;br/&gt;
6899 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存打开文件结构]]

===Caller===
*[[code:open1]]
*[[code:pipe]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:falloc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:flushtty</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*清空 指定tty 的队列
*共输入1个参数
**atp : 指向 指定tty
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8250&nbsp;/* flush all TTY queues &lt;br/&gt;
8251&nbsp;&nbsp;*/ &lt;br/&gt;
8252&nbsp;flushtty(atp) &lt;br/&gt;
8253&nbsp;[[code:struct tty|struct tty]] *atp; &lt;br/&gt;
8254&nbsp;{ &lt;br/&gt;
8255&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp; &lt;br/&gt;
8256&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int sps; &lt;br/&gt;
8257&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = atp; &lt;br/&gt;
8258&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ([[code:getc|getc]](&tp-&gt;t_canq) &gt;= 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清空 非原始输入队列
&lt;/div&gt;
8259&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ([[code:getc|getc]](&tp-&gt;t_outq) &gt;= 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清空 输出队列
&lt;/div&gt;
8260&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&tp-&gt;t_rawq); &lt;br/&gt;
8261&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&tp-&gt;t_outq); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*唤醒 等待以下队列的进程
**原始输入队列
**输出队列
&lt;/div&gt;
8262&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sps = PS-&gt;[[skill:integ|integ]]; &lt;br/&gt;
8263&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl5]](); &lt;br/&gt;
8264&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ([[code:getc|getc]](&tp-&gt;t_rawq) &gt;= 0); &lt;br/&gt;
8265&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_delct = 0; &lt;br/&gt;
8266&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS-&gt;[[skill:integ|integ]] = sps; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清空 原始输入队列
*清零 定界符数
*中断等级提升到5，为了防止 清空过程 中有新的字符进入
&lt;/div&gt;
8267&nbsp;} &lt;br/&gt;
8268&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[字符设备管理]]

===Caller===
*[[code:wflushtty]]
*[[code:ttyinput]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:flushtty by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:fork</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*fork 的系统调用函数
*用于生成子进程
*返回值
**父进程 返回 子进程进程号
**子进程 返回 0(子进程返回值 设置 参看[[系统调用:fork]])
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3320 &lt;br/&gt;
3321&nbsp;/* fork system call. */ &lt;br/&gt;
3322&nbsp;fork() &lt;br/&gt;
3323&nbsp;{ &lt;br/&gt;
3324&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *p1, *p2; &lt;br/&gt;
3325 &lt;br/&gt;
3326&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1 = [[code:user|u.u_procp]]; &lt;br/&gt;
3327&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(p2 = &[[code:proc|proc]][0]; p2 &lt; &[[code:proc|proc]][NPROC]; p2++) &lt;br/&gt;
3328&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p2-&gt;p_stat == NULL) &lt;br/&gt;
3329&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto found; &lt;br/&gt;
3330&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EAGAIN; &lt;br/&gt;
3331&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*在 [[code:proc|proc]] 表 中查找空闲项
**若未找到，抛出错误
***[[错误代码]] : EAGAIN
*注：在3334 [[code:newproc|newproc]]中 其实也执行类似的代码&lt;br/&gt;但是 [[code:newproc|newproc]] 中对于没有找到空闲项的情况 处理过于暴力(抛出错误，等待用户干预)&lt;br/&gt;故在这里采用温和的方式处理错误(同时 也形成了 代码冗余)
&lt;/div&gt;
3332 &lt;br/&gt;
3333&nbsp;found: &lt;br/&gt;
3334&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:newproc|newproc]]()) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下代码由子进程运行
*初始化 子进程参数
*置 子进程 [[code:fork|fork]] 返回值 为 父进程进程号(会被清零，参看[[系统调用:fork]])
&lt;/div&gt;
3335&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0] = p1-&gt;p_pid; &lt;br/&gt;
3336&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cstime]][0] = 0; &lt;br/&gt;
3337&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cstime]][1] = 0; &lt;br/&gt;
3338&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_stime]] = 0; &lt;br/&gt;
3339&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cutime]][0] = 0; &lt;br/&gt;
3340&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cutime]][1] = 0; &lt;br/&gt;
3341&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_utime]] = 0; &lt;br/&gt;
3342&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
3343&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3344&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0] = p2-&gt;p_pid; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*父进程 返回值 置为 子进程进程号
&lt;/div&gt;
3345 &lt;br/&gt;
3346&nbsp;out: &lt;br/&gt;
3347&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R7] =+ 2; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此句 的 作用，参看[[系统调用:fork]]
&lt;/div&gt;
3348&nbsp;} &lt;br/&gt;
3349&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[进程调度#创建子进程]]

===Param===
:(fork = 2.)
:&lt;b&gt;sys fork&lt;/b&gt;
:(new process return)
:(old process return)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:fork by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:free</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*释放 指定设备指定的占用块
*共传入两个参数 dev , bno
**dev : 指定设备的设备号
**bno : 指定块号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6994 &lt;br/&gt;
6995&nbsp;/* &lt;br/&gt;
6996&nbsp;&nbsp;* place the specified disk block &lt;br/&gt;
6997&nbsp;&nbsp;* back on the free list of the &lt;br/&gt;
6998&nbsp;&nbsp;* specified device. &lt;br/&gt;
6999&nbsp;&nbsp;*/ &lt;br/&gt;
7000&nbsp;free(dev, bno) &lt;br/&gt;
7001&nbsp;{ &lt;br/&gt;
7002&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *fp, *bp, *ip; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*fp 指向 [[code:struct filsys|struct filsys]]
*bp 指向 [[code:struct buf|struct buf]]
&lt;/div&gt;
7003 &lt;br/&gt;
7004&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp = [[code:getfs|getfs]](dev); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据设备号 找到 设备的超级块
&lt;/div&gt;
7005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_fmod = 1; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 超级块的修改标志
*但 7026行 有同样的一行，此行意义不明，列入[[遗留问题]]
&lt;/div&gt;
7006&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(fp-&gt;s_flock) &lt;br/&gt;
7007&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&fp-&gt;s_flock, PINOD); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 超级块的空闲块数组 被置锁，则睡眠
*直到 超级块的空闲块数组 可用
*[[睡眠原因]] : filsys.s_flock
*[[进程优先级|睡眠优先级]] : PINOD
&lt;/div&gt;
7008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:badblock|badblock]](fp, bno, dev)) &lt;br/&gt;
7009&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若释放的不是一般块，则函数直接返回
&lt;/div&gt;
7010&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fp-&gt;s_nfree &lt;= 0) { &lt;br/&gt;
7011&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_nfree = 1; &lt;br/&gt;
7012&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_free[0] = 0; &lt;br/&gt;
7013&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 空闲块数组 无有效元素，则初始化空闲块数组
&lt;/div&gt;
7014&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fp-&gt;s_nfree &gt;= 100) { &lt;br/&gt;
7015&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_flock++; &lt;br/&gt;
7016&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:getblk|getblk]](dev, bno); &lt;br/&gt;
7017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = bp-&gt;b_addr; &lt;br/&gt;
7018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip++ = fp-&gt;s_nfree; &lt;br/&gt;
7019&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bcopy|bcopy]](fp-&gt;s_free, ip, 100); &lt;br/&gt;
7020&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_nfree = 0; &lt;br/&gt;
7021&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bwrite|bwrite]](bp); &lt;br/&gt;
7022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_flock = 0; &lt;br/&gt;
7023&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&fp-&gt;s_flock); &lt;br/&gt;
7024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 空闲块数组 满，则
** 空闲块数组 置锁
** 往刚才释放的空闲块中写入:
*** s-nfree
*** s-free 中的 100元素
** 清空空闲块数组（有效元素个数置零）
** 空闲块数组解锁
** 唤醒等待使用空闲块数组的进程
*此时，刚才释放的空闲块已经接管了之前filsys的空闲块管理任务&lt;br/&gt; 之后7025-7026行，将释放的空闲块纳入新的filsys进行管理&lt;br/&gt;参看[[文件系统#空闲块管理|文件系统之空闲块管理]]
&lt;/div&gt;
7025&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_free[fp-&gt;s_nfree++] = bno; &lt;br/&gt;
7026&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp-&gt;s_fmod = 1; &lt;br/&gt;
&lt;div class="wikinote"&gt;
* 刚才释放的空闲块的块号 加入 s-free 数组 管理
* 置 超级块 的修改标志
&lt;/div&gt;
7027&nbsp;} &lt;br/&gt;
7028&nbsp;/* ------------------------- */ &lt;br/&gt;
7029&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:itrunc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:free by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:fstat</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*获取文件的状态，保存到[[用户态]]地址空间指定地址
*使用2个隐式参数
**文件描述号 : u.u_ar0[R0]
**[[用户态]]地址空间指定地址 : u.u_arg[0]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6010&lt;br/&gt;
6011&nbsp;/*&lt;br/&gt;
6012&nbsp;&nbsp;* the fstat system call.&lt;br/&gt;
6013&nbsp;&nbsp;*/&lt;br/&gt;
6014&nbsp;fstat()&lt;br/&gt;
6015&nbsp;{&lt;br/&gt;
6016&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct file|fp]];&lt;br/&gt;
6017&lt;br/&gt;
6018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]] = [[code:getf|getf]]([[skill:u.u_ar0|u.u_ar0]][R0]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据 描述号 找到文件的[[code:struct file|struct file]]结构
&lt;/div&gt;
6019&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|fp]] == NULL)&lt;br/&gt;
6020&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6021&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:stat1|stat1]]([[code:struct file|fp]]-&gt;f_inode, [[code:user|u.u_arg]][0]);&lt;br/&gt;
6022&nbsp;}&lt;br/&gt;
6023&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存打开文件结构]]

===Param===
:(fstat = 28.)
:(file descriptor in r0)
:&lt;b&gt;sys fstat; buf&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:fstat by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:fubyte</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0806 ~ 0886]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:fubyte by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:fuibyte</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0806 ~ 0886]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:fuibyte by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:fuiword</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0806 ~ 0886]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:fuiword by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:fuword</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0806 ~ 0886]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:fuword by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getblk</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
&lt;div class="wikiheadnote"&gt;
*寻找 与指定设备指定块号匹配的缓存块
**如找到匹配，则返回 指向该缓存块[[code:struct buf|管理结构]]的指针
**如找不到匹配，则申请空闲缓存块，返回指向该缓存块[[code:struct buf|管理结构]]的指针
*共传入两个参数 dev , blkno
**dev 指定设备号
**blkno 指定块号
*getblk的第二功能(与设备IO无关)
**可以为程序提供512字节长的缓存区
**为避免错误,此时设备为NODEV
**此时传入参数 dev 为负
&lt;/div&gt;
4913&nbsp;&lt;br/&gt;
4914&nbsp;/* Assign a buffer for the given block.  If the appropriate   &lt;br/&gt;
4915&nbsp;&nbsp;* block is already associated, return it; otherwise search   &lt;br/&gt;
4916&nbsp;&nbsp;* for the oldest non-busy buffer and reassign it. &lt;br/&gt;
4917&nbsp;&nbsp;* When a 512-byte area is wanted for some random reason      &lt;br/&gt;
4918&nbsp;&nbsp;* (e.g. during exec, for the user arglist) getblk can be     &lt;br/&gt;
4919&nbsp;&nbsp;* called with device NODEV to avoid unwanted associativity.  &lt;br/&gt;
4920&nbsp;&nbsp;*/ &lt;br/&gt;
4921&nbsp;getblk(dev, blkno) &lt;br/&gt;
4922&nbsp;{ &lt;br/&gt;
4923&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *bp; &lt;br/&gt;
4924&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct devtab|struct devtab]] *dp; &lt;br/&gt;
4925&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern lbolt; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*关于lbolt,参见[[遗留问题]]
&lt;/div&gt;
4926 &lt;br/&gt;
4927&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev[[skill:.d_major|.d_major]] &gt;= [[code:nblkdev|nblkdev]]) &lt;br/&gt;
4928&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("blkdev"); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果外设主设备号越界,则执行[[code:panic|panic]],进行出错处理
&lt;/div&gt;
4929 &lt;br/&gt;
4930&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loop: &lt;br/&gt;
4931&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dev &lt; 0) &lt;br/&gt;
4932&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = &[[code:bfreelist|bfreelist]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若dev为负数
**则将dp指向 NODEV设备 的[[code:struct devtab|设备控制结构]]
**此时 getblk 发挥第二功能
&lt;/div&gt;
4933&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else { &lt;br/&gt;
4934&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = [[code:bdevsw|bdevsw]][ dev[[skill:.d_major|.d_major]] ].d_tab; &lt;br/&gt;
4935&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dp == NULL) &lt;br/&gt;
4936&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("devtab"); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若dev为正数且不越界,则将dp指向该设备的[[code:struct devtab|设备控制结构]]
**此时如果dp为空,则调用[[code:panic|panic]]进行出错处理
&lt;/div&gt;
4937&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (bp=dp-&gt;b_forw; bp != dp; bp = bp-&gt;b_forw) {   &lt;br/&gt;
4938&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp-&gt;b_blkno!=blkno&lt;nowiki&gt; || &lt;/nowiki&gt;bp-&gt;b_dev!=dev)  &lt;br/&gt;
4939&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[设备队列#设备队列|设备队列]],查找与设备号dev和块号blkno匹配的缓存块
&lt;/div&gt;
4940&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级设为6,防止不必要的中断进入
&lt;/div&gt;
4941&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp-&gt;b_flags&B_BUSY) { &lt;br/&gt;
4942&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_flags &lt;nowiki&gt;=| &lt;/nowiki&gt;B_WANTED; &lt;br/&gt;
4943&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](bp, PRIBIO); &lt;br/&gt;
4944&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
4945&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果带有B_BUSY标志,表明当前块正在被使用,置B_WANTED
*进程睡眠
**睡眠原因 bp，参看[[睡眠原因#struct buf|睡眠原因]]
**睡眠优先级PRIBIO，参看[[进程优先级]]
*睡眠结束被唤醒,[[开中断]],回到4930行,重新从[[设备队列#设备队列|设备队列]]中寻找包含当前块的缓存
*这里涉及进程对于缓存块的竞争机制,参见[[设备缓存管理]]
&lt;/div&gt;
4946&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4947&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
4948&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:notavil|notavail]](bp); &lt;br/&gt;
4949&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(bp); &lt;br/&gt;
4950&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4951&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果不带B_BUSY标志,表明当前块可以被使用
*[[开中断]]
*将该缓存快从[[自由队列]]中取出,并返回指向该缓存管理块的指针bp
*此处与4960行的notavail函数疑似笔误
**在源代码中找不到该函数的定义,只有notavil
**Lions在分析到此处时也说见4999行(notavil的定义)
**因此可能是将notavil误写为了notavail
&lt;/div&gt;
4952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]](); &lt;br/&gt;
4953&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:bfreelist|bfreelist]].av_forw == &[[code:bfreelist|bfreelist]]) { &lt;br/&gt;
4954&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bfreelist|bfreelist]].b_flags&lt;nowiki&gt; =| B_WANTED; &lt;/nowiki&gt;&lt;br/&gt;
4955&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&[[code:bfreelist|bfreelist]], PRIBIO); &lt;br/&gt;
4956&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
4957&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
4958&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果没有在[[设备队列#设备队列|设备队列]]中找到 匹配缓存块
*处理机优先级设为6
*判断自由队列是否为空
**若为空,则[[code:bfreelist|bfreelist]]置B_WANTED位
**在[[code:bfreelist|bfreelist]]上睡眠,参看[[睡眠原因]]
**睡眠优先级 PRIBIO,参看[[进程优先级]]
**被唤醒后[[开中断]],回到4930行处开始执行
&lt;/div&gt;
4959&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
4960&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:notavil|notavail]](bp = [[code:bfreelist|bfreelist]].av_forw); &lt;br/&gt;
4961&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp-&gt;b_flags & B_DELWRI) { &lt;br/&gt;
4962&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_flags &lt;nowiki&gt;=| &lt;/nowiki&gt;B_ASYNC; &lt;br/&gt;
4963&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bwrite|bwrite]](bp); &lt;br/&gt;
4964&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
4965&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果自由队列不为空
**[[开中断]]
**从[[自由队列]]队首取出可用缓存块,增设B_BUSY标志
*判断是否含B_DELWRI标志
**若含B_DELWRI,增设B_ASYNC,将其异步写回设备
**回到4930行处开始执行
&lt;/div&gt;
4966&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_flags = B_BUSY &lt;nowiki&gt;|&lt;/nowiki&gt; B_RELOC; &lt;br/&gt;
4967&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_back-&gt;b_forw = bp-&gt;b_forw; &lt;br/&gt;
4968&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_forw-&gt;b_back = bp-&gt;b_back; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若不含B_DELWRI,b_flags置为B_BUSY
**B_RELOC标志为 UNIX 源代码写作时的遗留，已经无作用 (引自Lions源代码分析)
*将该缓存块从原设备队列中取出
&lt;/div&gt;
4969&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_forw = dp-&gt;b_forw; &lt;br/&gt;
4970&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_back = dp; &lt;br/&gt;
4971&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp-&gt;b_forw-&gt;b_back = bp; &lt;br/&gt;
4972&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp-&gt;b_forw = bp; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将该缓存块插入新的设备队列队首
&lt;/div&gt;
4973&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_dev = dev; &lt;br/&gt;
4974&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_blkno = blkno; &lt;br/&gt;
4975&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置缓存块的设备号与块号
*返回指向该缓存管理块的指针bp
&lt;/div&gt;
4976&nbsp;} &lt;br/&gt;
4977&nbsp;/* ------------------------- */ &lt;br/&gt;
===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_getblk_1.png"/></p>

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:exec]]
*[[code:exit]]
*[[code:bread]]
*[[code:breada]]
*[[code:smount]]
*[[code:writei]]
*[[code:iinit]]
*[[code:alloc]]
*[[code:free]]
*[[code:update]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getblk by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*从字符缓存池中读入一个字符
*传入1个参数:
**其值为[[code:struct clist|struct clist]]的地址
*返回值:
**若[[字符设备管理#I/O字符缓存队列|I/O字符缓存队列]]为空,返回-1
**否则返回读取到的字符
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0923&nbsp;/ Character list get/put&lt;br/&gt;
0924&lt;br/&gt;
0925&nbsp;/* -------------------------  */&lt;br/&gt;
0926&nbsp;.globl     _getc,  _putc&lt;br/&gt;
0927&nbsp;/* -------------------------  */&lt;br/&gt;
0928&nbsp;.globl     _cfreelist&lt;br/&gt;
0929&lt;br/&gt;
0930&nbsp;_getc:&lt;br/&gt;
0931&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r1&lt;br/&gt;
0932&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     PS,-(sp)&lt;br/&gt;
0933&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,-(sp)&lt;br/&gt;
0934&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS&lt;br/&gt;
0935&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $100,PS       / spl 5&lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级置为5，[[关中断]]
&lt;/div&gt;
0936&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(r1),r2      / first ptr&lt;br/&gt;
0937&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     9f            / empty&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若[[字符设备管理#I/O字符缓存队列|I/O字符缓存队列]]的队首指针为空,表明缓存队列为空,跳转至960行
&lt;/div&gt;
0938&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    (r2)+,r0      / character&lt;br/&gt;
&lt;div class="wikinote"&gt;
*R2在将[[字符设备管理#I/O字符缓存队列|I/O字符缓存队列]]队首字符读出至R0的同时,自己指向了下一个字符
&lt;/div&gt;
0939&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!377,r0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清R0符号位
&lt;/div&gt;
0940&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,2(r1)      &lt;br/&gt;
0941&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:DEC|dec]]     (r1)+         / count&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:struct clist|clist]].c-cc减一,同时R1指向[[code:struct clist|clist]].c-cf
&lt;/div&gt;
0942&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     1f&lt;br/&gt;
0943&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     (r1)+&lt;br/&gt;
0944&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     (r1)+         / last block&lt;br/&gt;
0945&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]]      2f&lt;br/&gt;
0946&nbsp;1:&lt;br/&gt;
0947&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $7,r2&lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断寄存器R2的值最后三位是否为000
**若为000,表明当前的缓存已被输出完,可以释放,原因请参考[[字符设备管理#缓存池的改造|缓存池的改造]]
&lt;/div&gt;
0948&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     3f&lt;br/&gt;
0949&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     -10(r2),(r1)    / next block&lt;br/&gt;
&lt;div class="wikinote"&gt;
*本句作用为将下一缓存的头指针赋给了[[code:struct clist|clist]].c-cf
**注:此处10为八进制数
&lt;/div&gt;
0950&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADD|add]]     $2,(r1)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[code:struct clist|clist]].c-cf指向I/O字符缓存队列中的第一个字符(加2意味着跳过了c-next)
&lt;/div&gt;
0951&nbsp;2:&lt;br/&gt;
0952&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:DEC|dec]]     r2&lt;br/&gt;
0953&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $7,r2&lt;br/&gt;
0954&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     _cfreelist,(r2)&lt;br/&gt;
0955&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,_cfreelist&lt;br/&gt;
&lt;div class="wikinote"&gt;
*952 - 955
*为将用完的缓存链入[[字符设备管理#自由字符缓存队列|自由字符缓存队列]]队首的操作
&lt;/div&gt;
0956&nbsp;3:&lt;br/&gt;
0957&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2&lt;br/&gt;
0958&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,PS&lt;br/&gt;
0959&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
0960&nbsp;9:&lt;br/&gt;
0961&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     4(r1)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[code:struct clist|clist]].c-cl置为NULL的操作,只有当在函数开始时检测到[[code:struct clist|clist]].c-cf =NULL时才会执行该语句，必要性不明，参见[[遗留问题]]
&lt;/div&gt;
0962&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $-1,r0&lt;br/&gt;
0963&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2&lt;br/&gt;
0964&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,PS&lt;br/&gt;
0965&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
0966&lt;br/&gt;
&lt;/div&gt;
===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_get.png"/></p>

===Ref===
*[[字符设备管理]]
*[[关于汇编函数的说明]]

===Caller===
*[[code:flushtty]]
*[[code:ttstart]]
*[[code:ttread]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:geterror</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 块设备返回的IO错误 传递给 user结构，由 user结构 返回给用户
*若 设备提示错误(b-&gt;flags & B_ERROR != 0) ,错误代码却为0 (bp-&gt;b_error==0)，则传递给user结构 [[错误代码|EIO错误]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5329 &lt;br/&gt;
5330&nbsp;/* &lt;br/&gt;
5331&nbsp;&nbsp;* Pick up the device’s error number and pass it to the &lt;br/&gt;
5332&nbsp;&nbsp;* user; if there is an error but the number is 0 set a &lt;br/&gt;
5333&nbsp;&nbsp;* generalised code.  Actually the latter is always true     &lt;br/&gt;
5334&nbsp;&nbsp;* because devices don’t yet return specific errors. &lt;br/&gt;
5335&nbsp;&nbsp;*/ &lt;br/&gt;
5336&nbsp;geterror(abp) &lt;br/&gt;
5337&nbsp;[[code:struct buf|struct buf]] *abp; &lt;br/&gt;
5338&nbsp;{ &lt;br/&gt;
5339&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *bp; &lt;br/&gt;
5340 &lt;br/&gt;
5341&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp]] = abp; &lt;br/&gt;
5342&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct buf|bp]]-&gt;b_flags&B_ERROR) &lt;br/&gt;
5343&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:user|u]].u_error = [[code:struct buf|bp]]-&gt;b_error)==0) &lt;br/&gt;
5344&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_error = [[错误代码|EIO]]; &lt;br/&gt;
5345&nbsp;} &lt;br/&gt;
5346&nbsp;/* ------------------------- */ &lt;br/&gt;
5347 &lt;br/&gt;
5348 &lt;br/&gt;
5349 &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:bwrite]]
*[[code:iowait]]
*[[code:physio]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:geterror by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getf</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 文件描述号 转换为 指向对应的[[code:struct file|struct file]] 的指针
*共输入一个参数 f
**f : 文件描述号
*返回值
** 若 f越界，则抛出错误，返回NULL
** 否则，返回对应的[[code:struct file|struct file]]指针
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6611&lt;br/&gt;
6612&nbsp;/*&lt;br/&gt;
6613&nbsp;&nbsp;* Convert a user supplied&lt;br/&gt;
6614&nbsp;&nbsp;* file descriptor into a pointer&lt;br/&gt;
6615&nbsp;&nbsp;* to a file structure.&lt;br/&gt;
6616&nbsp;&nbsp;* Only task is to check range&lt;br/&gt;
6617&nbsp;&nbsp;* of the descriptor.&lt;br/&gt;
6618&nbsp;&nbsp;*/&lt;br/&gt;
6619&nbsp;getf(f)&lt;br/&gt;
6620&nbsp;{&lt;br/&gt;
6621&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *fp, rf;&lt;br/&gt;
6622&lt;br/&gt;
6623&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rf = f;&lt;br/&gt;
6624&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rf&lt;0 &lt;nowiki&gt;||&lt;/nowiki&gt; rf&gt;=NOFILE)&lt;br/&gt;
6625&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
6626&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp = [[code:user|u.u_ofile]][rf];&lt;br/&gt;
6627&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fp != NULL)&lt;br/&gt;
6628&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(fp); &lt;br/&gt;
6629&nbsp;bad:&lt;br/&gt;
6630&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EBADF;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*抛出错误，[[错误代码]]:EBADF
&lt;/div&gt;
6631&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL);&lt;br/&gt;
6632 }&lt;br/&gt;
6633 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]
*[[内存打开文件结构]]

===Caller===
*[[code:rdwr]]
*[[code:close]]
*[[code:seek]]
*[[code:fstat]]
*[[code:dup]]
*[[code:sgtty]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getf by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getfs</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*返回 指定设备 的超级块，参考[[文件系统]]
*共传入一个参数 dev
**dev : 指定设备 的设备号
*返回 对应的超级块，类型为 [[code:struct filsys|struct filsys]]
*若无匹配，则抛出错误
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7149&nbsp;/* &lt;br/&gt;
7150&nbsp;&nbsp;* getfs maps a device number into &lt;br/&gt;
7151&nbsp;&nbsp;* a pointer to the incore super &lt;br/&gt;
7152&nbsp;&nbsp;* block. &lt;br/&gt;
7153&nbsp;&nbsp;* The algorithm is a linear &lt;br/&gt;
7154&nbsp;&nbsp;* search through the mount table. &lt;br/&gt;
7155&nbsp;&nbsp;* A consistency check of the  &lt;br/&gt;
7156&nbsp;&nbsp;* in core free-block and i-node &lt;br/&gt;
7157&nbsp;&nbsp;* counts. &lt;br/&gt;
7158&nbsp;&nbsp;* &lt;br/&gt;
7159&nbsp;&nbsp;* bad count on dev x/y -- the count &lt;br/&gt;
7160&nbsp;&nbsp;* check failed. At this point, all &lt;br/&gt;
7161&nbsp;&nbsp;* the counts are zeroed which will &lt;br/&gt;
7162&nbsp;&nbsp;* almost certainly lead to "no space" &lt;br/&gt;
7163&nbsp;&nbsp;* diagnostic &lt;br/&gt;
7164&nbsp;&nbsp;* panic: no fs -- the device is not mounted. &lt;br/&gt;
7165&nbsp;&nbsp;* this "cannot happen" &lt;br/&gt;
7166&nbsp;&nbsp;*/ &lt;br/&gt;
7167&nbsp;getfs(dev) &lt;br/&gt;
7168&nbsp;{ &lt;br/&gt;
7169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct mount|struct mount]] *p; &lt;br/&gt;
7170&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register char *n1, *n2; &lt;br/&gt;
7171 &lt;br/&gt;
7172&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for([[code:struct mount|p]] = &[[code:struct mount|mount]][0]; [[code:struct mount|p]] &lt; &[[code:struct mount|mount]][NMOUNT]; [[code:struct mount|p]]++) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历 mount 数组，寻找匹配的文件系统
*参考[[文件系统]]
&lt;/div&gt;
7173&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct mount|p]]-&gt;m_bufp != NULL && [[code:struct mount|p]]-&gt;m_dev == dev) { &lt;br/&gt;
7174&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|p]] = [[code:struct mount|p]]-&gt;m_bufp-&gt;b_addr; &lt;br/&gt;
7175&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n1 = [[code:struct filsys|p]]-&gt;s_nfree; &lt;br/&gt;
7176&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n2 = [[code:struct filsys|p]]-&gt;s_ninode; &lt;br/&gt;
7177&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n1 &gt; 100&lt;nowiki&gt; || &lt;/nowiki&gt;n2 &gt; 100) { &lt;br/&gt;
7178&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prdev|prdev]]("bad count", dev); &lt;br/&gt;
7179&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|p]]-&gt;s_nfree = 0; &lt;br/&gt;
7180&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|p]]-&gt;s_ninode = 0; &lt;br/&gt;
7181&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若参数错误(s_nfree s_ninode)，则输出错误，并修正错误
&lt;/div&gt;
7182&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return([[code:struct filsys|p]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*返回[[code:struct filsys|超级块结构]]
&lt;/div&gt;
7183&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7184&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("no fs"); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若无匹配，抛出错误
&lt;/div&gt;
7185 } &lt;br/&gt;
7186 /* ------------------------- */ &lt;br/&gt;
7187 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:access]]
*[[code:alloc]]
*[[code:free]]
*[[code:ialloc]]
*[[code:ifree]]
*[[code:iupdat]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getfs by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getgid</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*返回当前组的
**有效ID gid ，作为返回值的高字节
**真实ID rgid，作为返回值的低字节
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3471&nbsp;&lt;br/&gt;
3472&nbsp;getgid() &lt;br/&gt;
3473&nbsp;{ &lt;br/&gt;
3474 &lt;br/&gt;
3475&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0].lobyte = [[code:user|u]].u_rgid; &lt;br/&gt;
3476&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0].hibyte = [[code:user|u]].u_gid; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处使用了无名结构，参看[[编程技巧#无名结构|编程技巧之无名结构]]
&lt;/div&gt;

3477&nbsp;} &lt;br/&gt;
3478&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[权限管理]]

===Param===
:(getgid = 47.; not in assembler)
:&lt;b&gt;sys getgid&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getgid by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getmdev</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*本函数 由 [[code:smount|smount]] 和 [[code:sumount|sumount]] 调用，为其公共部分
*从 设备装载INODE 抽取 对应设备号
*使用1个隐式参数
**文件路径 : u.u_dirp(由[[code:namei|namei]]调用[[code:uchar|uchar]]使用)
*返回 设备号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6175 &lt;br/&gt;
6176&nbsp;/* &lt;br/&gt;
6177&nbsp;&nbsp;* Common code for mount and umount. &lt;br/&gt;
6178&nbsp;&nbsp;* Check that the user’s argument is a reasonable thing &lt;br/&gt;
6179&nbsp;&nbsp;*  on which to mount, and return the device number if so. &lt;br/&gt;
6180&nbsp;&nbsp;*/ &lt;br/&gt;
6181&nbsp;getmdev() &lt;br/&gt;
6182&nbsp;{ &lt;br/&gt;
6183&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register d, *[[code:struct inode|ip]]; &lt;br/&gt;
6184&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern uchar; &lt;br/&gt;
6185 &lt;br/&gt;
6186&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:namei|namei]](&[[code:uchar|uchar]], 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip ← 文件路径对应的INODE
&lt;/div&gt;
6187&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]] == NULL) &lt;br/&gt;
6188&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6189&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct inode|ip]]-&gt;i_mode&IFMT) != IFBLK) &lt;br/&gt;
6190&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENOTBLK; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*检查 ip 是否为 块设备装载INODE
**若不是，则抛出错误，[[错误代码]] : ENOTBLK
*关于6189用法，参考[[文件系统#INODE类型|INODE类型]]
&lt;/div&gt;
6191&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = [[code:struct inode|ip]]-&gt;i_addr[0]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*d ← 从ip抽取 设备号
*关于ip-&gt;i_addr[0] 为什么是设备号，参看[[文件系统#装载文件系统|装载文件系统]]
&lt;/div&gt;
6192&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]]-&gt;i_addr[0][[skill:.d_major|.d_major]] &gt;= nblkdev) &lt;br/&gt;
6193&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENXIO; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 主设备号越界，抛出错误，[[错误代码]] : ENXIO
&lt;/div&gt;
6194&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]); &lt;br/&gt;
6195&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(d); &lt;br/&gt;
6196&nbsp;} &lt;br/&gt;
6197&nbsp;/* ------------------------- */ &lt;br/&gt;
6198 &lt;br/&gt;
6199 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:smount]]
*[[code:sumount]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getmdev by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getpid</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class = "wikiheadnote"&gt;
*getpid 系统调用 的 实现函数
*用于返回 现行进程 的PID
*返回一个参数，为 现行进程 的PID
&lt;/div&gt;
&lt;div class = "wikicode"&gt;
3479&nbsp;&lt;br/&gt;
3480&nbsp;getpid() &lt;br/&gt;
3481&nbsp;{ &lt;br/&gt;
3482&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0] = [[code:user|u]].u_procp-&gt;[[code:proc|p_pid]]; &lt;br/&gt;
3483&nbsp;} &lt;br/&gt;
3484&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[权限管理]]

===Param===
:(getpid = 20.; not in assembler)
:&lt;b&gt;sys getpid&lt;/b&gt;
:(pid in r0)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getpid by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getswit</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class = "wikiheadnote"&gt;
*用于返回SW -&gt; integ的值
&lt;/div&gt;
&lt;div class = "wikicode"&gt;
3413&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getswit()&lt;br/&gt;
3414&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&lt;br/&gt;
3415&lt;br/&gt;
3416&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0] = SW-&gt;integ;&lt;br/&gt;
3417&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
3418 /* ------------------------- */&lt;br/&gt;
&lt;/div&gt;

===Param===
:(csw = 38.; not in assembler)
:&lt;b&gt;sys	csw&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getswit by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:getuid</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*返回当前用户的
**有效ID uid ，作为返回值的高字节
**真实ID ruid，作为返回值的低字节
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3451&lt;br/&gt;
3452&nbsp;getuid()&lt;br/&gt;
3453&nbsp;{&lt;br/&gt;
3454&lt;br/&gt;
3455&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0].lobyte = [[code:user|u]].u_ruid;&lt;br/&gt;
3456&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0].hibyte = [[code:user|u]].u_uid;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处使用了无名结构，参看[[编程技巧#无名结构|编程技巧之无名结构]]
&lt;/div&gt;
3457 }&lt;br/&gt;
3458 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[权限管理]]

===Param===
:(getuid = 24.)
:&lt;b&gt;sys getuid&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:getuid by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:grow</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*扩展 用户栈 直到 用户栈堆栈区包含地址sp
*输入1个参数 sp
*返回值
**若 成功扩展，则返回1
**否则，返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
&lt;div class="wikinote"&gt;
*注意:本函数 使用了 [[编程技巧#负数表示堆栈区]]
*在具体位置将不再说明
&lt;/div&gt;
4130 &lt;br/&gt;
4131&nbsp;/* &lt;br/&gt;
4132&nbsp;&nbsp;* grow the stack to include the SP &lt;br/&gt;
4133&nbsp;&nbsp;* true return in successful. &lt;br/&gt;
4134&nbsp;&nbsp;*/ &lt;br/&gt;
4135 &lt;br/&gt;
4136&nbsp;grow(sp) &lt;br/&gt;
4137&nbsp;char *sp; &lt;br/&gt;
4138&nbsp;{ &lt;br/&gt;
4139&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register a, si, i; &lt;br/&gt;
4140 &lt;br/&gt;
4141&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sp &gt;= -[[code:user|u.u_ssize]]*64) &lt;br/&gt;
4142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 堆栈区 已经包含了sp，则直接返回0
&lt;/div&gt;
4143&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;si = [[code:ldiv|ldiv]](-sp, 64) - [[code:user|u.u_ssize]] + SINCR; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*si ← 堆栈区需扩展的块数
&lt;/div&gt;
4144&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(si &lt;= 0) &lt;br/&gt;
4145&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
4146&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:estabur|estabur]]([[code:user|u.u_tsize]], [[code:user|u.u_dsize]], [[code:user|u.u_ssize+si]], [[code:user|u.u_sep]]))  &lt;br/&gt;
4147&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若分配失败，则直接返回0
&lt;/div&gt;
4148&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:expand|expand]]([[code:user|u.u_procp]]-&gt;p_size+si); &lt;br/&gt;
4149&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = [[code:user|u.u_procp]]-&gt;p_addr + [[code:user|u.u_procp]]-&gt;p_size; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*a ← 堆栈区末尾
*参看 [[进程图像]]
&lt;/div&gt;
4150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=[[code:user|u.u_ssize]]; i; i--) { &lt;br/&gt;
4151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a--; &lt;br/&gt;
4152&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:copyseg|copyseg]](a-si, a); &lt;br/&gt;
4153&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*下移 原 堆栈区
&lt;/div&gt;
4154&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=si; i; i--) &lt;br/&gt;
4155&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:clearseg|clearseg]](--a); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清零 新增 堆栈区
&lt;/div&gt;
4156&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ssize]] =+ si; &lt;br/&gt;
4157&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(1); &lt;br/&gt;
4158&nbsp;} &lt;br/&gt;
4159&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[进程图像]]
===Caller===
*[[code:trap]]
*[[code:psig]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:grow by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:gtime</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class = "wikiheadnote"&gt;
*用于返回系统当前时间
&lt;/div&gt;
&lt;div class = "wikicode"&gt;
3419&nbsp;&lt;br/&gt;
3420&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gtime()&lt;br/&gt;
3421&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&lt;br/&gt;
3422&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br/&gt;
3423&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0] = time[0];&lt;br/&gt;
3424&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R1] = time[1];&lt;br/&gt;
3425&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
3426 /* -------------------------*/&lt;br/&gt;
&lt;/div&gt;

===Param===
:(time = 13.)
:&lt;b&gt;sys  time&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:gtime by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:gtty</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*gtty 的系统调用函数
*得到 tty 参数(参看[[code:struct tty|struct tty]])
**t_speeds
**t_erase
**t_kill
**t_flags
*传入2个参数 fildes, arg
**fildes : 指定tty设备的字符设备装载文件的文件描述号，保存在[[skill:u.u_ar0|u.u_ar0]][R0](参看 [[文件系统]])&lt;br/&gt;(在 [[code:sgtty|sgtty]] 中处理)
**arg : 保存tty参数的地址，保存在[[code:user|u.u_arg[0]]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8162&nbsp;/* The routine implementing the gtty system call.&lt;br/&gt;
8163&nbsp;&nbsp;* Just call lower level routine and pass back values.&lt;br/&gt;
8164&nbsp;&nbsp;*/&lt;br/&gt;
8165&nbsp;gtty()&lt;br/&gt;
8166&nbsp;{&lt;br/&gt;
8167&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int v[3];&lt;br/&gt;
8168&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *up, *vp;&lt;br/&gt;
8169&lt;br/&gt;
8170&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vp = v;&lt;br/&gt;
8171&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sgtty|sgtty]](vp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 参数 传入到 缓存区v
&lt;/div&gt;
8172&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:user|u.u_error]])&lt;br/&gt;
8173&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
8174&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;up = [[code:user|u.u_arg]][0];&lt;br/&gt;
8175&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](up, *vp++);&lt;br/&gt;
8176&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](++up, *vp++);&lt;br/&gt;
8177&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](++up, *vp++);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 v 中参数 写入到 [[code:user|u.u_arg[]]]
&lt;/div&gt;
8178&nbsp;}&lt;br/&gt;
8179&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Param===
:(gtty = 32.)
:(file descriptor in r0)
:&lt;b&gt;sys gtty; arg&lt;/b&gt;
:...
:arg: .=.+6
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:gtty by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ialloc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*分配一个空闲的INODE结构,并返回指向该INODE的指针 
**该INODE 由 7078 [[code:iget|iget]] 置锁
*若已无空闲INODE可分配,则再搜索100个空闲的INODE
*传入一个参数 dev,为指定设备的设备号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7055&lt;br/&gt;
7056&nbsp;&nbsp;/*&lt;br/&gt;
7057&nbsp;&nbsp;* Allocate an unused I node&lt;br/&gt;
7058&nbsp;&nbsp;* on the specified device.&lt;br/&gt;
7059&nbsp;&nbsp;* Used with file creation.&lt;br/&gt;
7060&nbsp;&nbsp;* The algorithm keeps up to&lt;br/&gt;
7061&nbsp;&nbsp;* 100 spare I node in the&lt;br/&gt;
7062&nbsp;&nbsp;* super block. When this runs out,&lt;br/&gt;
7063&nbsp;&nbsp;* a linear search through the&lt;br/&gt;
7064&nbsp;&nbsp;* I list is instituted to pick&lt;br/&gt;
7065&nbsp;&nbsp;* up 100 more.&lt;br/&gt;
7066&nbsp;&nbsp;*/&lt;br/&gt;
7067&nbsp;&nbsp;ialloc(dev)&lt;br/&gt;
7068&nbsp;&nbsp;{&lt;br/&gt;
7069&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *fp, *bp, *ip;&lt;br/&gt;
7070&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i, j, k, ino;&lt;br/&gt;
7071&lt;br/&gt;
7072&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|fp]] = [[code:getfs|getfs]](dev);&lt;br/&gt;
7073&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while([[code:struct filsys|fp]]-&gt;s_ilock)&lt;br/&gt;
7074&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&[[code:struct filsys|fp]]-&gt;s_ilock, [[file:param.h|PINDO]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*获取该设备的超级块
*若该设备的INODE 队列被锁,在s_ilock上以优先级[[file:param.h|PINDO]]睡眠,参看[[睡眠原因]]
&lt;/div&gt;
7075&nbsp;&nbsp;loop:&lt;br/&gt;
7076&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct filsys|fp]]-&gt;s_ninode &gt; 0) {&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若INODE 队列不为空
&lt;/div&gt;
7077&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ino = [[code:struct filsys|fp]]-&gt;s_inode[--[[code:struct filsys|fp]]-&gt;s_ninode];&lt;br/&gt;
7078&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:iget|iget]](dev, ino);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*从INODE 队列中取出队尾的INODE号
*从设备上读取指向该INODE的指针
&lt;/div&gt;
7079&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct inode|ip]]==NULL)&lt;br/&gt;
7080&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果该INODE指针为空,则返回空值
&lt;/div&gt;
7081&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]]-&gt;i_mode == 0) {&lt;br/&gt;
7082&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(bp = &[[code:struct inode|ip]]-&gt;i_mode; bp &lt; &[[code:struct inode|ip]]-&gt;i_addr[8];)&lt;br/&gt;
7083&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*bp++ = 0;&lt;br/&gt;
7084&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|fp]]-&gt;s_fmod = 1;&lt;br/&gt;
7085&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return([[code:struct inode|ip]]);&lt;br/&gt;
7086&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若i_mode == 0 ,清空该INODE内容(除与时间相关的参数)
**置超级块 s_fmod标志
**返回该INODE指针
&lt;/div&gt;
7087&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
7088&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Inode was allocated after all.&lt;br/&gt;
7089&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Look some more.&lt;br/&gt;
7090&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
7091&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]);&lt;br/&gt;
7092&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若i_mode != 0
**调用iput函数尝试释放该inode
**回到7075行 ,重新搜索空闲INODE
&lt;/div&gt;
7093&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
7094&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|fp]]-&gt;s_ilock++;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若INODE 队列为空,置INODE 队列锁标志
&lt;/div&gt;
7095&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ino = 0;&lt;br/&gt;
7096&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i&lt;[[code:struct filsys|fp]]-&gt;s_isize; i++) {&lt;br/&gt;
7097&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp]] = [[code:bread|bread]](dev, i+2);&lt;br/&gt;
7098&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:struct buf|bp]]-&gt;b_addr;&lt;br/&gt;
7099&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j=0; j&lt;256; j=+16) {&lt;br/&gt;
&lt;div class="wikinote"&gt;
*从设备INODE区首部开始读入INODE块到缓存块bp
*将ip指向块首
*j用为当前块中偏移
*由于j为16的倍数,所以ip[j]指向块中某一具体INODE
&lt;/div&gt;
7100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ino++;&lt;br/&gt;
7101&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]][j] != 0)&lt;br/&gt;
7102&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断当前INODE是否为空,若不为空,则直接寻找块中下一个INODE
&lt;/div&gt;
7103&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(k=0; k&lt;NINODE; k++)&lt;br/&gt;
7104&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev == inode[k].i_dev &&&lt;br/&gt;
7105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ino == inode[k].i_number&lt;br/&gt;
7106&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto cont;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历内存INODE数组,将内存INODE逐一与当前INODE比较
*若当前INODE在内存中有一份副本,表明该INODE不是真的为空,直接寻找块中下一个INODE
&lt;/div&gt;
7107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|fp]]-&gt;s_inode[ [[code:struct filsys|fp]] -&gt;s_ninode++] = ino;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若当前所找到的INODE在内存中没有副本,则表明其真的为空,插入INODE队列尾部
&lt;/div&gt;
7108&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct filsys|fp]]-&gt;s_ninode &gt;= 100)&lt;br/&gt;
7109&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&lt;br/&gt;
7110&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cont:;&lt;br/&gt;
7111&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
7112&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]]([[code:struct buf|bp]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若当前磁盘块被遍历完时或者INODE队列中的元素已经突破100时
*释放bp
&lt;/div&gt;
7113&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct filsys|fp]]-&gt;s_ninode &gt;= 100)&lt;br/&gt;
7114&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若INODE队列元素尚未突破100,则回到循环(7096)头,继续读取下一个INODE区磁盘块
*否则退出循环(7096)
&lt;/div&gt;
7115&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
7116&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|fp]]-&gt;s_ilock = 0;&lt;br/&gt;
7117&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&[[code:struct filsys|fp]]-&gt;s_ilock);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*去除INODE队列锁标志
*唤醒一切在s_ilock上睡眠的进程,见[[睡眠原因]]
&lt;/div&gt;
7118&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct filsys|fp]]-&gt;s_ninode &gt; 0)&lt;br/&gt;
7119&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若INODE队列不为空,则返回到loop(7075),从当前不为空的INODE队列中分配空闲INODE
&lt;/div&gt;
7120&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prdev|prdev]]("Out of inodes", dev);&lt;br/&gt;
7121&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_error = ENOSPC;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若未能搜索到INODE,即所有空闲INODE已用完,抛出错误,见[[错误代码]]
&lt;/div&gt;
7122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL);&lt;br/&gt;
7123&nbsp;&nbsp;}&lt;br/&gt;
7124 /* -------------------------*/&lt;br/&gt;
7125 /* -------------------------*/&lt;br/&gt;
&lt;/div&gt;
===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_ialloc_1.png"/></p> 

===Ref===
*[[文件系统]]

===Caller===
*[[code:maknode]]
*[[code:pipe]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ialloc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:idle</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*令 UNIX 挂起，等待中断到来
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1282&nbsp;/* ------------------------- */ &lt;br/&gt;
1283&nbsp;.globl     _idle&lt;br/&gt;
1284&nbsp;_idle:&lt;br/&gt;
1285&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[PS]],-(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*保护 [[PS]] 入栈
&lt;/div&gt;
1286&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $340,[[PS]]&lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级 置 0
*[[开中断]]
&lt;/div&gt;
1287&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:WAIT|wait]]&lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机 挂起，让出总线
*当有中断时退出wait
&lt;/div&gt;
1288&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,[[PS]]&lt;br/&gt;
&lt;div class="wikinote"&gt;
*从堆栈 恢复 [[PS]]
&lt;/div&gt;
1289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1290&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:swtch]]
*[[code:panic]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:idle by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ifree</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*释放 指定的INODE块
*共传入两个参数 dev ino
**dev : 指定设备的设备号
**ino : 指定INODE块在INODE区的序号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7126 &lt;br/&gt;
7127&nbsp;/* &lt;br/&gt;
7128&nbsp;&nbsp;* Free the specified I node &lt;br/&gt;
7129&nbsp;&nbsp;* on the specified device. &lt;br/&gt;
7130&nbsp;&nbsp;* The algorithm stores up &lt;br/&gt;
7131&nbsp;&nbsp;* to 100 I nodes in the super &lt;br/&gt;
7132&nbsp;&nbsp;* block and throws away any more. &lt;br/&gt;
7133&nbsp;&nbsp;*/ &lt;br/&gt;
7134&nbsp;ifree(dev, ino) &lt;br/&gt;
7135&nbsp;{ &lt;br/&gt;
7136&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct filsys|fp]]; &lt;br/&gt;
7137 &lt;br/&gt;
7138&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|fp]] = [[code:getfs|getfs]](dev); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*得到设备的filsys结构
&lt;/div&gt;
7139&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct filsys|fp]]-&gt;s_ilock) &lt;br/&gt;
7140&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
7141&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct filsys|fp]]-&gt;s_ninode &gt;= 100) &lt;br/&gt;
7142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*发生以下两种情况，函数直接返回
** inode空闲数组 置锁
** inode空闲数组 已满
*参看[[文件系统#空闲INODE管理|文件系统之空闲INODE管理]]
&lt;/div&gt;
7143&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|fp]]-&gt;s_inode[ [[code:struct filsys|fp]]-&gt;s_ninode++] = ino; &lt;br/&gt;
7144&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|fp]]-&gt;s_fmod = 1; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指定INODE块 放入 inode空闲数组
*置 filsys 修改标志
&lt;/div&gt;
7145&nbsp;} &lt;br/&gt;
7146&nbsp;/* ------------------------- */ &lt;br/&gt;
7147&nbsp;/* ------------------------- */ &lt;br/&gt;
7148 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:iput]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ifree by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:iget</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*得到 指定设备 指定inode号 的inode块(并置锁)
*若该inode装载某子文件系统，则返回该子文件系统的超级块
*共传入2个参数 dev ino
**dev : 指定设备的设备号
**ino : 指定inode的编号
*返回值
**若出错，则返回NULL
**否则，返回 指向 得到的内存INDOE 的指针
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7258 &lt;br/&gt;
7259&nbsp;/* &lt;br/&gt;
7260&nbsp;&nbsp;* Look up an inode by device,inumber. &lt;br/&gt;
7261&nbsp;&nbsp;* If it is in core (in the inode structure), &lt;br/&gt;
7262&nbsp;&nbsp;* honor the locking protocol. &lt;br/&gt;
7263&nbsp;&nbsp;* If it is not in core, read it in from the  &lt;br/&gt;
7264&nbsp;&nbsp;* specified device. &lt;br/&gt;
7265&nbsp;&nbsp;* If the inode is mounted on, perform &lt;br/&gt;
7266&nbsp;&nbsp;* the indicated indirection. &lt;br/&gt;
7267&nbsp;&nbsp;* In all cases, a pointer to a locked &lt;br/&gt;
7268&nbsp;&nbsp;* inode structure is returned. &lt;br/&gt;
7269&nbsp;&nbsp;* &lt;br/&gt;
7270&nbsp;&nbsp;* printf warning: no inodes -- if the inode &lt;br/&gt;
7271&nbsp;&nbsp;* structure is full &lt;br/&gt;
7272&nbsp;&nbsp;* panic: no imt -- if the mounted file &lt;br/&gt;
7273&nbsp;&nbsp;* system is not in the mount table. &lt;br/&gt;
7274&nbsp;&nbsp;* "cannot happen" &lt;br/&gt;
7275&nbsp;&nbsp;*/ &lt;br/&gt;
7276&nbsp;iget(dev, ino) &lt;br/&gt;
7277&nbsp;{ &lt;br/&gt;
7278&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|struct inode]] *p; &lt;br/&gt;
7279&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *ip2; &lt;br/&gt;
7280&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int *ip1; &lt;br/&gt;
7281&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct mount|struct mount]] *ip; &lt;br/&gt;
7282 &lt;br/&gt;
7283&nbsp;loop: &lt;br/&gt;
7284&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = NULL; &lt;br/&gt;
7285&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(p = &[[code:struct inode|inode]][0]; p&lt; &[[code:struct inode|inode]][NINODE]; p++) { &lt;br/&gt;
7286&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev==p-&gt;i_dev && ino==p-&gt;i_number) { &lt;br/&gt;
7287&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((p-&gt;i_flag&ILOCK) != 0) { &lt;br/&gt;
7288&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;i_flag &lt;nowiki&gt;=| &lt;/nowiki&gt;IWANT; &lt;br/&gt;
7289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](p, PINOD); &lt;br/&gt;
7290&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
7291&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7292&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((p-&gt;i_flag&IMOUNT) != 0) { &lt;br/&gt;
7293&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (ip = &[[code:struct mount|mount]][0]; &lt;br/&gt;
7294&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip &lt; &[[code:struct mount|mount]][NMOUNT]; ip++) &lt;br/&gt;
7295&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ip-&gt;m_inodp == p) { &lt;br/&gt;
7296&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dev = ip-&gt;m_dev; &lt;br/&gt;
7297&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ino = ROOTINO; &lt;br/&gt;
7298&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
7299&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 指定寻找的INODE 装载了 子文件系统
*则 重新调用 iget，返回该子文件系统的 超级块
&lt;/div&gt;
7300&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("no imt"); &lt;br/&gt;
7301&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7302&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;i_count++; &lt;br/&gt;
7303&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;i_flag &lt;nowiki&gt;=| &lt;/nowiki&gt;ILOCK; &lt;br/&gt;
7304&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(p); &lt;br/&gt;
7305&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7306&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip==NULL && p-&gt;i_count==0) &lt;br/&gt;
7307&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = p; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*7306 - 7307 在循环中 用于寻找INODE数组中第一个 可用元素(空闲INODE),用于写入新的INODE信息
&lt;/div&gt;
7308&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7309&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((p=ip) == NULL) { &lt;br/&gt;
7310&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("Inode table overflow<br/>\n"); &lt;br/&gt;
7311&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENFILE; &lt;br/&gt;
7312&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
7313&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若找不到INODE数组中 可用元素(空闲INODE)
*则输出错误信息，抛出错误，并返回NULL
**[[错误代码]] : ENFILE
&lt;/div&gt;
7314&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;i_dev = dev; &lt;br/&gt;
7315&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;i_number = ino; &lt;br/&gt;
7316&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;i_flag = ILOCK; &lt;br/&gt;
7317&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;i_count++; &lt;br/&gt;
7318&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;i_lastr = -1; &lt;br/&gt;
7319&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:bread|bread]](dev, ldiv(ino+31,16)); &lt;br/&gt;
7320&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
7321&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Check I/O errors &lt;br/&gt;
7322&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7323&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ip-&gt;b_flags&B_ERROR) { &lt;br/&gt;
7324&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](ip); &lt;br/&gt;
7325&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](p); &lt;br/&gt;
7326&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
7327&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7328&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip1 = ip-&gt;b_addr + 32*[[code:lrem|lrem]](ino+31, 16); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*由于inode区是从磁盘的第2块开始的,参看[[文件系统]]
*rp-&gt;i_number表示磁盘上对应[[code:struct inode|INODE]]在磁盘inode区的号码,且从1开始计数
*故(i_number + 31)%16表示该磁盘inode在所在磁盘块中是第几块,再乘以32(ionde结构所含字节数)即表明该inode在块中的相对偏移地址
*ip1为ip中该[[code:struct inode|INODE]]的起始地址
&lt;/div&gt;
7329&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip2 = &p-&gt;i_mode; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip2为内存块的起始地址
&lt;/div&gt;
7330&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ip2 &lt; &p-&gt;i_addr[8]) &lt;br/&gt;
7331&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip2++ = *ip1++; &lt;br/&gt;
7332&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将缓存中的信息复制到内存inode中
*释放缓存
&lt;/div&gt;
7333&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(p); &lt;br/&gt;
7334&nbsp;} &lt;br/&gt;
7335&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_iget.png"/></p>
===Ref===
*[[文件系统]]
*[[设备缓存管理]]

===Caller===
*[[code:main]]
*[[code:unlink]]
*[[code:ialloc]]
*[[code:namei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:iget by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:iinit</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*该函数在系统启动时调用
*初始化 [[文件系统]]
*初始化 系统时间
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6911&nbsp;&lt;br/&gt;
6912&nbsp;/* &lt;br/&gt;
6913&nbsp;&nbsp;* iinit is called once (from main) &lt;br/&gt;
6914&nbsp;&nbsp;* very early in initialization. &lt;br/&gt;
6915&nbsp;&nbsp;* It reads the root’s super block &lt;br/&gt;
6916&nbsp;&nbsp;* and initializes the current date &lt;br/&gt;
6917&nbsp;&nbsp;* from the last modified date. &lt;br/&gt;
6918&nbsp;&nbsp;* &lt;br/&gt;
6919&nbsp;&nbsp;* panic: iinit -- cannot read the super &lt;br/&gt;
6920&nbsp;&nbsp;* block. Usually because of an IO error. &lt;br/&gt;
6921&nbsp;&nbsp;*/ &lt;br/&gt;
6922&nbsp;iinit() &lt;br/&gt;
6923&nbsp;{ &lt;br/&gt;
6924&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *cp, *bp; &lt;br/&gt;
6925 &lt;br/&gt;
6926&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][ [[code:rootdev|rootdev]][[skill:.d_major|.d_major]] ].d_open)([[code:rootdev|rootdev]], 1); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用 根设备的d_open函数
*对于 [[RK磁盘]]，d_open函数为空函数，参看[[code:bdevsw|设备函数描述]]
&lt;/div&gt;
6927&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]]([[code:rootdev|rootdev]], 1); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*读取 根设备的第一块 bp
*根设备的第一块 为 超级块
*关于 超级块，参考 [[文件系统]]
&lt;/div&gt;
6928&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = [[code:getblk|getblk]](NODEV); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*申请512字节长的缓存 cp
*这里以NODEV为参数，使用了[[code:getblk|getblk]]的第二功能
&lt;/div&gt;
6929&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]]) &lt;br/&gt;
6930&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("iinit"); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若检测出错误(由前几行的函数抛出错误)，调用[[code:panic|panic]]处理错误
&lt;/div&gt;
6931&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bcopy|bcopy]](bp-&gt;b_addr, cp-&gt;b_addr, 256); &lt;br/&gt;
6932&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将bp对应的缓存内容 复制到 cp的缓存内容
*释放bp
*此时，cp([[file:bio.c|buffers]]的一个元素)成为了 设备超级块 的缓存
&lt;/div&gt;
6933&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct mount|mount]][0].m_bufp = cp; &lt;br/&gt;
6934&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct mount|mount]][0].m_dev = [[code:rootdev|rootdev]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:struct mount|mount]][0] 置初值
**m_bufp 指向 cp
**m_dev 置为根设备
&lt;/div&gt;
6935&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|cp]] = [[code:struct buf|cp]]-&gt;b_addr; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*之前 cp 为 [[code:struct buf|struct buf]] 类型
*之后 cp 为 [[code:struct filsys|filsys]] 类型
&lt;/div&gt;
6936&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|cp]]-&gt;s_flock = 0; &lt;br/&gt;
6937&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|cp]]-&gt;s_ilock = 0; &lt;br/&gt;
6938&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|cp]]-&gt;s_ronly = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 超级块 的参数,参看[[code:struct filsys|filsys]]
**两个操作锁 清零
**只读标志 清零
&lt;/div&gt;
6939&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;time[0] = [[code:struct filsys|cp]]-&gt;s_time[0]; &lt;br/&gt;
6940&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;time[1] = [[code:struct filsys|cp]]-&gt;s_time[1]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*用 根设备的最近修改时间 置 系统时间
*由此看到系统时间不精确，如果根设备停止运转一段时间，需要手动设置系统时间
&lt;/div&gt;
6941&nbsp;} &lt;br/&gt;
6942&nbsp;/* ------------------------- */ &lt;br/&gt;
6943&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:main]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:iinit by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:incore</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*查找 指定设备 的[[设备队列]]中有没有与 指定块号匹配的缓存块
*共传入两个参数 adev 和 blkno
**adev : 指定设备的设备号
**blkno : 指定块号
*返回值
**若找到匹配的缓存块，则返回该缓存块管理结构[[code:struct buf|struct buf]]的指针
**若未找到匹配，返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4895&nbsp;&lt;br/&gt;
4896&nbsp;/* See if the block is associated with some buffer &lt;br/&gt;
4897&nbsp;&nbsp;* (mainly to avoid getting hung up on a wait in breada) &lt;br/&gt;
4898&nbsp;&nbsp;*/ &lt;br/&gt;
4899&nbsp;incore(adev, blkno) &lt;br/&gt;
4900&nbsp;{ &lt;br/&gt;
4901&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int dev; &lt;br/&gt;
4902&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *bp; &lt;br/&gt;
4903&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct devtab|struct devtab]] *dp; &lt;br/&gt;
4904 &lt;br/&gt;
4905&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dev = adev; &lt;br/&gt;
4906&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = [[code:bdevsw|bdevsw]][adev[[skill:.d_major|.d_major]] ].d_tab; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*dp指向 adev 的设备缓存管理结构[[code:struct devtab|struct devtab]]
*4906 疑为笔误，应为dp = bdevsw[dev.d_major].d_tab;
&lt;/div&gt;
4907&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (bp=dp-&gt;b_forw; bp != dp; bp = bp-&gt;b_forw) &lt;br/&gt;
4908&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp-&gt;b_blkno==blkno && bp-&gt;b_dev==dev) &lt;br/&gt;
4909&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历设备队列，如有块号和设备号匹配的缓存块，则返回该块
&lt;/div&gt;
4910&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历设备队列，如没有匹配，则返回0
&lt;/div&gt;
4911&nbsp;} &lt;br/&gt;
4912&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:breada]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:incore by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:incupc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*由[[code:clock|clock]]调用，用于统计[[程序统计直方图]]
*传入2个参数 ，设为 upc,pprof
**upc : 当前用户态的pc
**pprof : 指向 参数数组，常用为[[code:user|u.u_prof[]]]&lt;br/&gt;参数配置 参看[[code:profil|profil]]&lt;br/&gt;参看[[程序统计直方图]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0893&nbsp;/* ------------------------- */ &lt;br/&gt;
0894&nbsp;.globl     _incupc &lt;br/&gt;
0895&nbsp;_incupc: &lt;br/&gt;
0896&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,-(sp) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*R2保护入栈
*于0920 从栈恢复
&lt;/div&gt;
0897&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     6(sp),r2  / base of prof with base,leng,off,scale &lt;br/&gt;
0898&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     4(sp),r0 / pc &lt;br/&gt;
&lt;div class="wikinote"&gt;
*R2 ← pprof
*R0 ← upc
&lt;/div&gt;
0899&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SUB|sub]]     4(r2),r0 / offset &lt;br/&gt;
&lt;div class="wikinote"&gt;
*R0 ← upc - pprof-&gt;offset
*将R0置为 upc相对于基准pc的偏移量
&lt;/div&gt;
0900&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLC|clc]] &lt;br/&gt;
0901&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ROR|ror]]     r0 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*R0 ← R0 / 2 (将字节单位化为字单位)
&lt;/div&gt;
0902&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MUL|mul]]     6(r2),r0 / scale &lt;br/&gt;
0903&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASHC|ashc]]    $-14.,r0 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*R0,R1 ← R0 * pprof-&gt;scale / 2^14
*将 偏移量 根据 缩放系数 进行缩放，存放到R0(高字)R1(低字)
*后面将只取 低字R1 作为偏移量，并且R1以字节作单位
*详细参看[[程序统计直方图]]
&lt;/div&gt;
0904&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:INC|inc]]     r1 &lt;br/&gt;
0905&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $1,r1 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*R1 向上修正为偶地址
&lt;/div&gt;
0906&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r1,2(r2) / length &lt;br/&gt;
0907&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BHIS|bhis]]    1f &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 R1 超出统计数组总长，则转到0920,直接返回
&lt;/div&gt;
0908&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADD|add]]     (r2),r1 / base &lt;br/&gt;
&lt;div class="wikinote"&gt;
*R1 ← R1 + pprof-&gt;base
&lt;/div&gt;
0909&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     [[code:nofault|nofault]],-(sp) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*保护 原出错处理函数 入栈
&lt;/div&gt;
0910&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $2f,[[code:nofault|nofault]] &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 0915 为出错处理函数(错误可能在[[pdp11:MFPI|mfpi]]/[[pdp11:MTPI|mtpi]]抛出)
&lt;/div&gt;
0911&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MFPI|mfpi]]    (r1) &lt;br/&gt;
0912&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:INC|inc]]     (sp) &lt;br/&gt;
0913&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MTPI|mtpi]]    (r1) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从[[用户态]]地址空间 取出 计算出的统计数组元素&lt;br/&gt;加一&lt;br/&gt;并写回
&lt;/div&gt;
0914&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] 3f &lt;br/&gt;
0915&nbsp;2: &lt;br/&gt;
0916&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     6(r2) &lt;br/&gt;
0917&nbsp;3: &lt;br/&gt;
0918&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]    (sp)+,[[code:nofault|nofault]] &lt;br/&gt;
0919&nbsp;1: &lt;br/&gt;
0920&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2 &lt;br/&gt;
0921&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc &lt;br/&gt;
0922 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[程序统计直方图]]

===Caller===
*[[code:clock]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:incupc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:iodone</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*标志 缓存块与设备的读写操作完成
**若缓存块为异步I/O，释放该块
**若缓存块为同步I/O，则唤醒所有等待该块的进程
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5014 &lt;br/&gt;
5015&nbsp;/* Mark I/O complete on a buffer, release it if i/o is &lt;br/&gt;
5016&nbsp;&nbsp;* asynchronous, and wake up anyone waiting for it. &lt;br/&gt;
5017&nbsp;&nbsp;*/ &lt;br/&gt;
5018&nbsp;iodone(bp) &lt;br/&gt;
5019&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
5020&nbsp;{ &lt;br/&gt;
5021&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp; &lt;br/&gt;
5022 &lt;br/&gt;
5023&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp; &lt;br/&gt;
5024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rbp-&gt;b_flags*B_MAP) &lt;br/&gt;
5025&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mapfree|mapfree]](rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处为PDP11/70对应的函数，不作讨论
&lt;/div&gt;
5026&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_flags &lt;nowiki&gt;=| &lt;/nowiki&gt;B_DONE; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置缓存块 B_DONE标志
&lt;/div&gt;
5027&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rbp-&gt;b_flags&B_ASYNC) &lt;br/&gt;
5028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若缓存块为异步I/O，则释放该块
&lt;/div&gt;
5029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else { &lt;br/&gt;
5030&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_flags =& ~B_WANTED; &lt;br/&gt;
5031&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若缓存块为同步I/O
**清B_WANTED标志
**唤醒 所有等待该缓存块的进程
&lt;/div&gt;
5032&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5033&nbsp;} &lt;br/&gt;
5034&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:rkstrategy]]
*[[code:rkintr]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:iodone by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:iomove</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*完成 读取/写入 功能
**读取功能：从 bp-&gt;b_addr[o](缓存块偏移o字节) 读出 an个字节字节 到 指定地址空间 的 指定地址
**写入功能：将 指定地址空间 的 指定地址的an个字节，写入 bp-&gt;b_addr[o](缓存块偏移o字节)
*输入参数
**bp : 指定 的 [[code:struct buf|struct buf]]
**o : 缓存块偏移量
**an : 传输字节数
**flag : 写标志
***若为 B_WRITE，则函数执行写入功能
***否则，函数执行读取功能
**[[code:user|u.segflg]] : 指定地址空间由[[code:user|u.segflg]]选择
**[[code:user|u.base]] : 指定地址由[[code:user|u.base]]给定
*运行时修正以下参数
**[[code:user|u.u_base]]
**[[code:user|u.u_offset]]
**[[code:user|u.u_count]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6350&nbsp;/* Move ’an’ bytes at byte location &lt;br/&gt;
6351&nbsp;&nbsp;* &bp-&gt;b_addr[o] to/from (flag) the &lt;br/&gt;
6352&nbsp;&nbsp;* user/kernel (u.segflg) area starting at u.base. &lt;br/&gt;
6353&nbsp;&nbsp;* Update all the arguments by the number &lt;br/&gt;
6354&nbsp;&nbsp;* of bytes moved. &lt;br/&gt;
6355&nbsp;&nbsp;* &lt;br/&gt;
6356&nbsp;&nbsp;* There are 2 algorithms, &lt;br/&gt;
6357&nbsp;&nbsp;* if source address, dest address and count &lt;br/&gt;
6358&nbsp;&nbsp;* are all even in a user copy, &lt;br/&gt;
6359&nbsp;&nbsp;* then the machine language copyin/copyout &lt;br/&gt;
6360&nbsp;&nbsp;* is called. &lt;br/&gt;
6361&nbsp;&nbsp;* If not, its done byte-by-byte with &lt;br/&gt;
6362&nbsp;&nbsp;* cpass and passc. &lt;br/&gt;
6363&nbsp;&nbsp;*/ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*总体算法是
**若 指定地址空间 为 [[用户态]]地址空间，且 n , bp-&gt;b_addr+o , u.u_base都为偶数，使用[[code:copyin|copyin]]/[[code:copyout|copyout]]
**否则，使用[[code:cpass|cpass]]/[[code:passc|passc]]
&lt;/div&gt;
6364&nbsp;iomove(bp, o, an, flag) &lt;br/&gt;
6365&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
6366&nbsp;{ &lt;br/&gt;
6367&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register char *cp; &lt;br/&gt;
6368&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int n, t; &lt;br/&gt;
6369 &lt;br/&gt;
6370&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = an; &lt;br/&gt;
6371&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = bp-&gt;b_addr + o; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*cp 为 读取/写入 源地址
&lt;/div&gt;
6372&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_segflg]]==0 && ((&lt;nowiki&gt;n | cp | &lt;/nowiki&gt;[[code:user|u.u_base]])&01)==0) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 指定地址空间 为 [[用户态]]地址空间，且 n , cp , u.u_base都为偶数，使用[[code:copyin|copyin]]/[[code:copyout|copyout]]
&lt;/div&gt;
6373&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (flag==B_WRITE) &lt;br/&gt;
6374&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = [[code:copyin|copyin]]([[code:user|u.u_base]], cp, n); &lt;br/&gt;
6375&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else &lt;br/&gt;
6376&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = [[code:copyout|copyout]](cp, [[code:user|u.u_base]], n); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若为写操作，则使用[[code:copyin|copyin]]  从目标地址读出数据到缓存块
*否则，使用[[code:copyout|copyout]] 从缓存块读出数据，写入到目标地址
&lt;/div&gt;
6377&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cp) { &lt;br/&gt;
6378&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EFAULT; &lt;br/&gt;
6379&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6380&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若出错
**抛出错误，[[错误代码]]:EFAULT
**函数返回
&lt;/div&gt;
6381&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] =+ n; &lt;br/&gt;
6382&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]]([[code:user|u.u_offset]], n); &lt;br/&gt;
6383&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] =- n; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*修正参数
**[[code:user|u.u_base]]
**[[code:user|u.u_offset]]
**[[code:user|u.u_count]]
*参考 [[code:user|user]]
&lt;/div&gt;
6384&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6385&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6386&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (flag==B_WRITE) { &lt;br/&gt;
6387&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(n--) { &lt;br/&gt;
6388&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((t = [[code:cpass|cpass]]()) &lt; 0) &lt;br/&gt;
6389&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6390&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*cp++ = t; &lt;br/&gt;
6391&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6392&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
6393&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (n--) &lt;br/&gt;
6394&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:passc|passc]](*cp++) &lt; 0) &lt;br/&gt;
6395&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6396&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若为写操作，则使用[[code:cpass|cpass]]  从目标地址读出数据到缓存块
*否则，使用[[code:passc|passc]] 从缓存块读出数据，写入到目标地址
*相关参数 在 [[code:cpass|cpass]]/[[code:passc|passc]] 被修正
&lt;/div&gt;
6397&nbsp;/* ------------------------- */ &lt;br/&gt;
6398 &lt;br/&gt;
6399 &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:readi]]
*[[code:writei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:iomove by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:iowait</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*等待 某缓存块的I/O操作完成
*如有错误，将I/O错误返回给[[code:user|user结构]]
*共传入一个参数 bp
*bp : 该缓存块的控制结构[[code:struct buf|struct buf]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4978&nbsp;&lt;br/&gt;
4979&nbsp;/* Wait for I/O completion on the buffer; return errors &lt;br/&gt;
4980&nbsp;&nbsp;* to the user. &lt;br/&gt;
4981&nbsp;&nbsp;*/ &lt;br/&gt;
4982&nbsp;iowait(bp) &lt;br/&gt;
4983&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
4984&nbsp;{ &lt;br/&gt;
4985&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp; &lt;br/&gt;
4986 &lt;br/&gt;
4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp; &lt;br/&gt;
4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级设为6,防止其他进程对该缓存块进行操作
&lt;/div&gt;
4989&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ((rbp-&gt;b_flags&B_DONE)==0) &lt;br/&gt;
4990&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](rbp, PRIBIO); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若该缓存块未就绪，则进程睡眠
**[[睡眠原因#struct buf]]
**[[进程优先级]]置为PRIBIO
&lt;/div&gt;
4991&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
4992&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:geterror|geterror]](rbp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*检查该缓存块I/O错误
*如有I/O错误，传递给[[code:user|user]]
&lt;/div&gt;
4993&nbsp;} &lt;br/&gt;
4994&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:bread]]
*[[code:breada]]
*[[code:bwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:iowait by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ipc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*全局变量，用于跟踪系统进程间传递参数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3924&lt;br/&gt;
3925&nbsp;/*&lt;br/&gt;
3926&nbsp;&nbsp;* Tracing variables.&lt;br/&gt;
3927&nbsp;&nbsp;* Used to pass trace command from&lt;br/&gt;
3928&nbsp;&nbsp;* parent to child being traced.&lt;br/&gt;
3929&nbsp;&nbsp;* This data base cannot be&lt;br/&gt;
3930&nbsp;&nbsp;* shared and is locked&lt;br/&gt;
3931&nbsp;&nbsp;* per user.&lt;br/&gt;
3932&nbsp;&nbsp;*/&lt;br/&gt;
3933&nbsp;struct&lt;br/&gt;
3934&nbsp;{&lt;br/&gt;
3935&nbsp;&nbsp;&nbsp;&nbsp;int     ip_lock;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*ipc 的锁变量
*进程 锁 ipc，置此值为进程号n
&lt;/div&gt;
3936&nbsp;&nbsp;&nbsp;&nbsp;int     ip_req;&lt;br/&gt;
3937&nbsp;&nbsp;&nbsp;&nbsp;int     ip_addr;&lt;br/&gt;
3938&nbsp;&nbsp;&nbsp;&nbsp;int     ip_data;&lt;br/&gt;
3939&nbsp;} ipc;&lt;br/&gt;
3940&nbsp;/* -------------------------  */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[跟踪]]

===Caller===
*[[code:ptrace]]
*[[code:procxmt]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ipc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:iput</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*指定inode结构的 引用数-1，此时
**若引用数为0(内存中没有使用该inode块的进程)，则
***若没有勾连(该inode代表的文件在文件系统中已无效)，则释放inode结构和其文件块
***否则，只释放内存inode结构(磁盘inode结构和其文件块在文件系统中仍有效，不可释放)
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7336&nbsp;&lt;br/&gt;
7337&nbsp;/* &lt;br/&gt;
7338&nbsp;&nbsp;* Decrement reference count of &lt;br/&gt;
7339&nbsp;&nbsp;* an inode structure. &lt;br/&gt;
7340&nbsp;&nbsp;* On the last reference, &lt;br/&gt;
7341&nbsp;&nbsp;* write the inode out and if necessary, &lt;br/&gt;
7342&nbsp;&nbsp;* truncate and deallocate the file. &lt;br/&gt;
7343&nbsp;&nbsp;*/ &lt;br/&gt;
7344&nbsp;iput(p) &lt;br/&gt;
7345&nbsp;[[code:struct inode|struct inode]] *p; &lt;br/&gt;
7346&nbsp;{ &lt;br/&gt;
7347&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp; &lt;br/&gt;
7348 &lt;br/&gt;
7349&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = p; &lt;br/&gt;
7350&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;i_count == 1) { &lt;br/&gt;
7351&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_flag &lt;nowiki&gt;=| &lt;/nowiki&gt;ILOCK; &lt;br/&gt;
7352&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;i_nlink &lt;= 0) { &lt;br/&gt;
7353&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:itrunc|itrunc]](rp); &lt;br/&gt;
7354&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_mode = 0; &lt;br/&gt;
7355&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ifree|ifree]](rp-&gt;i_dev, rp-&gt;i_number); &lt;br/&gt;
7356&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若勾连数&lt;=0，则inode代表的文件已从文件系统中被删除(不可通过查找找到其存在)，则
**[[code:itrunc|itrunc]]释放inode对应的文件块
**清零 i_mode
**[[code:ifree|ifree]]释放磁盘上的inode块(但未写回磁盘，写回操作在7357)
&lt;/div&gt;
7357&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iupdat|iupdat]](rp, time); &lt;br/&gt;
7358&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](rp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*7358 与 7363 在此分支执行时重复
*7358 是为了在释放内存inode块之前 解锁并唤醒等待进程
*7363在此分支执行时 多余
&lt;/div&gt;
7359&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_flag = 0; &lt;br/&gt;
7360&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_number = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*相当于释放内存inode块
&lt;/div&gt;
7361&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7362&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_count--; &lt;br/&gt;
7363&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](rp); &lt;br/&gt;
7364 } &lt;br/&gt;
7365 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_iput.png"/></p>
===Ref===
*[[文件系统]]
*[[设备缓存管理]]
===Caller===
*[[code:exec]]
*[[code:exit]]
*[[code:unlink]]
*[[code:chdir]]
*[[code:chmod]]
*[[code:chown]]
*[[code:smdate]]
*[[code:core]]
*[[code:xfree]]
*[[code:open1]]
*[[code:link]]
*[[code:mknod]]
*[[code:stat]]
*[[code:smount]]
*[[code:sumount]]
*[[code:getmdev]]
*[[code:closei]]
*[[code:owner]]
*[[code:ialloc]]
*[[code:iget]]
*[[code:wdir]]
*[[code:namei]]
*[[code:pipe]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:iput by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:issig</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*检查 并 处理当前进程信号
*返回值
**没有信号，返回0
**有信号，返回信号值
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3979 &lt;br/&gt;
3980&nbsp;/* &lt;br/&gt;
3981&nbsp;&nbsp;* Returns true if the current &lt;br/&gt;
3982&nbsp;&nbsp;* process has a signal to process. &lt;br/&gt;
3983&nbsp;&nbsp;* This is asked at least once &lt;br/&gt;
3984&nbsp;&nbsp;* each time a process enters the &lt;br/&gt;
3985&nbsp;&nbsp;* system. &lt;br/&gt;
3986&nbsp;&nbsp;* A signal does not do anything &lt;br/&gt;
3987&nbsp;&nbsp;* directly to a process; it sets &lt;br/&gt;
3988&nbsp;&nbsp;* a flag that asks the process to &lt;br/&gt;
3989&nbsp;&nbsp;* do something to itself. &lt;br/&gt;
3990&nbsp;&nbsp;*/ &lt;br/&gt;
3991&nbsp;issig() &lt;br/&gt;
3992&nbsp;{ &lt;br/&gt;
3993&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register n; &lt;br/&gt;
3994&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *p; &lt;br/&gt;
3995 &lt;br/&gt;
3996&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = [[code:user|u.u_procp]]; &lt;br/&gt;
3997&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n = p-&gt;p_sig) { &lt;br/&gt;
3998&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (p-&gt;p_flag&STRC) { &lt;br/&gt;
3999&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:stop|stop]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
* 现行进程 带 跟踪标志(STRC)，执行[[code:stop|stop]]
* 参看[[跟踪]]
&lt;/div&gt;
4000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((n = p-&gt;p_sig) == 0) &lt;br/&gt;
4001&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*信号 为 0，不做处理
&lt;/div&gt;
4002&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4003&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:user|u.u_signal]][n]&1) == 0) &lt;br/&gt;
4004&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(n); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*信号处理方式 
**为 奇数，不做处理
**为 偶数，返回信号值
&lt;/div&gt;
4005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4006&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
4007&nbsp;} &lt;br/&gt;
4008&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[信号系统]]

===Caller===
*[[code:sleep]]
*[[code:trap]]
*[[code:clock]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:issig by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:itrunc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 指定INODE结构(指定文件)所有相关的磁盘块 全部释放
*释放顺序为逆序释放(保证任意时候INODE结构完整)
*共传入一个参数 ip
**ip : 指向给定INODE结构，INODE结构类型为 [[code:struct inode|struct inode]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7404 &lt;br/&gt;
7405&nbsp;/* &lt;br/&gt;
7406&nbsp;&nbsp;* Free all the disk blocks associated &lt;br/&gt;
7407&nbsp;&nbsp;* with the specified inode structure. &lt;br/&gt;
7408&nbsp;&nbsp;* The blocks of the file are removed &lt;br/&gt;
7409&nbsp;&nbsp;* in reverse order. This FILO &lt;br/&gt;
7410&nbsp;&nbsp;* algorithm will tend to maintain &lt;br/&gt;
7411&nbsp;&nbsp;* a contiguous free list much longer &lt;br/&gt;
7412&nbsp;&nbsp;* than FIFO. &lt;br/&gt;
7413&nbsp;&nbsp;*/ &lt;br/&gt;
7414&nbsp;itrunc(ip) &lt;br/&gt;
7415&nbsp;int *ip; &lt;br/&gt;
7416&nbsp;{ &lt;br/&gt;
7417&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp, *bp, *cp; &lt;br/&gt;
7418&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int *dp, *ep; &lt;br/&gt;
7419 &lt;br/&gt;
7420&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = ip; &lt;br/&gt;
7421&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rp-&gt;i_mode&(IFCHR&IFBLK)) != 0) &lt;br/&gt;
7422&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 指定INODE 不是 设备装载INODE，不进行任何操作
&lt;/div&gt;
7423&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(ip = &rp-&gt;i_addr[7]; ip &gt;= &rp-&gt;i_addr[0]; ip--) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*逆序遍历i_addr，遍历变量为ip
&lt;/div&gt;
7424&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(*ip) { &lt;br/&gt;
7425&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rp-&gt;i_mode&ILARG) != 0) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 指定文件 是大文件或巨型文件，则...
&lt;/div&gt;
7426&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]](rp-&gt;i_dev, *ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从磁盘读取 ip 指向的盘块 (索引块 或 间接索引块)
&lt;/div&gt;
7427&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(cp = bp-&gt;b_addr+512; cp &gt;= bp-&gt;b_addr;     &lt;br/&gt;
7428&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp--) &lt;br/&gt;
7429&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(*cp) { &lt;br/&gt;
7430&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip == &rp-&gt;i_addr[7]) { &lt;br/&gt;
7431&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = [[code:bread|bread]](rp-&gt;i_dev, *cp); &lt;br/&gt;
7432&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(ep = dp-&gt;b_addr+512; &lt;br/&gt;
7433&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ep &gt;= dp-&gt;b_addr; ep--)    &lt;br/&gt;
7434&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(*ep) &lt;br/&gt;
7435&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:free|free]](rp-&gt;i_dev, *ep);      &lt;br/&gt;
7436&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](dp); &lt;br/&gt;
7437&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若文件类型为巨型文件，则
**从磁盘读取索引块
**逆序释放 索引块 指向的盘块
&lt;/div&gt;
7438&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:free|free]](rp-&gt;i_dev, *cp); &lt;br/&gt;
7439&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7440&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
7441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7442&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:free|free]](rp-&gt;i_dev, *ip); &lt;br/&gt;
7443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip = 0; &lt;br/&gt;
7444&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7445&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_mode =& ~ILARG; &lt;br/&gt;
7446&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_size0 = 0; &lt;br/&gt;
7447&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_size1 = 0; &lt;br/&gt;
7448&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_flag &lt;nowiki&gt;=| &lt;/nowiki&gt;IUPD; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清 大文件/巨型文件 标志
*文件长度 置0
*置IUPD标志，用于更新该INODE块
&lt;/div&gt;
7449&nbsp;} &lt;br/&gt;
7450&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_itrunc.png"/></p>

===Ref===
*[[文件系统#文件索引结构|文件系统之文件索引结构]]
*[[设备缓存管理]]

===Caller===
*[[code:core]]
*[[code:open1]]
*[[code:iput]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:itrunc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:iupdat</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将内存中inode的内容写回到相应的磁盘inode上
*传入两个参数 p,tm
**p :指向内存中某一[[code:struct inode|INODE结构变量]]的指针
**tm : 为该[[code:struct inode|INODE结构变量]]的最后修改时间
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7366&lt;br/&gt;
7367&nbsp;&nbsp;/*&lt;br/&gt;
7368&nbsp;&nbsp;* Check accessed and update flags on&lt;br/&gt;
7369&nbsp;&nbsp;* an inode structure.&lt;br/&gt;
7370&nbsp;&nbsp;* If either is on, update the inode&lt;br/&gt;
7371&nbsp;&nbsp;* with the corresponding dates&lt;br/&gt;
7372&nbsp;&nbsp;* set to the argument tm.&lt;br/&gt;
7373&nbsp;&nbsp;*/&lt;br/&gt;
7374&nbsp;&nbsp;iupdat(p, tm)&lt;br/&gt;
7375&nbsp;&nbsp;int *p;&lt;br/&gt;
7376&nbsp;&nbsp;int *tm;&lt;br/&gt;
7377&nbsp;&nbsp;{&lt;br/&gt;
7378&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *ip1, *ip2, *rp;&lt;br/&gt;
7379&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int *bp, i;&lt;br/&gt;
7380&lt;br/&gt;
7381&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = p;&lt;br/&gt;
7382&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rp-&gt;i_flag&(IUPD&lt;nowiki&gt;|&lt;/nowiki&gt;IACC)) != 0) {&lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断该内存中的[[code:struct inode|INODE]]是否包含IUPD或IACC标志,若不包含,则直接返回
*关于IUPD与IACC标志,参看[[File:inode.h|inode.h]]
&lt;/div&gt;
7383&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:getfs|getfs]](rp-&gt;i_dev)-&gt;s_ronly)&lt;br/&gt;
7384&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*获取对应磁盘[[code:struct inode|INODE]]所在文件分区的[[code:struct filsys|filsys]]
*判断该文件分区是否包含只读标志,若有则直接返回
&lt;/div&gt;
7385&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = rp-&gt;i_number+31;&lt;br/&gt;
7386&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]](rp-&gt;i_dev, [[code:ldiv|ldiv]](i,16));&lt;br/&gt;
&lt;div class="wikinote"&gt;
*由于inode区是从磁盘的第2块开始的,参看[[文件系统]]
*rp-&gt;i_number表示磁盘上对应[[code:struct inode|INODE]]在磁盘inode区的号码,且从1开始计数
*故(i_number + 31)/16即可得到磁盘上对应[[code:struct inode|INODE]]所处的块号
*从磁盘上读入该块内容到缓存块bp
&lt;/div&gt;
7387&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip1 = bp-&gt;b_addr + 32*[[code:lrem|lrem]](i, 16);&lt;br/&gt;
7388&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip2 = &rp-&gt;i_mode;&lt;br/&gt;
7389&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(ip2 &lt; &rp-&gt;i_addr[8])&lt;br/&gt;
7390&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip1++ = *ip2++;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip1为bp中[[code:struct inode|INODE]]的起始地址
*将内存[[code:struct inode|INODE]]中从i_mode至i_address[7]的所有内容拷贝到bp中的[[code:struct inode|INODE]]相应位置
&lt;/div&gt;
7391&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;i_flag&IACC) {&lt;br/&gt;
7392&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip1++ = time[0];&lt;br/&gt;
7393&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip1++ = time[1];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果内存上的[[code:struct inode|INODE]]含有IACC标志,则bp中相应[[code:struct inode|INODE]]的i_atime置为当前系统时间
&lt;/div&gt;
7394&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else&lt;br/&gt;
7395&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip1 =+ 2;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果内存上的[[code:struct inode|INODE]]不含IACC标志,则bp中相应[[code:struct inode|INODE]]的i_atime保持不变,ip1向后移两个字节,来到i_mtime的地址起始处
&lt;/div&gt;
7396&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;i_flag&IUPD) {&lt;br/&gt;
7397&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip1++ = *tm++;&lt;br/&gt;
7398&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ip1++ = *tm;&lt;br/&gt;
7399&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果内存上的[[code:struct inode|INODE]]包含IUPD(被修改过标志),则bp中相应[[code:struct inode|INODE]]的i_mtime置为传入的最近修改时间
&lt;/div&gt;
7400&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bwrite|bwrite]](bp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将bp写回磁盘
&lt;/div&gt;
7401&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
7402&nbsp;&nbsp;}&lt;br/&gt;
7403&nbsp;&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统]]
*[[设备缓存管理]]

===Caller===
*[[code:smdate]]
*[[code:stat1]]
*[[code:update]]
*[[code:iput]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:iupdat by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ka6</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[file:seg.h]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ka6 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:kill</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*kill 的 系统调用函数
*向 指定进程 发送 指定信号
**若 指定进程号 为 0，信号发送给 当前进程同一终端上的所有进程
*共输入2个参数 pid , sig
**pid : 指定进程号，保存在 [[skill:u.u_ar0|u.u_ar0]][R0]
**sig : 指定信号，保存在 [[code:user|u.u_arg[0]]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3629 &lt;br/&gt;
3630&nbsp;kill() &lt;br/&gt;
3631&nbsp;{ &lt;br/&gt;
3632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *p, *q; &lt;br/&gt;
3633&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register a; &lt;br/&gt;
3634&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int f; &lt;br/&gt;
3635 &lt;br/&gt;
3636&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f = 0; &lt;br/&gt;
3637&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = [[skill:u.u_ar0|u.u_ar0]][R0]; &lt;br/&gt;
3638&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q = [[code:user|u.u_procp]]; &lt;br/&gt;
3639&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(p = &[[code:proc|proc]][0]; p &lt; &[[code:proc|proc]][NPROC]; p++) { &lt;br/&gt;
3640&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p == q) &lt;br/&gt;
3641&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue; &lt;br/&gt;
3642&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a != 0 && p-&gt;p_pid != a) &lt;br/&gt;
3643&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*pid != 0 ，且 p 进程号不匹配 pid ，则继续
&lt;/div&gt;
3644&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a==0&&(p-&gt;p_ttyp!=q-&gt;p_ttyp&lt;nowiki&gt;||&lt;/nowiki&gt;p&lt;=&[[code:proc|proc]][1]))   &lt;br/&gt;
3645&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*pid ==0，且
**p 和 当前进程 不在同一终端，则继续
**p 为 0# 1# 进程，则继续
&lt;/div&gt;
3646&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(u.u_uid != 0 && u.u_uid != p-&gt;p_uid) &lt;br/&gt;
3647&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前用户 不是 超级用户，且不是p的拥有者，则继续
&lt;/div&gt;
3648&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f++; &lt;br/&gt;
3649&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:psignal|psignal]](p, [[code:user|u.u_arg]][0]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*发送信号
&lt;/div&gt;
3650&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3651&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(f == 0) &lt;br/&gt;
3652&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ESRCH; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 未找到 匹配进程，则抛出错误
**[[错误代码]] : ESRCH
&lt;/div&gt;
3653&nbsp;} &lt;br/&gt;
3654&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[信号系统]]

===Param===
:(kill = 37.; not in assembler)
:(process number in r0)
:&lt;b&gt;sys kill; sig&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:kill by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:kl11</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[file:kl.c]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:kl11 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:klclose</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*kl接口的设备关闭函数
*传入1个参数:设备号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8055&nbsp;klclose(dev)&lt;br/&gt;
8056&nbsp;{  register [[code:struct tty|struct tty]] *tp;&lt;br/&gt;
8057&nbsp;&nbsp;&nbsp;&nbsp;tp = &[[code:kl11|kl11]][dev.[[file:conf.h|d_minor]]&lt;nowiki&gt;]&lt;/nowiki&gt;;&lt;br/&gt;
8058&nbsp;&nbsp;&nbsp;&nbsp;[[code:wflushtty|wflushtty]](tp);&lt;br/&gt;
8059&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct tty|tp-&gt;t_state]] = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据设备号获得设备的tty结构
*等待指定tty输出队列元素全部输出后清空所有队列
*清除设备的内部工作状态
&lt;/div&gt;
8060&nbsp;}&lt;br/&gt;
8061&nbsp;/* -------------------------    */&lt;br/&gt;
&lt;/div&gt;
===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:klclose by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:klopen</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*打开 KL/DL-11 设备
&lt;/div&gt;
&lt;div class="wikicode"&gt;
&lt;div class="wikinote"&gt;
*涉及到的 常量定义在 [[file:kl.c|kl.c]] [[file:tty.h|tty.h]]
&lt;/div&gt;
8022&nbsp;/* ------------------------- */ &lt;br/&gt;
8023&nbsp;klopen(dev, flag) &lt;br/&gt;
8024&nbsp;{&nbsp;&nbsp;&nbsp;register char * addr; &lt;br/&gt;
8025&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp; &lt;br/&gt;
8026&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev[[skill:.d_minor|.d_minor]] &gt;= NKL11+NDL11) { &lt;br/&gt;
8027&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENXIO; &lt;br/&gt;
8028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
8029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*次设备号越界 ， 则抛出错误
**[[错误代码]] : ENXIO
&lt;/div&gt;
8030&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = &[[code:kl11|kl11]][dev[[skill:.d_minor|.d_minor]]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*找到 对应的 [[code:struct tty|struct tty]] 结构
&lt;/div&gt;
8031&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:user|u.u_procp]]-&gt;p_ttyp == 0) { &lt;br/&gt;
8032&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_ttyp = tp; &lt;br/&gt;
8033&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_dev = dev; &lt;br/&gt;
8034&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 现行进程 未分配 tty，则分配
&lt;/div&gt;
8035&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* set up minor 0 to address KLADDR &lt;br/&gt;
8036&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* set up minor 1 thru NKL11-1 to address from KLBASE   &lt;br/&gt;
8037&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* set up minor NKL11 on to address from DLBASE &lt;br/&gt;
8038&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
8039&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr = KLADDR + 8*dev.d_minor; &lt;br/&gt;
8040&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev[[skill:.d_minor|.d_minor]]) &lt;br/&gt;
8041&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr =+ KLBASE-KLADDR-8; &lt;br/&gt;
8042&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev[[skill:.d_minor|.d_minor]] &gt;= NKL11) &lt;br/&gt;
8043&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr =+ DLBASE-KLBASE-8*NKL11+8; &lt;br/&gt;
8044&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_addr = addr; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*计算 tty 的设备寄存器地址
*8035 - 8038 注释已经说的很明白
&lt;/div&gt;
8045&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((tp-&gt;t_state&ISOPEN) == 0) { &lt;br/&gt;
8046&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_state = ISOPEN&lt;nowiki&gt;|&lt;/nowiki&gt;CARR_ON; &lt;br/&gt;
8047&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_flags = &lt;nowiki&gt;XTABS|LCASE|ECHO|CRMOD&lt;/nowiki&gt;; &lt;br/&gt;
8048&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_erase = CERASE; &lt;br/&gt;
8049&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_kill = CKILL; &lt;br/&gt;
8050&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于 "未打开"的tty，执行初始化操作
**打开tty
**置 模式 
***XTABS
***LCASE
***ECHO
***CRMOD
**置特殊字符
&lt;/div&gt;
8051&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr-&gt;klrcsr &lt;nowiki&gt;=| IENABLE|DSRDY|RDRENB&lt;/nowiki&gt;; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 设备接收器 标志
**使能位
**就绪位
**完成位
&lt;/div&gt;
8052&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr-&gt;kltcsr &lt;nowiki&gt;=| IENABLE&lt;/nowiki&gt;; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 设备发送器 标志
**就绪位
&lt;/div&gt;
8053&nbsp;} &lt;br/&gt;
8054&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:klopen by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:klread</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*kl接口的读函数
*传入1个参数:设备号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8062&nbsp;klread(dev)&lt;br/&gt;
8063&nbsp;{  [[code:ttread|ttread]](&[[code:kl11|kl11]][dev[[skill:.d_minor|.d_minor]]&lt;nowiki&gt;]&lt;/nowiki&gt;);&lt;br/&gt;
8064&nbsp;}&lt;br/&gt;
8065&nbsp;/* -------------------------  */&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:klread by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:klrint</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*KL 设备中断处理函数
*一般 由读取数据完成 引发
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8078&nbsp;klrint(dev)&lt;br/&gt;
8079&nbsp;{&nbsp;&nbsp;&nbsp;register int c, *addr;&lt;br/&gt;
8080&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp;&lt;br/&gt;
8081&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = &[[code:kl11|kl11]][dev[[skill:.d_minor|.d_minor]]];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*找到 设备号dev 对应的 KL设备 的[[code:struct tty|struct tty]]结构
&lt;/div&gt;
8082&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr = tp-&gt;t_addr;&lt;br/&gt;
8083&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = addr-&gt;[[skill:klrbuf|klrbuf]];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*获取 输入的字符 c
&lt;/div&gt;
8084&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr-&gt;[[skill:klrcsr|klrcsr]] &lt;nowiki&gt;=|&lt;/nowiki&gt; RDRENB;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 设备接收器 可用
*RDRENB 定义在 [[file:kl.c|kl.c]]
&lt;/div&gt;
8085&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((c&0177)==0)&lt;br/&gt;
8086&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr-&gt;[[skill:kltbuf|kltbuf]] = c;    /* hardware botch */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*诡异，列入[[遗留问题]]
&lt;/div&gt;
8087&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttyinput|ttyinput]](c, tp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*c 送入 tty 原始输入队列
&lt;/div&gt;
8088&nbsp;} &lt;br/&gt;
8089&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:klrint by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:klsgtty</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*d_sgtty对于kl接口设备的实例函数
*传入2个参数:
**dev : 设备号
**v : 一个缓存区，用来交换tty状态
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8090&nbsp;klsgtty(dev, v)&lt;br/&gt;
8091&nbsp;int *v;&lt;br/&gt;
8092&nbsp;{  register [[code:struct tty|struct tty]] *tp;&lt;br/&gt;
8093&nbsp;&nbsp;&nbsp;&nbsp;tp = &[[code:kl11|kl11]][dev.d_minor];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据传入的从设备号在[[code:kl11|kl11]]接口设备表中找到对应的tty结构
&lt;/div&gt;
8094&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttystty|ttystty]](tp, v);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用[[code:ttystty|ttystty]],实现gtty或者stty要求的功能
&lt;/div&gt;
8095&nbsp;}&lt;br/&gt;
8096&nbsp;/* ------------------------- */&lt;br/&gt;
8097&lt;br/&gt;
8098&lt;br/&gt;
8099&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:klsgtty by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:klwrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*kl接口的写函数
*传入1个参数:设备号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8066 klwrite(dev)&lt;br/&gt;
8067 {  [[code:ttwrite|ttwrite]](&[[code:kl11|kl11]][dev.[[file:conf.h|d_minor]]&lt;nowiki&gt;]&lt;/nowiki&gt;);&lt;br/&gt;
8068 }&lt;br/&gt;
8069 /* -------------------------  */&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:klwrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:klxint</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*kl接口的发送器中断响应函数
*传入1个参数:设备号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8070&nbsp;klxint(dev)&lt;br/&gt;
8071&nbsp;{  register [[code:struct tty|struct tty]] *tp;&lt;br/&gt;
8072&nbsp;&nbsp;&nbsp;&nbsp;tp = &[[code:kl11|kl11]][dev.[[file:conf.h|d_minor]]&lt;nowiki&gt;]&lt;/nowiki&gt;;&lt;br/&gt;
8073&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttstart|ttstart]](tp);&lt;br/&gt;
8074&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct tty|tp]]-&gt;[[code:struct clist|t_outq]].c_cc == 0 &lt;nowiki&gt;||&lt;/nowiki&gt; [[code:struct tty|tp]]-&gt;[[code:struct clist|t_outq]].c_cc == TTLOWAT)&lt;br/&gt;
8075&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&[[code:struct tty|tp]]-&gt;t_outq);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*启动tty输出
*当输出队列中的字符数为0或为TTLOWAT(定义见[[file:tty.h|tty.h]]的第7962行,值为20)时
**唤醒等待输出队列的进程
&lt;/div&gt;
8076&nbsp;}&lt;br/&gt;
8077&nbsp;/* -------------------------  */&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:klxint by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ldiv</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*用于返回函数两参数的商
*共2个参数:n,b
*n:被除数,b:除数
*返回n/b的值
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1391&nbsp;/* -------------------------*/&lt;br/&gt;
1392&nbsp;.globl     _ldiv&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进入函数前状态如图:
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_ldiv_1.png"/></p>
&lt;/div&gt;
1393&nbsp;_ldiv:&lt;br/&gt;
1394&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:CLR|clr]]   r0&lt;br/&gt;
1395&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]]   2(sp),r1&lt;br/&gt;
1396&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:DIV|div]]   4(sp),r0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清除R0寄存器的值
*将2(SP)的值传给R1
*用4(SP)的值除以由R0,R1组成的32位长的数,并将商传递给R0
*R0作为函数的返回值返回
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_ldiv_2.png"/></p>
&lt;/div&gt;
1397&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:RTS|rts]]   pc&lt;br/&gt;
1398&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[关于汇编函数的说明]]
===Caller===
*[[code:printn]]
*[[code:grow]]
*[[code:rkaddr]]
*[[code:stat1]]
*[[code:iupdat]]
*[[code:namei]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ldiv by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:link</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*link的系统调用函数
*将 文件的别名 加入文件系统
*使用2个隐式参数: name1 , name2
**name1 : 文件的当前路径，保存在[[code:user|u.u_arg[0]]]
**name2 : 文件的别名路径，保存在[[code:user|u.u_arg[1]]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5905 &lt;br/&gt;
5906 &lt;br/&gt;
5907&nbsp;/* link system call &lt;br/&gt;
5908&nbsp;&nbsp;*/ &lt;br/&gt;
5909&nbsp;link() &lt;br/&gt;
5910&nbsp;{ &lt;br/&gt;
5911&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct inode|ip]], *xp; &lt;br/&gt;
5912&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern uchar; &lt;br/&gt;
5913 &lt;br/&gt;
5914&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:namei|namei]](&[[code:uchar|uchar]], 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip ← name1 对应的 INODE
&lt;/div&gt;
5915&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]] == NULL) &lt;br/&gt;
5916&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5917&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]]-&gt;i_nlink &gt;= 127) { &lt;br/&gt;
5918&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EMLINK; &lt;br/&gt;
5919&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
5920&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若ip 别名数 &gt;=127，抛出错误
**[[错误代码]] : EMLINK
&lt;/div&gt;
5921&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct inode|ip]]-&gt;i_mode&IFMT)==IFDIR && ![[code:suser|suser]]()) &lt;br/&gt;
5922&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*只有 超级用户 才可以给目录起别名
&lt;/div&gt;
5923&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
5924&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* ulock to avoid possible hanging in namei &lt;br/&gt;
5925&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
5926&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag =& ~ILOCK; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*解锁ip (在5914 [[code:namei|namei]]置锁)
&lt;/div&gt;
5927&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_dirp]] = [[code:user|u.u_arg]][1]; &lt;br/&gt;
5928&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp = [[code:namei|namei]](&[[code:uchar|uchar]], 1); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*xp ← 查找 name2 对应的 INODE
&lt;/div&gt;
5929&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(xp != NULL) { &lt;br/&gt;
5930&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EEXIST; &lt;br/&gt;
5931&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](xp); &lt;br/&gt;
5932&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*xp 若已存在，则抛出错误，释放xp
**[[错误代码]] : EEXIST
&lt;/div&gt;
5933&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(u.u_error) &lt;br/&gt;
5934&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
5935&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_pdir]]-&gt;i_dev != [[code:struct inode|ip]]-&gt;i_dev) { &lt;br/&gt;
5936&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:user|u.u_pdir]]); &lt;br/&gt;
5937&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EXDEV; &lt;br/&gt;
5938&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
5939&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若name1 和 name2 INODE不在同一设备，抛出错误
**[[错误代码]] : EXDEV
&lt;/div&gt;
5940&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wdir|wdir]]([[code:struct inode|ip]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 ip (再次) 链入目录结构 (新文件名name2为参数)
&lt;/div&gt;
5941&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_nlink++; &lt;br/&gt;
5942&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; IUPD; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*修正ip参数
&lt;/div&gt;
5943 &lt;br/&gt;
5944&nbsp;out: &lt;br/&gt;
5945&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]); &lt;br/&gt;
5946&nbsp;} &lt;br/&gt;
5947&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Param===
:(link = 9.)
:&lt;b&gt;sys link; name1; name2&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:link by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:lpclose</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*lp设备的驱动函数
*此处不予深入讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:lpclose by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:lpopen</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*lp设备的驱动函数
*此处不予深入讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:lpopen by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:lpwrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*lp设备的驱动函数
*此处不予深入讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:lpwrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:lrem</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*用于返回函数两参数相除的余数
*共2个参数:n,b
*n:被除数,b:除数
*返回n/b的余数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1399&nbsp;/* -------------------------*/&lt;br/&gt;
1400&nbsp;.globl     _lrem&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进入函数前状态如图:
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_lrem_1.png"/></p>
&lt;/div&gt;
1401&nbsp;_lrem:&lt;br/&gt;
1402&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:CLR|clr]]   r0&lt;br/&gt;
1403&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]]   2(sp),r1&lt;br/&gt;
1404&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:DIV|div]]   4(sp),r0&lt;br/&gt;
1405&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:MOV|mov]]   r1,r0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清除R0寄存器的值
*将2(SP)的值传给R1
*用4(SP)的值除以由R0,R1组成的32位长的数,并将余数传递给R1
*将R1赋值给R0,使余数作为函数的返回值返回
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_lrem_2.png"/></p>
&lt;/div&gt;
1406&nbsp;&nbsp;&nbsp;&nbsp;[[Pdp11:RTS|rts]]   pc&lt;br/&gt;
1407&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:printn]]
*[[code:rkaddr]]
*[[code:stat1]]
*[[code:iget]]
*[[code:iupdat]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:lrem by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:lshift</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*进行双字长数据的位移，返回位移结果(不改变源数据)
*共传入两个参数，设为 nump , bits
**nump : 指向欲进行操作的双字长数据
**bits : 进行位移的位数
***若为正数，向左位移
***若为负数，向右位移
*返回 位移结果的低字节
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1408&nbsp;/* ------------------------- */ &lt;br/&gt;
1409&nbsp;.globl     _lshift&lt;br/&gt;
1410&nbsp;_lshift:&lt;br/&gt;
1411&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r1&lt;br/&gt;
&lt;div class="wikinote"&gt;
*nump → R1
&lt;/div&gt;
1412&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (r1)+,r0&lt;br/&gt;
1413&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (r1),r1&lt;br/&gt;
&lt;div class="wikinote"&gt;
*数据高字节 → R0
*数据低字节 → R1
&lt;/div&gt;
1414&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASHC|ashc]]    4(sp),r0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进行位移，位移位数为 bits
&lt;/div&gt;
1415&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r1,r0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*返回值 置为 位移结果的低字节
&lt;/div&gt;
1416&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
1417&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[关于汇编函数的说明]]

===Caller===
*[[code:readi]]
*[[code:writei]]
*[[code:mmread]]
*[[code:mmwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:lshift by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:main</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*操作系统的初始化程序之c语言版,被[[code:start|start]]函数(初始化程序之汇编版)所调用
*作用:
**1.清所有用户可用的内存单元,并检测其实际长度,建立内存可用区表[[file:systm.h|coremap]]
**2.建立盘交换区可用存储区表[[file:systm.h|swapmap]]
**3.确定每个进程可用的最大存储空间
**4.初始化0号进程与1号进程,从此刻起他们将各司其职
**5.初始化字符设备缓存,块设备缓存以及文件系统
**6.设置根目录与当前目录
*参看[[系统初启]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1531&lt;br/&gt;
1532&nbsp;/*&lt;br/&gt;
1533&nbsp;&nbsp;* Initialization code.&lt;br/&gt;
1534&nbsp;&nbsp;* Called from m40.s or m45.s as&lt;br/&gt;
1535&nbsp;&nbsp;* soon as a stack and segmentation&lt;br/&gt;
1536&nbsp;&nbsp;* have been established.&lt;br/&gt;
1537&nbsp;&nbsp;* Functions:&lt;br/&gt;
1538&nbsp;&nbsp;* clear and free user core&lt;br/&gt;
1539&nbsp;&nbsp;* find which clock is configured&lt;br/&gt;
1540&nbsp;&nbsp;* hand craft 0th process&lt;br/&gt;
1541&nbsp;&nbsp;* call all initialization routines&lt;br/&gt;
1542&nbsp;&nbsp;* fork - process 0 to schedule&lt;br/&gt;
1543&nbsp;&nbsp;*      - process 1 execute bootstrap&lt;br/&gt;
1544&nbsp;&nbsp;*&lt;br/&gt;
1545&nbsp;&nbsp;* panic: no clock -- neither clock responds&lt;br/&gt;
1546&nbsp;&nbsp;* loop at loc 6 in user mode -- /etc/init&lt;br/&gt;
1547&nbsp;&nbsp;* cannot be executed&lt;br/&gt;
1548&nbsp;&nbsp;*/&lt;br/&gt;
1549&lt;br/&gt;
1550&nbsp;main()&lt;br/&gt;
1551&nbsp;{&lt;br/&gt;
1552&nbsp;&nbsp;&nbsp;&nbsp;extern schar;&lt;br/&gt;
1553&nbsp;&nbsp;&nbsp;&nbsp;register i, *p;&lt;br/&gt;
1554&lt;br/&gt;
1555&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1556&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* zero and free all of core&lt;br/&gt;
1557&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1558&lt;br/&gt;
1559&nbsp;&nbsp;&nbsp;&nbsp;updlock = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*初始化 updlock ([[code:update|update]]锁标志) ,以防止[[code:update|update]]函数死锁
&lt;/div&gt;
1560&nbsp;&nbsp;&nbsp;&nbsp;i = *[[code:ka6|ka6]] + USIZE;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*i = 0#进程PPDA区后第一个块的块号
&lt;/div&gt;
1561&nbsp;&nbsp;&nbsp;&nbsp;UISD[[skill:r|-&gt;r]][0] = 077406;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置UISD[0],使其大小为8K字节,并且为可读写,参看[[Pdp11:页说明寄存器|页说明寄存器]]
&lt;/div&gt;
1562&nbsp;&nbsp;&nbsp;&nbsp;for(;;) {&lt;br/&gt;
1563&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][0] = i;&lt;br/&gt;
1564&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:fuibyte|fuibyte]](0) &lt; 0)&lt;br/&gt;
1565&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&lt;br/&gt;
1566&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:clearseg|clearseg]](i);&lt;br/&gt;
1567&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[file:systm.h|maxmem]]++;&lt;br/&gt;
1568&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]]([[code:struct map|coremap]], 1, i);&lt;br/&gt;
1569&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;&lt;br/&gt;
1570&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
1562 - 1569
*从0#进程PPDA区后的第一个块开始:
*尝试读取每一个块的第一个字节,若能读取成功,表明该块为可用内存块
**清该块内容
**内存最大块数+1
**将该块加入内存可用区表
**继续取下一个内存块,直到该块读取出错为止,表明可用内存到此为止
&lt;/div&gt;
1571&nbsp;&nbsp;&nbsp;&nbsp;if([[file:m40.s|cputype]] == 70)&lt;br/&gt;
1572&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i&lt;62; i=+2) {&lt;br/&gt;
1573&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UBMAP[[skill:r|-&gt;r]][i] = i&lt;&lt;12;&lt;br/&gt;
1574&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UBMAP[[skill:r|-&gt;r]][i+1] = 0;&lt;br/&gt;
1575&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于pdp11/40,上述部分不会执行
&lt;/div&gt;
1576&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("mem = %l<br/>\n", maxmem*5/16);&lt;br/&gt;
1577&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("RESTRICTED RIGHTS<br/>\n<br/>\n");&lt;br/&gt;
1578&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("Use, duplication or disclosure is subject to<br/>\n");&lt;br/&gt;
1579&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("restrictions stated in Contract with Western<br/>\n");&lt;br/&gt;
1580&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("Electric Company, Inc.<br/>\n");&lt;br/&gt;
&lt;div class="wikinote"&gt;
*输出相关信息
&lt;/div&gt;
1581&lt;br/&gt;
1582&nbsp;&nbsp;&nbsp;&nbsp;[[file:systm.h|maxmem]] = [[code:min|min]](maxmem, MAXMEM);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*计算单个进程能使用的最大内存空间
&lt;/div&gt;
1583&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]]([[code:struct map|swapmap]], [[code:nswap|nswap]], [[code:swplo|swplo]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*以[[code:swplo|swplo]]为起始地址,[[code:nswap|nswap]]为大小,建立盘交换区可用存储区表swapmap
&lt;/div&gt;
1584&lt;br/&gt;
1585&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1586&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* set up system process&lt;br/&gt;
1587&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1588&lt;br/&gt;
1589&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct proc|proc]][0].p_addr = *ka6;&lt;br/&gt;
1590&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct proc|proc]][0].p_size = USIZE;&lt;br/&gt;
1591&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct proc|proc]][0].p_stat = SRUN;&lt;br/&gt;
1592&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct proc|proc]][0].p_flag &lt;nowiki&gt;=| SLOAD|&lt;/nowiki&gt;SSYS;&lt;br/&gt;
1593&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]] = &[[code:struct proc|proc]][0];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对0#进程进行初始化参数设置
&lt;/div&gt;
1594&lt;br/&gt;
1595&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1596&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* determine clock&lt;br/&gt;
1597&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1598&lt;br/&gt;
1599&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][7] = [[code:ka6|ka6]][1];    /* io segment */&lt;br/&gt;
1600&nbsp;&nbsp;&nbsp;&nbsp;UISD[[skill:r|-&gt;r]][7] = 077406;&lt;br/&gt;
1601&nbsp;&nbsp;&nbsp;&nbsp;lks = CLOCK1;&lt;br/&gt;
1602&nbsp;&nbsp;&nbsp;&nbsp;if([[code:fuiword|fuiword]](lks) == -1) {&lt;br/&gt;
1603&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lks = CLOCK2;&lt;br/&gt;
1604&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:fuiword|fuiword]](lks) == -1)&lt;br/&gt;
1605&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("no clock");&lt;br/&gt;
1606&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
1607&nbsp;&nbsp;&nbsp;&nbsp;*lks = 0115;&lt;br/&gt;
&lt;div class="wikinote"&gt;
1601 - 1607
*判断当前时钟的种类,并且对时钟寄存器进行初始化
*参看[[时钟]]
&lt;/div&gt;
&lt;div class="wikinote"&gt;
关于1599 - 1600 1602 1604的说明
*1599 - 1600 置 UISA7/UISD7 为I/O页
**为了使用 [[code:fuiword|fuiword]]寻址 时钟寄存器
*关于 使用[[code:fuiword|fuiword]]寻址 时钟寄存器 ，而不直接寻址 的说明
**由于CLOCK1 CLOCK2 地址不一定存在，所以 借用[[code:fuiword|fuiword]]的出错处理机制，对地址不存在的情况进行处理
&lt;/div&gt;
1608&lt;br/&gt;
1609&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1610&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* set up 'known' i-nodes&lt;br/&gt;
1611&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1612&lt;br/&gt;
1613&nbsp;&nbsp;&nbsp;&nbsp;[[code:cinit|cinit]]();&lt;br/&gt;
1614&nbsp;&nbsp;&nbsp;&nbsp;[[code:binit|binit]]();&lt;br/&gt;
1615&nbsp;&nbsp;&nbsp;&nbsp;[[code:iinit|iinit]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*初始化块缓存
*初始化字符缓存
*初始化文件系统
&lt;/div&gt;
1616&nbsp;&nbsp;&nbsp;&nbsp;rootdir = [[code:iget|iget]](rootdev, ROOTINO);&lt;br/&gt;
1617&nbsp;&nbsp;&nbsp;&nbsp;rootdir-&gt;i_flag =& ~ILOCK;&lt;br/&gt;
1618&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cdir]] = [[code:iget|iget]](rootdev, ROOTINO);&lt;br/&gt;
1619&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cdir]]-&gt;i_flag =& ~ILOCK;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*初始化:
**rootdir
**[[code:user|u.u_cdir]]
&lt;/div&gt;
1620&lt;br/&gt;
1621&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1622&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* make init process&lt;br/&gt;
1623&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* enter scheduling loop&lt;br/&gt;
1624&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* with system process&lt;br/&gt;
1625&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1626&lt;br/&gt;
1627&nbsp;&nbsp;&nbsp;&nbsp;if([[code:newproc|newproc]]()) {&lt;br/&gt;
1628&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:expand|expand]](USIZE+1);&lt;br/&gt;
1629&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:estabur|estabur]](0, 1, 0, 0);&lt;br/&gt;
1630&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:copyout|copyout]](icode, 0, sizeof icode);&lt;br/&gt;
1631&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Return goes to loc. 0 of user init&lt;br/&gt;
1633&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* code just copied out.&lt;br/&gt;
1634&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1635&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
1636&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*创建1号进程
**对于新创建的1#进程
**扩展进程图像
**设置相对地址映照
**将[[file:main.c|icode数组]]中的内容拷贝到用户态地址空间的起始地址&lt;br/&gt;icode存放的是用户态启动程序的二进制代码&lt;br/&gt;详细参看 LIONS代码分析
&lt;/div&gt;
1637&nbsp;&nbsp;&nbsp;&nbsp;[[code:sched|sched]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于0#进程,执行进程图像调入调出主循环
&lt;/div&gt;
1638&nbsp;}&lt;br/&gt;
1639&nbsp;/* -------------------------         */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[系统初启]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:main by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:maknode</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*生成 一个新文件的NODE块
*共传入1个参数 : mode
**mode : 文件的模式，常量定义参看[[File:inode.h|inode.h]]
*使用了1个隐式参数 : u.u_pdir
**u.u_pdir 指向目录项，由[[code:namei|namei]]设置
*总体：申请u.u_pdir对应设备上的新INODE块，并将此块链入u.u_pdir([[code:wdir|wdir]])
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7451&lt;br/&gt;
7452&nbsp;/*&lt;br/&gt;
7453&nbsp;&nbsp;* Make a new file.&lt;br/&gt;
7454&nbsp;&nbsp;*/&lt;br/&gt;
7455&nbsp;maknode(mode)&lt;br/&gt;
7456&nbsp;{&lt;br/&gt;
7457&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct inode|ip]];&lt;br/&gt;
7458&lt;br/&gt;
7459&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:ialloc|ialloc]]([[code:user|u.u_pdir]]-&gt;i_dev);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*申请u.u_pdir对应设备上的新INODE块 ip
**新INODE块 由[[code:ialloc|ialloc]]置锁
&lt;/div&gt;
7460&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct inode|ip]]==NULL)&lt;br/&gt;
7461&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
7462&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag &lt;nowiki&gt;=| IACC|IUPD;&lt;/nowiki&gt;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 ip 标志位
*标志常量参看[[file:inode.h|inode.h]]
&lt;/div&gt;
7463&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_mode = mode&lt;nowiki&gt;|&lt;/nowiki&gt;IALLOC;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 ip 模式位
*模式常量参看[[file:inode.h|inode.h]]
&lt;/div&gt;
7464&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_nlink = 1;&lt;br/&gt;
7465&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_uid = u.u_uid;&lt;br/&gt;
7466&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_gid = u.u_gid;&lt;br/&gt;
7467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wdir|wdir]]([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将ip链入u.u_pdir，形成目录结构
&lt;/div&gt;
7468&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returm([[code:struct inode|ip]]);&lt;br/&gt;
7469&nbsp;}&lt;br/&gt;
7470&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]
*[[设备缓存管理]]

===Caller===
*[[code:core]]
*[[code:creat]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:maknode by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:malloc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>

|source =
&lt;div class="wikiheadnote"&gt;
*用于分配指定大小的空闲块，给程序使用
*共传入两个参数 : mp 和 size
*mp : 用于管理空闲块的链表
*size : 请求分配的空闲块的大小
*若分配成功，返回分配空闲块的首地址；否则，返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2521&nbsp;&lt;br/&gt;
2522&nbsp;/*&lt;br/&gt;
2523&nbsp;&nbsp;* Allocate size units from the given&lt;br/&gt;
2524&nbsp;&nbsp;* map. Return the base of the allocated&lt;br/&gt;
2525&nbsp;&nbsp;* space.&lt;br/&gt;
2526&nbsp;&nbsp;* Algorithm is first fit.&lt;br/&gt;
2527&nbsp;&nbsp;*/&lt;br/&gt;
2528&nbsp;malloc(mp, size)&lt;br/&gt;
2529&nbsp;[[code:struct map|struct map]] *mp;&lt;br/&gt;
2530&nbsp;{&lt;br/&gt;
2531&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int a;&lt;br/&gt;
2532&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct map|struct map]] *bp;&lt;br/&gt;
2533&nbsp;&lt;br/&gt;
2534&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (bp = mp; bp-&gt;m_size; bp++) {&lt;br/&gt;
&lt;div class="wikinote"&gt;遍历空闲块链表所有元素，m_size = 0 为链表结束标志&lt;/div&gt;
2535&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp-&gt;m_size &gt;= size) { &lt;br/&gt;
&lt;div class="wikinote"&gt;若某一空闲块可供分配&lt;/div&gt;
2536&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = bp-&gt;m_addr; &lt;br/&gt;
2537&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;m_addr =+ size; &lt;br/&gt;
&lt;div class="wikinote"&gt;修正该空闲块大小&lt;/div&gt;
2538&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((bp-&gt;m_size =- size) == 0) &lt;br/&gt;
2539&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do { &lt;br/&gt;
2540&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp++; &lt;br/&gt;
2541&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(bp-1)-&gt;m_addr = bp-&gt;m_addr; &lt;br/&gt;
2542&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while((bp-1)-&gt;m_size = bp-&gt;m_size);  &lt;br/&gt;
&lt;div class="wikinote"&gt;若分配后该空闲块大小为0，将其从链表删除&lt;/div&gt;
2543&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(a); &lt;br/&gt;
&lt;div class="wikinote"&gt;分配成功，返回分配空闲块的首地址&lt;/div&gt;
2544&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2545&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2546&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0);&lt;br/&gt;
&lt;div class="wikinote"&gt;分配失败，返回0&lt;/div&gt;
2547&nbsp;}&lt;br/&gt;
2548&nbsp;/*----------------------   */&lt;br/&gt;
    
&lt;/div&gt;

===Extend===
=举例=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_code_malloc.png"/></p>
===Ref===
*[[空闲块管理|空闲块管理]]

===Caller===
*[[code:newproc]]
*[[code:sched]]
*[[code:expand]]
*[[code:exit]]
*[[code:xswap]]
*[[code:xalloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:malloc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:mapalloc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>此函数为PDP11/70对应的函数，不作讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:mapalloc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:mapfree</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>此函数为PDP11/70对应的函数，不作讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:mapfree by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:maptab</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[file:tty.c|tty.c]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:maptab by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:max</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*返回 a,b 的最大值
* a,b为字节长变量
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6322 &lt;br/&gt;
6323&nbsp;/* Return the logical maximum &lt;br/&gt;
6324&nbsp;&nbsp;* of the 2 arguments. &lt;br/&gt;
6325&nbsp;&nbsp;*/ &lt;br/&gt;
6326&nbsp;max(a, b) &lt;br/&gt;
6327&nbsp;char *a, *b; &lt;br/&gt;
6328&nbsp;{ &lt;br/&gt;
6329 &lt;br/&gt;
6330&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a &gt; b) &lt;br/&gt;
6331&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(a); &lt;br/&gt;
6332&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(b); &lt;br/&gt;
6333&nbsp;} &lt;br/&gt;
6334&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:max by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:mfree</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
|source = 
&lt;div class="wikiheadnote"&gt;
*用于释放已分配的内/外存块，合并入空闲块管理链表进行管理
*共传入三个参数 : mp , size , aa
*mp : 用于管理空闲块的链表
*size : 欲释放的块大小
*aa : 欲释放的块的首地址
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2549&lt;br/&gt;
2550&nbsp;/*&lt;br/&gt;
2551&nbsp;&nbsp;* Free the previously allocated space aa&lt;br/&gt;
2552&nbsp;&nbsp;* of size units into the specified map.&lt;br/&gt;
2553&nbsp;&nbsp;* Sort aa into map and combine on&lt;br/&gt;
2554&nbsp;&nbsp;* one or both ends if possible.&lt;br/&gt;
2555&nbsp;&nbsp;*/&lt;br/&gt;
2556&nbsp;mfree(mp, size, aa)&lt;br/&gt;
2557&nbsp;[[code:struct map|struct map]] *mp;&lt;br/&gt;
2558&nbsp;{&lt;br/&gt;
2559&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct map|struct map]] *bp;&lt;br/&gt;
2560&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int t;&lt;br/&gt;
2561&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int a;&lt;br/&gt;
2562&lt;br/&gt;
2563&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = aa;&lt;br/&gt;
2564&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (bp = mp; bp-&gt;m_addr&lt;=a && bp-&gt;m_size!=0; bp++);&lt;br/&gt;
&lt;div class="wikinote"&gt;将bp指向第一个首地址大于a的元素，或指向队列末&lt;/div&gt;
2565&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp&gt;mp && (bp-1)-&gt;m_addr+(bp-1)-&gt;m_size == a) {&lt;br/&gt;
2566&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(bp-1)-&gt;m_size =+ size; &lt;br/&gt;
&lt;div class="wikinote"&gt;[[code:mfree#举例|[1]]] 若释放块可并入bp前一元素，则合并&lt;/div&gt;
2567&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a+size == bp-&gt;m_addr) { &lt;br/&gt;
2568&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(bp-1)-&gt;m_size =+ bp-&gt;m_size; &lt;br/&gt;
2569&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (bp-&gt;m_size) { &lt;br/&gt;
2570&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp++; &lt;br/&gt;
2571&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(bp-1)-&gt;m_addr = bp-&gt;m_addr; &lt;br/&gt;
2572&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(bp-1)-&gt;m_size = bp-&gt;m_size; &lt;br/&gt;
2573&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2574&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;[[code:mfree#举例|[2]]] 若释放块可并入bp，则合并&lt;/div&gt;
2575&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {&lt;br/&gt;
2576&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a+size == bp-&gt;m_addr && bp-&gt;m_size) { &lt;br/&gt;
&lt;div class="wikinote"&gt;[[code:mfree#举例|[3]]] 若释放块可并入bp，则合并&lt;/div&gt;
2577&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;m_addr =- size; &lt;br/&gt;
2578&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;m_size =+ size; &lt;br/&gt;
2579&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if(size) do { &lt;br/&gt;
2580&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = bp-&gt;m_addr; &lt;br/&gt;
2581&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;m_addr = a; &lt;br/&gt;
2582&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = t; &lt;br/&gt;
2583&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = bp-&gt;m_size; &lt;br/&gt;
2584&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;m_size = size; &lt;br/&gt;
2585&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp++; &lt;br/&gt;
2586&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (size = t); &lt;br/&gt;
&lt;div class="wikinote"&gt;[[code:mfree#举例|[4]]] 若释放块不可并入链表，则插入链表&lt;/div&gt;
2587&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2588&nbsp;}&lt;br/&gt;
2589&nbsp;/*-----------------------  */&lt;br/&gt;
2590&lt;br/&gt;
2591&lt;br/&gt;
2592&lt;br/&gt;
2593&lt;br/&gt;
2594&lt;br/&gt;
2595&lt;br/&gt;
2596&lt;br/&gt;
2597&lt;br/&gt;
2598&lt;br/&gt;
2599&lt;br/&gt;
&lt;/div&gt;
===Extend===
=举例=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_mfree.png|frame|none|图中1、2、3、4标记对应于源代码分析中的标记"/></p>
&lt;br/&gt;
===Ref===
*[[空闲块管理]]
===Caller===
*[[code:main]]
*[[code:sched]]
*[[code:expand]]
*[[code:exit]]
*[[code:wait]]
*[[code:xswap]]
*[[code:xfree]]
*[[code:xccdec]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:mfree by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:min</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*返回 a,b 的最小值
* a,b为字节长变量
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6335&lt;br/&gt;
6336&nbsp;/* Return the logical minimum&lt;br/&gt;
6337&nbsp;&nbsp;* of the 2 arguments.&lt;br/&gt;
6338&nbsp;&nbsp;*/&lt;br/&gt;
6339&nbsp;min(a, b)&lt;br/&gt;
6340&nbsp;char *a, *b;&lt;br/&gt;
6341&nbsp;{&lt;br/&gt;
6342&lt;br/&gt;
6343&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a &lt; b)&lt;br/&gt;
6344&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(a); &lt;br/&gt;
6345&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(b);&lt;br/&gt;
6346&nbsp;}&lt;br/&gt;
6347&nbsp;/* ------------------------- */ &lt;br/&gt;
6348&lt;br/&gt;
6349&lt;br/&gt;
&lt;/div&gt;
===Caller===
*[[code:main]]
*[[code:readi]]
*[[code:writei]]
*[[code:writep]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:min by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:mknod</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*mknod 的系统调用，只能由超级用户调用
*根据参数生成 INODE(一般是特殊INODE，如 设备装载INODE)，详细参看UNIX手册
*使用3个隐式参数
**name : 文件路径名(文件实体一般不存在，只用于生成INODE)
**mode : 设置为 INODE 模式位，模式常量参看[[file:inode.h|inode.h]]
**addr : 设置为 INODE 的i_addr[0]位
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5948 &lt;br/&gt;
5949&nbsp;/* &lt;br/&gt;
5950&nbsp;&nbsp;* mknod system call &lt;br/&gt;
5951&nbsp;&nbsp;*/ &lt;br/&gt;
5952&nbsp;mknod() &lt;br/&gt;
5953&nbsp;{ &lt;br/&gt;
5954&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct inode|ip]]; &lt;br/&gt;
5955&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern uchar; &lt;br/&gt;
5956 &lt;br/&gt;
5957&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:suser|suser]]()) { &lt;br/&gt;
5958&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:namei|namei]](&[[code:uchar|uchar]], 1); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip ← 根据 name 查找INODE
&lt;/div&gt;
5959&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]] != NULL) { &lt;br/&gt;
5960&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EEXIST; &lt;br/&gt;
5961&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
5962&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 ip 已存在，抛出错误，释放ip
**[[错误代码]] : EEXIST
&lt;/div&gt;
5963&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5964&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]]) &lt;br/&gt;
5965&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 之前存在错误，则函数返回
*此处检测到的错误分为两类
**[[code:namei|namei]] 抛出的错误
**[[code:suser|suser]] 抛出的错误(当前用户并非超级用户)
&lt;/div&gt;
5966&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:maknode|maknode]]([[code:user|u.u_arg]][1]); &lt;br/&gt;
5967&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct inode|ip]]==NULL) &lt;br/&gt;
5968&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5969&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_addr[0] = [[code:user|u.u_arg]][2]; &lt;br/&gt;
5970 &lt;br/&gt;
5971&nbsp;out: &lt;br/&gt;
5972&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]); &lt;br/&gt;
5973&nbsp;} &lt;br/&gt;
5974&nbsp;/* ------------------------- */ &lt;br/&gt;
5975 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Param===
:(mknod = 14.; not in assembler)
:&lt;b&gt;sys  mknod; name; mode; addr&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:mknod by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:mmread</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*[[内存映射文件]] 的 驱动函数(读)
*[[code:user|u.u_offset]] 用于 传入物理内存地址
&lt;/div&gt;
&lt;div class="wikicode"&gt;9016&nbsp;mmread(dev) &lt;br/&gt;
9017&nbsp;{ &lt;br/&gt;
9018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register c, bn, on; &lt;br/&gt;
9019&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int a, d; &lt;br/&gt;
9020 &lt;br/&gt;
9021&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev[[skill:.d_minor|.d_minor]] == 2) &lt;br/&gt;
9022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*"无底洞" 模式，什么都读不出来...
&lt;/div&gt;
9023&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do { &lt;br/&gt;
9024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bn = [[code:lshift|lshift]]([[code:user|u.u_offset]], -6); &lt;br/&gt;
9025&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on = u.u_offset[1] & 077; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*bn ← 块号
*on ← 块内偏移
&lt;/div&gt;
9026&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = UISA[[skill:r|-&gt;r]][0]; &lt;br/&gt;
9027&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = UISD[[skill:r|-&gt;r]][0]; &lt;br/&gt;
9028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl7]](); &lt;br/&gt;
9029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][0] = bn; &lt;br/&gt;
9030&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISD[[skill:r|-&gt;r]][0] = 077406; &lt;br/&gt;
9031&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev[[skill:.d_minor|.d_minor]] == 1) &lt;br/&gt;
9032&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][0] = (ka6-6)[[skill:r|-&gt;r]][(bn&gt;&gt;7)&07] &lt;br/&gt;
9033&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ (bn & 0177); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 模式为 读取核心态内存，则将 UISA[0] 置核心态地址
&lt;/div&gt;
9034&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = [[code:fuibyte|fuibyte]](on); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以 UISA0/UISD0 寻址，第0块第on个字节
&lt;/div&gt;
9035&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][0] = a; &lt;br/&gt;
9036&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISD[[skill:r|-&gt;r]][0] = d; &lt;br/&gt;
9037&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
9038&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while([[code:user|u.u_error]]==0 && [[code:passc|passc]](c)&gt;=0); &lt;br/&gt;
9039&nbsp;} &lt;br/&gt;
9040&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:mmread by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:mmwrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*[[内存映射文件]] 的 驱动函数(写)
*[[code:user|u.u_offset]] 用于 传入物理内存地址
&lt;/div&gt;
&lt;div class="wikicode"&gt;
9041 &lt;br/&gt;
9042&nbsp;mmwrite(dev) &lt;br/&gt;
9043&nbsp;{ &lt;br/&gt;
9044&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register c, bn, on; &lt;br/&gt;
9045&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int a, d; &lt;br/&gt;
9046 &lt;br/&gt;
9047&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev[[skill:.d_minor|.d_minor]] == 2) { &lt;br/&gt;
9048&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = [[code:user|u.u_count]]; &lt;br/&gt;
9049&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = 0; &lt;br/&gt;
9050&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] =+ c; &lt;br/&gt;
9051&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]]([[code:user|u.u_offset]], c); &lt;br/&gt;
9052&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
9053&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*"无底洞"模式，只修改参数
&lt;/div&gt;
9054&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(;;) { &lt;br/&gt;
9055&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bn = [[code:lshift|lshift]]([[code:user|u.u_offset]], -6); &lt;br/&gt;
9056&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on = [[code:user|u.u_offset]][1] & 077; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*bn ← 块号
*on ← 块内偏移
&lt;/div&gt;
9057&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((c=[[code:cpass|cpass]]())&lt;0 &lt;nowiki&gt;||&lt;/nowiki&gt; [[code:user|u.u_error]]!=0) &lt;br/&gt;
9058&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
9059&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = UISA[[skill:r|-&gt;r]][0]; &lt;br/&gt;
9060&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = UISD[[skill:r|-&gt;r]][0]; &lt;br/&gt;
9061&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl7]](); &lt;br/&gt;
9062&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][0] = bn; &lt;br/&gt;
9063&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISD[[skill:r|-&gt;r]][0] = 077406; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*LIONS 源代码为 &lt;div class="wikiheadcode"&gt;9059&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = UISA[[skill:r|-&gt;r]][0] = bn; &lt;br/&gt;9060&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = UISD[[skill:r|-&gt;r]][0] = 077406; &lt;br/&gt;9061&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl7]](); &lt;br/&gt;9062&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][0]; &lt;br/&gt;9063&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISD[[skill:r|-&gt;r]][0]; &lt;br/&gt;&lt;/div&gt;疑为笔误
&lt;/div&gt;
9064&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dev[[skill:.d_minor|.d_minor]] == 1) &lt;br/&gt;
9065&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][0] = (ka6-6)[[skill:r|-&gt;r]][(bn&gt;&gt;7)&07] &lt;br/&gt;
9066&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ (bn & 0177); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 模式为 写入核心态内存，则将 UISA[0] 置核心态地址
&lt;/div&gt;
9067&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suibyte|suibyte]](on, c); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以 UISA0/UISD0 寻址，第0块第on个字节
&lt;/div&gt;
9068&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISA[[skill:r|-&gt;r]][0] = a; &lt;br/&gt;
9069&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UISD[[skill:r|-&gt;r]][0] = d; &lt;br/&gt;
9070&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
9071&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
9072&nbsp;} &lt;br/&gt;
9073 /* ------------------------- */ &lt;br/&gt;
9074 &lt;br/&gt;
9075 &lt;br/&gt;
9076 &lt;br/&gt;
9077 &lt;br/&gt;
9078 &lt;br/&gt;
9079 &lt;br/&gt;
9080 &lt;br/&gt;
9081 &lt;br/&gt;
9082 &lt;br/&gt;
9083 &lt;br/&gt;
9084 &lt;br/&gt;
9085 &lt;br/&gt;
9086 &lt;br/&gt;
9087 &lt;br/&gt;
9088 &lt;br/&gt;
9089 &lt;br/&gt;
9090 &lt;br/&gt;
9091 &lt;br/&gt;
9092 &lt;br/&gt;
9093 &lt;br/&gt;
9094 &lt;br/&gt;
9095 &lt;br/&gt;
9096 &lt;br/&gt;
9097 &lt;br/&gt;
9098 &lt;br/&gt;
9099 &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:mmwrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:namei</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*根据 文件/目录路径 返回 对应的inode(并置锁)
*共传入两个参数 func , flag
**func : 函数指针，该函数用于得到 文件路径的下一个字符，只能取一下两个函数
***[[code:uchar|uchar]]
***[[code:schar|schar]]
**flag : 标志位，参看 [[code:namei#标志位说明|标志位说明]]
*** flag = 0，查找模式
*** flag = 1，添加模式
*** flag = 2，删除模式
**返回值 : 参看 [[code:namei#标志位说明|标志位说明]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
&lt;div class="wikinote"&gt;
总体说明
*[[code:iget|iget]] 和 [[code:iput|iput]] 分别为申请和释放inode
*eo变量 用于记录第一个空闲目录项位置
*所有抛出的错误 参看 [[错误代码]]
&lt;/div&gt;
7506 &lt;br/&gt;
7507&nbsp;/* &lt;br/&gt;
7508&nbsp;&nbsp;* Convert a pathname into a pointer to &lt;br/&gt;
7509&nbsp;&nbsp;* an inode. Note that the inode is locked. &lt;br/&gt;
7510&nbsp;&nbsp;* &lt;br/&gt;
7511&nbsp;&nbsp;* func = function called to get next char of name &lt;br/&gt;
7512&nbsp;&nbsp;* &uchar if name is in user space &lt;br/&gt;
7513&nbsp;&nbsp;* &schar if name is in system space &lt;br/&gt;
7514&nbsp;&nbsp;* flag = 0 if name is sought &lt;br/&gt;
7515&nbsp;&nbsp;* 1 if name is to be created &lt;br/&gt;
7516&nbsp;&nbsp;* 2 if name is to be deleted &lt;br/&gt;
7517&nbsp;&nbsp;*/ &lt;br/&gt;
7518&nbsp;namei(func, flag) &lt;br/&gt;
7519&nbsp;int (*func)(); &lt;br/&gt;
7520&nbsp;{ &lt;br/&gt;
7521&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|struct inode]] *dp; &lt;br/&gt;
7522&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register c; &lt;br/&gt;
7523&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register char *cp; &lt;br/&gt;
7524&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int eo, *bp; &lt;br/&gt;
7525 &lt;br/&gt;
7526&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
7527&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If name starts with ’/’ start from &lt;br/&gt;
7528&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* root: otherwise start from current dir. &lt;br/&gt;
7529&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7530 &lt;br/&gt;
7531&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = [[code:user|u.u_cdir]]; &lt;br/&gt;
7532&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((c=(*func)()) == ’/’); &lt;br/&gt;
7533&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = rootdir; &lt;br/&gt;
7534&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iget|iget]](dp-&gt;i_dev, dp-&gt;i_number); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 文件路径 以 '/' 开头，则使用根目录inode
*否则，使用当前目录的inode
*[[code:iget|iget]] 在此处 由于根目录或当前目录的inode已经读入内存（常驻内存），所以不需要从磁盘读，而只是置锁
&lt;/div&gt;
7535&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(c == ’/’) &lt;br/&gt;
7536&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = (*func)(); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*诸如 "///a//b" 这样的路径也可以被解析，多余的'/'在此被屏蔽
&lt;/div&gt;
7537&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c == ’\0’ && flag != 0) { &lt;br/&gt;
7538&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENOENT; &lt;br/&gt;
7539&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
7540&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 企图对 当前目录或根目录 进行操作(如删除)，则抛出错误
*[[错误代码]]:ENOENT
&lt;/div&gt;
7541 &lt;br/&gt;
7542&nbsp;cloop: &lt;br/&gt;
7543&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
7544&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Here dp contains pointer &lt;br/&gt;
7545&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to last component matched. &lt;br/&gt;
7546&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7547 &lt;br/&gt;
7548&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]]) &lt;br/&gt;
7549&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
7550&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c == ’\0’) &lt;br/&gt;
7551&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(dp); &lt;br/&gt;

7552 &lt;br/&gt;
7553&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
7554&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If there is another component, &lt;br/&gt;
7555&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* dp must be a directory and &lt;br/&gt;
7556&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* must have x permission. &lt;br/&gt;
7557&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7558 &lt;br/&gt;
7559&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((dp-&gt;i_mode&IFMT) != IFDIR) { &lt;br/&gt;
7560&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENOTDIR; &lt;br/&gt;
7561&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
7562&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 当前元素 不是目录项，则抛出错误
**[[错误代码]]:ENOTDIR
*7559用法参考[[文件系统#inode类型|文件系统之inode类型]]
&lt;/div&gt;
7563&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:access|access]](dp, IEXEC)) &lt;br/&gt;
7564&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 当前目录项 不具有执行权限(实为查找目录的权限)，则抛出错误
&lt;/div&gt;
7565 &lt;br/&gt;
7566&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Gather up name into &lt;br/&gt;
7567&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* users’ dir buffer. &lt;br/&gt;
7568&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7569 &lt;br/&gt;
7570&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = &[[code:user|u.u_dbuf]][0]; &lt;br/&gt;
7571&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(c!=’/’ && c!=’\0’ && u.u_error==0) { &lt;br/&gt;
7572&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(cp &lt; &[[code:user|u.u_dbuf]][DIRSIZ]) &lt;br/&gt;
7573&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*cp++ = c; &lt;br/&gt;
7574&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = (*func)(); &lt;br/&gt;
7575&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7576&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(cp &lt; &[[code:user|u.u_dbuf]][DIRSIZ]) &lt;br/&gt;
7577&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*cp++ = ’\0’; &lt;br/&gt;
7578&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(c == ’/’) &lt;br/&gt;
7579&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = (*func)(); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 文件/目录名 复制到 [[code:user|u.u_dbuf]]
*文件名 多余 DIRSIZ(14)的部分将被删除
*[[code:user|u.u_dbuf]]多余部分将以'/0'充填
*7578 - 7579 修正c的位置，参看 7535-7536的注释
&lt;/div&gt;
7580&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]]) &lt;br/&gt;
7581&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
7582 &lt;br/&gt;
7583&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Set up to search a directory. */ &lt;br/&gt;
7584 &lt;br/&gt;
7585&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] = 0; &lt;br/&gt;
7586&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][0] = 0; &lt;br/&gt;
7587&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_segflg]] = 1; &lt;br/&gt;
7588&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eo = 0; &lt;br/&gt;
7589&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = [[code:ldiv|ldiv]](dp-&gt;i_size1, DIRSIZ+2); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:user|u.u_count]]置为 当前inode的目录项总数
&lt;/div&gt;
7590&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = NULL; &lt;br/&gt;
7591 &lt;br/&gt;
7592&nbsp;eloop: &lt;br/&gt;
7593 &lt;br/&gt;
7594&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
7595&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If at the end of the directory, &lt;br/&gt;
7596&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the search failed. Report what &lt;br/&gt;
7597&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* is appropriate as per flag. &lt;br/&gt;
7598&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7599 &lt;br/&gt;
7600&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_count]] == 0) { &lt;br/&gt;
7601&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bp != NULL) &lt;br/&gt;
7602&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
7603&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(flag==1 && c==’\0’) { &lt;br/&gt;
7604&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:access|access]](dp, IWRITE)) &lt;br/&gt;
7605&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
7606&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_pdir]] = dp; &lt;br/&gt;
7607&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(eo) &lt;br/&gt;
7608&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] = eo-DIRSIZ-2; else  &lt;br/&gt;
7609&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; IUPD; &lt;br/&gt;
7610&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
7611&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7612&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENOENT; &lt;br/&gt;
7613&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
7614&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若搜索完成，且没有找到匹配的目录项
**若 为添加模式 ，则执行 7603 - 7611
**否则，抛出错误,[[错误代码]]:ENOENT
*7608行的用法 参看 [[code:namei#标志位说明|标志位说明]]
*7609行 并未能理解，列入[[遗留问题]]
&lt;/div&gt;
7615 &lt;br/&gt;
7616&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
7617&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If offset is on a block boundary, &lt;br/&gt;
7618&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* read the next directory block. &lt;br/&gt;
7619&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Release previous if it exists. &lt;br/&gt;
7620&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7621 &lt;br/&gt;
7622&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:user|u.u_offset]][1]&0777) == 0) { &lt;br/&gt;
7623&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bp != NULL) &lt;br/&gt;
7624&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
7625&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]](dp-&gt;i_dev, &lt;br/&gt;
7626&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bmap|bmap]](dp, ldiv([[code:user|u.u_offset]][1], 512))); &lt;br/&gt;
7627&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 读完了当前目录项块，则读取下一个目录项块
*7626 由于 u.u_offset[1] 单位为字节，所以除以512
&lt;/div&gt;
7628 &lt;br/&gt;
7629&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Note first empty directory slot &lt;br/&gt;
7630&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* in eo for possible creat. &lt;br/&gt;
7631&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* String compare the directory entry &lt;br/&gt;
7632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* and the current component. &lt;br/&gt;
7633&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If they do not match, go back to eloop. &lt;br/&gt;
7634&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7635 &lt;br/&gt;
7636&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bcopy|bcopy]](bp-&gt;b_addr+([[code:user|u.u_offset]][1]&0777), &[[code:user|u.u_dent]], &lt;br/&gt;
&lt;div class="wikinote"&gt;
*读取下一个目录项，复制到[[code:user|u.u_dent]]
&lt;/div&gt;
7637&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(DIRSIZ+2)/2); &lt;br/&gt;
7638&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] =+ DIRSIZ+2; &lt;br/&gt;
7639&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]]--; &lt;br/&gt;
7640&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_dent.u_ino]] == 0) { &lt;br/&gt;
7641&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(eo == 0) &lt;br/&gt;
7642&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eo = [[code:user|u.u_offset]][1]; &lt;br/&gt;
7643&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto eloop; &lt;br/&gt;
7644&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若读到了空目录项(指向第0块)，则用eo标识
&lt;/div&gt;
7645&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(cp = &[[code:user|u.u_dbuf]][0]; cp &lt; &[[code:user|u.u_dbuf]][DIRSIZ]; cp++) &lt;br/&gt;
7646&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(*cp != cp[ [[code:user|u.u_dent.u_name]] - [[code:user|u.u_dbuf]] ]) &lt;br/&gt;
7647&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto eloop; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*匹配 当前目录项 和 欲查找的目录项，若不匹配，则继续循环
*7646实际比较了 cp的内容 和 与cp对应的u.u_dent.u_name数组中的内容
**[[code:user|u.u_dent.u_name]] - [[code:user|u.u_dbuf]] 的用法是 用地址偏移寻址
&lt;/div&gt;
7648 &lt;br/&gt;
7649 &lt;br/&gt;
7650&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Here a component matched is a directory. &lt;br/&gt;
7651&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If there is more pathname, go back to &lt;br/&gt;
7652&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* cloop, otherwise return. &lt;br/&gt;
7653&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7654 &lt;br/&gt;
7655&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bp != NULL) &lt;br/&gt;
7656&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
7657&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(flag==2 && c==’\0’) { &lt;br/&gt;
7658&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:access|access]](dp, IWRITE)) &lt;br/&gt;
7659&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
7660&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(dp); &lt;br/&gt;
7661&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若为删除模式，进行权限检查，并返回dp
&lt;/div&gt;
7662&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = dp-&gt;i_dev; &lt;br/&gt;
7663&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](dp); &lt;br/&gt;
7664&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = [[code:iget|iget]](bp, [[code:user|u.u_dent.u_ino]]); &lt;br/&gt;
7665&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dp == NULL) &lt;br/&gt;
7666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
7667&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto cloop; &lt;br/&gt;
7668 &lt;br/&gt;
7669&nbsp;out: &lt;br/&gt;
7670&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](dp); &lt;br/&gt;
7671&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL); &lt;br/&gt;
7672&nbsp;} &lt;br/&gt;
7673&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===

=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_namei.png"/></p>
=标志位说明=
====查找模式====
返回指向匹配inode的指针
====添加模式====
*若 要添加的目录项已经存在，则返回指向匹配inode的指针，与查找模式相同
*否则
**返回null
**[[code:user|u-pdir]]指向 新目录项欲填入 的内存inode
**u-offset指向 新目录项欲填入的位置
====删除模式====
*返回欲删除的目录项所在的内存inode(即其父目录inode)指针
*u-offset指向欲删除项的下一个位置

===Ref===
*[[文件系统]]
*[[设备缓存管理]]

===Caller===
*[[code:exec]]
*[[code:unlink]]
*[[code:chdir]]
*[[code:core]]
*[[code:open]]
*[[code:creat]]
*[[code:link]]
*[[code:mknod]]
*[[code:stat]]
*[[code:smount]]
*[[code:getmdev]]
*[[code:owner]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:namei by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nblkdev</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*定义 块设备 总数 nblkdev
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4624&nbsp;/* Nblkdev is the number of entries &lt;br/&gt;
4625&nbsp;&nbsp;* (rows) in the block switch. It is &lt;br/&gt;
4626&nbsp;&nbsp;* set in binit/bio.c by making &lt;br/&gt;
4627&nbsp;&nbsp;* a pass over the switch. &lt;br/&gt;
4628&nbsp;&nbsp;* Used in bounds checking on major &lt;br/&gt;
4629&nbsp;&nbsp;* device numbers. &lt;br/&gt;
4630&nbsp;&nbsp;*/ &lt;br/&gt;
4631&nbsp;int nblkdev; &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:getblk]]
*[[code:binit]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nblkdev by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nchrdev</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*字符设备数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4643&lt;br/&gt;
4644&nbsp;/* Number of character switch entries.&lt;br/&gt;
4645&nbsp;&nbsp;* Set by cinit/tty.c&lt;br/&gt;
4646&nbsp;&nbsp;*/&lt;br/&gt;
4647&nbsp;int nchrdev; &lt;br/&gt;
4648&lt;br/&gt;
4649&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[字符设备管理]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nchrdev by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:newproc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*为当前进程创建子进程
*父进程返回0
*子进程返回1
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1800&nbsp;#&lt;br/&gt;
1801&nbsp;/*&lt;br/&gt;
1802&nbsp;&nbsp;*/&lt;br/&gt;
1803&lt;br/&gt;
1804&nbsp;#include "../param.h"&lt;br/&gt;
1805&nbsp;#include "../user.h"&lt;br/&gt;
1806&nbsp;#include "../proc.h"&lt;br/&gt;
1807&nbsp;#include "../text.h"&lt;br/&gt;
1808&nbsp;#include "../systm.h"&lt;br/&gt;
1809&nbsp;#include "../file.h"&lt;br/&gt;
1810&nbsp;#include "../inode.h"&lt;br/&gt;
1811&nbsp;#include "../buf.h"&lt;br/&gt;
1812&nbsp;/* -------------------------     */&lt;br/&gt;
1813&nbsp;/*&lt;br/&gt;
1814&nbsp;&nbsp;* Create a new process-- the internal version of&lt;br/&gt;
1815&nbsp;&nbsp;* sys fork.&lt;br/&gt;
1816&nbsp;&nbsp;* It returns 1 in the new process.&lt;br/&gt;
1817&nbsp;&nbsp;* How this happens is rather hard to understand.&lt;br/&gt;
1820&nbsp;&nbsp;* in the same call to newproc as the parent;&lt;br/&gt;
1821&nbsp;&nbsp;* but in fact the code that runs is that of swtch.&lt;br/&gt;
1822&nbsp;&nbsp;* The subtle implication of the return value of swtch&lt;br/&gt;
1823&nbsp;&nbsp;* (see above) is that this is the value that newproc's&lt;br/&gt;
1824&nbsp;&nbsp;* caller in the new process sees.&lt;br/&gt;
1825&nbsp;&nbsp;*/&lt;br/&gt;
1826&nbsp;newproc()&lt;br/&gt;
1827&nbsp;{&lt;br/&gt;
1828&nbsp;&nbsp;&nbsp;&nbsp;int a1, a2;&lt;br/&gt;
1829&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct proc|struct proc]] *p, *up;&lt;br/&gt;
1830&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *rpp;&lt;br/&gt;
1831&nbsp;&nbsp;&nbsp;&nbsp;register *rip, n;&lt;br/&gt;
1832&lt;br/&gt;
1833&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;&lt;br/&gt;
1834&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1835&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* First, just locate a slot for a process&lt;br/&gt;
1837&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The panic "cannot happen" because fork already&lt;br/&gt;
1838&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* checked for the existence of a slot.&lt;br/&gt;
1839&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1840&nbsp;&nbsp;retry:&lt;br/&gt;
1841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mpid++;&lt;br/&gt;
1842&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(mpid &lt; 0) {&lt;br/&gt;
1843&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mpid = 0;&lt;br/&gt;
1844&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto retry;&lt;br/&gt;
1845&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*为要新建的进程分配一个独一无二的进程标识mpid
*若为负值,则循环+1,直到其不为负为止
&lt;/div&gt;
1846&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(rpp = &[[code:proc|proc]][0]; rpp &lt; &[[code:proc|proc]][NPROC]; rpp++) {&lt;br/&gt;
1847&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rpp-&gt;p_stat == NULL && p==NULL)&lt;br/&gt;
1848&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = rpp;&lt;br/&gt;
1849&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rpp-&gt;p_pid==mpid)&lt;br/&gt;
1850&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto retry;&lt;br/&gt;
1851&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
1852&nbsp;&nbsp;&nbsp;&nbsp;if ((rpp = p)==NULL)&lt;br/&gt;
1853&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("no procs");&lt;br/&gt;
1854&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:proc|proc数组]],将搜索到的第一个空位分配给新进程
**若遍历时发现有进程的标识等于要分配的标识符,则回到1840行重新分配一个新标识符
**若没能搜索到空位,则抛出错误
&lt;/div&gt;
1855&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1856&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* make proc entry for new proc&lt;br/&gt;
1857&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1858&lt;br/&gt;
1859&nbsp;&nbsp;&nbsp;&nbsp;rip = u.u_procp;&lt;br/&gt;
1860&nbsp;&nbsp;&nbsp;&nbsp;up = rip;&lt;br/&gt;
1861&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_stat = SRUN;&lt;br/&gt;
1862&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_flag = SLOAD;&lt;br/&gt;
1863&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_uid = rip-&gt;p_uid;&lt;br/&gt;
1864&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_ttyp = rip-&gt;p_ttyp;&lt;br/&gt;
1865&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_nice = rip-&gt;p_nice;&lt;br/&gt;
1866&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_textp = rip-&gt;p_textp;&lt;br/&gt;
1867&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_pid = mpid;&lt;br/&gt;
1868&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_ppid = rip-&gt;p_pid;&lt;br/&gt;
1869&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_time = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*置子进程的[[code:proc|proc结构]]中的相关信息,部分从父进程直接拷贝
*1868行有笔误,原代码为&lt;div class="wikiheadcode"&gt;rpp-&gt;p_ppid = rip-&gt;p_ppid&lt;/div&gt;
&lt;/div&gt;
1870&lt;br/&gt;
1871&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1872&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* make duplicate entries&lt;br/&gt;
1873&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* where needed&lt;br/&gt;
1874&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1875&lt;br/&gt;
1876&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(rip = &[[code:user|u]].u_ofile[0]; rip &lt; &[[code:user|u]].u_ofile[NOFILE];)&lt;br/&gt;
1877&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct file|rpp]] = *rip++) != NULL)&lt;br/&gt;
1878&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|rpp]]-&gt;f_count++;&lt;br/&gt;
1879&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rpp=up-&gt;p_textp) != NULL) {&lt;br/&gt;
1880&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rpp-&gt;x_count++;&lt;br/&gt;
1881&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rpp-&gt;x_ccount++;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*父进程的打开文件结构中的f_count加1(因为子进程继承了父进程打开的文件),参见[[内存打开文件结构]]
*父进程的[[code:text|共享正文段]]中的共享进程数加1(因为子进程继承了父进程的共享正文段,且其[[code:proc|proc]]结构中的[[code:text|textp]]指针指向该正文段)
&lt;/div&gt;
1882&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
1883&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_cdir-&gt;i_count++;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处子进程应当申请新的file引用，而不是新的inode引用，未能解释，列入[[遗留问题]]
&lt;/div&gt;
1884&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1885&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Partially simulate the environment&lt;br/&gt;
1887&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* created (by copying) it will look right.&lt;br/&gt;
1888&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1889&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:savu|savu]]([[code:user|u.u_rsav]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将R5,R6保存到[[code:user|u.u_rsav[2]]]数组中
&lt;/div&gt;
1890&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rpp = p;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*rpp指向子进程[[code:proc|proc结构]]
&lt;/div&gt;
1891&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_procp = rpp;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前进程[[code:user|u.u_procp]]指向子进程的[[code:proc|proc结构]]
*即将KISA6指向子进程的[[code:proc|proc结构]],子进程上台
&lt;/div&gt;
1892&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rip = up;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*rip指向父进程[[code:proc|proc结构]]
&lt;/div&gt;
1893&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = rip-&gt;p_size;&lt;br/&gt;
1894&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a1 = rip-&gt;p_addr;&lt;br/&gt;
1895&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rpp-&gt;p_size = n;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*n = 父进程图像大小
*a1 = 父进程的ppda区首址
*子进程图像大小置为n
&lt;/div&gt;
1896&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a2 = [[code:malloc|malloc]](coremap, n);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*在内存中为子进程分配一块大小为n的空间,并将该空间的首址赋给a2
&lt;/div&gt;
1897&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1898&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If there is not enough core for the&lt;br/&gt;
1899&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* new process, swap put the current process to&lt;br/&gt;
1900&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* generate the copy.&lt;br/&gt;
1901&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1902&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a2 == NULL) {&lt;br/&gt;
1903&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rip-&gt;p_stat = SIDL;&lt;br/&gt;
1904&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rpp-&gt;p_addr = a1;&lt;br/&gt;
1905&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:savu|savu]]([[code:user|u.u_ssav]]);&lt;br/&gt;
1906&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:xswap|xswap]](rpp, 0, 0);&lt;br/&gt;
1907&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rpp-&gt;p_flag =&lt;nowiki&gt;|&lt;/nowiki&gt; SSWAP;&lt;br/&gt;
1908&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rip-&gt;p_stat = SRUN;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若分配空间失败
**父进程置状态置为SIDL,接下来将会把父进程图像复制到盘交换区上,在此期间父进程不能被选中上台
**子进程ppda区指向父进程ppda区首址
**将R5,R6保存到[[code:user|u.u_ssav[2]]]数组中
**在盘交换区上复制一份父进程图像的副本
**子进程置SSWAP标识,恢复时直接从[[code:user|u.u_ssav[2]]]数组中恢复R5,R6
**将父进程置为就绪态,可以被调度进程选中上台
&lt;/div&gt;
1909&nbsp;&nbsp;&nbsp;&nbsp;} else {&lt;br/&gt;
1910&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
1911&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* There is core, so just copy.&lt;br/&gt;
1912&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
1913&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rpp]]-&gt;p_addr = a2;&lt;br/&gt;
1914&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(n--)&lt;br/&gt;
1915&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:copyseg|copyseg]](a1++, a2++);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若分配空间成功
**则直接将父进程的图像拷贝一份到新分配的内存空间
&lt;/div&gt;
1916&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
1917&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_procp = rip;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*恢复父进程上台
&lt;/div&gt;
1918&nbsp;&nbsp;&nbsp;&nbsp;return(0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处为父进程的返回处,返回值为0
*子进程将会在[[code:swtch|swtch]]中被选中上台后直接从[[code:swtch|swtch]]中返回,返回值为1
&lt;/div&gt;
1919&nbsp;}&lt;br/&gt;
1920&nbsp;/* ------------------------- */&lt;br/&gt;
&lt;/div&gt;
===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_newproc.png"/></p>

===Ref===
*[[进程调度#创建子进程]]
*[[进程图像]]

===Caller===
*[[code:main]]
*[[code:fork]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:newproc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nice</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*设置 现行进程的优先级
*共传入一个参数 设为t
*对普通用户，t的有效范围为 0 ~ 20
*对超级用户，t的有效范围为 -128 ~ 20
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3492&nbsp;&lt;br/&gt;
3493&nbsp;nice() &lt;br/&gt;
3494&nbsp;{ &lt;br/&gt;
3495&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register n; &lt;br/&gt;
3496&nbsp;&lt;br/&gt;
3497&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = [[skill:u.u_ar0|u.u_ar0]][R0]; &lt;br/&gt;
3498&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n &gt; 20) &lt;br/&gt;
3499&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = 20; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*修正上限
&lt;/div&gt;
3500&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n &lt; 0 && ![[code:suser|suser]]()) &lt;br/&gt;
3501&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于 普通用户 ，修正下限
&lt;/div&gt;
3502&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_procp-&gt;[[code:proc|p_nice]] = n; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置 [[进程优先级]]
&lt;/div&gt;
3503&nbsp;} &lt;br/&gt;
3504&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程优先级]]

===Param===
:(nice = 34.)
:(priority in r0)
:&lt;b&gt;sys nice&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nice by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nodev</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*错误设备函数，抛出错误
*用于设备表(如 [[code:bdevsw|bdevsw]])中 声明 错误设备函数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6561 &lt;br/&gt;
6562&nbsp;/* &lt;br/&gt;
6563&nbsp;&nbsp;* Routine which sets a user error; placed in &lt;br/&gt;
6564&nbsp;&nbsp;* illegal entries in the bdevsw and cdevsw tables. &lt;br/&gt;
6565&nbsp;&nbsp;*/ &lt;br/&gt;
6566&nbsp;nodev() &lt;br/&gt;
6567&nbsp;{ &lt;br/&gt;
6568 &lt;br/&gt;
6569&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENODEV; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*参考 [[错误代码]]
&lt;/div&gt;
6570&nbsp;} &lt;br/&gt;
6571&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:cdevsw]]
*[[code:bdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nodev by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nofault</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=概述=
*定义在 [[file:m40.s|m40.s]]
*长度为两个字节
*作为陷入处理中的错误函数指针，参看[[code:trap|trap]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nofault by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nosys</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
2851&lt;br/&gt;
2852&nbsp;/*&lt;br/&gt;
2853&nbsp;&nbsp;* nonexistent system call-- set fatal error code.&lt;br/&gt;
2854&nbsp;&nbsp;*/&lt;br/&gt;
2855&nbsp;nosys()&lt;br/&gt;
2856&nbsp;{&lt;br/&gt;
2857&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = 100;&lt;br/&gt;
2858&nbsp;}&lt;br/&gt;
2859&nbsp;/*------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[系统调用]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nosys by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:notavil</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将给定的[[code:struct buf|struct buf]]缓存管理结构 从[[自由队列]]取下，置状态为B_BUSY
*共传入一个参数 bp
*bp : 给定的[[code:struct buf|struct buf]]缓存管理结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4995 &lt;br/&gt;
4996&nbsp;/* Unlink a buffer from the available list and mark it busy. &lt;br/&gt;
4997&nbsp;&nbsp;* (internal interface) &lt;br/&gt;
4998&nbsp;&nbsp;*/ &lt;br/&gt;
4999&nbsp;notavil(bp) &lt;br/&gt;
5000&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
5001&nbsp;{ &lt;br/&gt;
5002&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp; &lt;br/&gt;
5003&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int sps; &lt;br/&gt;
5004 &lt;br/&gt;
5005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp; &lt;br/&gt;
5006&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sps = PS[[skill:integ|-&gt;integ]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[PS]]备份到sps
&lt;/div&gt;
5007&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优级设为6
&lt;/div&gt;
5008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;av_back-&gt;av_forw = rbp-&gt;av_forw; &lt;br/&gt;
5009&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;av_forw-&gt;av_back = rbp-&gt;av_back; &lt;br/&gt;
5010&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp-&gt;b_flags =&lt;nowiki&gt;| &lt;/nowiki&gt;B_BUSY; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将给定的 缓存管理结构 从[[自由队列]]取下
*置该块状态为B_BUSY
&lt;/div&gt;
5011&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS[[skill:integ|-&gt;integ]] = sps; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从sps还原[[PS]]
*还原[[PS]] 相当于 [[开中断]]
&lt;/div&gt;
5012&nbsp;} &lt;br/&gt;
5013&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:getblk]]
*[[code:bflush]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:notavil by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nseg</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*输入n
*返回 n/128 ，向上取整
*常用于 计算 指定块数所占用的内存页数，参看[[内存管理]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1767 &lt;br/&gt;
1768&nbsp;/* &lt;br/&gt;
1769&nbsp;&nbsp;* Return the arg/128 rounded up. &lt;br/&gt;
1770&nbsp;&nbsp;*/ &lt;br/&gt;
1771&nbsp;nseg(n) &lt;br/&gt;
1772&nbsp;{ &lt;br/&gt;
1773 &lt;br/&gt;
1774&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return((n+127)&gt;&gt;7); &lt;br/&gt;
1775&nbsp;} &lt;br/&gt;
1776&nbsp;/* ------------------------- */ &lt;br/&gt;
1777 &lt;br/&gt;
1778 &lt;br/&gt;
1779 &lt;br/&gt;
1780 &lt;br/&gt;
1781 &lt;br/&gt;
1782 &lt;br/&gt;
1783 &lt;br/&gt;
1784 &lt;br/&gt;
1785 &lt;br/&gt;
1786 &lt;br/&gt;
1787 &lt;br/&gt;
1788 &lt;br/&gt;
1789 &lt;br/&gt;
1790 &lt;br/&gt;
1791 &lt;br/&gt;
1792 &lt;br/&gt;
1793 &lt;br/&gt;
1794 &lt;br/&gt;
1795 &lt;br/&gt;
1796 &lt;br/&gt;
1797 &lt;br/&gt;
1798 &lt;br/&gt;
1799 &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:estabur]]
*[[code:sbreak]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nseg by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nswap</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[code:4695 ~ 4699]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nswap by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nulldev</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*空函数
*用于设备表(如 [[code:bdevsw|bdevsw]])中 声明 空设备函数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6572 &lt;br/&gt;
6573&nbsp;/* &lt;br/&gt;
6574&nbsp;&nbsp;* Null routine; placed in insignificant entries &lt;br/&gt;
6575&nbsp;&nbsp;* in the bdevsw and cdevsw tables. &lt;br/&gt;
6576&nbsp;&nbsp;*/ &lt;br/&gt;
6577&nbsp;nulldev() &lt;br/&gt;
6578&nbsp;{ &lt;br/&gt;
6579&nbsp;} &lt;br/&gt;
6580&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:cdevsw]]
*[[code:bdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nulldev by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:nullsys</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*0#系统调用 的 实现函数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2860&lt;br/&gt;
2861&nbsp;/*&lt;br/&gt;
2862&nbsp;&nbsp;* Ignored system call&lt;br/&gt;
2863&nbsp;&nbsp;*/&lt;br/&gt;
2864 nullsys()&lt;br/&gt;
2865 {&lt;br/&gt;
2866 }&lt;br/&gt;
2867 /* ------------------------- */ &lt;br/&gt;
2868 &lt;br/&gt;
2869&lt;br/&gt;
2870&lt;br/&gt;
2871&lt;br/&gt;
2872&lt;br/&gt;
2873&lt;br/&gt;
2874&lt;br/&gt;
2875&lt;br/&gt;
2876&lt;br/&gt;
2877&lt;br/&gt;
2878&lt;br/&gt;
2879&lt;br/&gt;
2880&lt;br/&gt;
2881&lt;br/&gt;
2882&lt;br/&gt;
2883&lt;br/&gt;
2884&lt;br/&gt;
2885&lt;br/&gt;
2886&lt;br/&gt;
2887&lt;br/&gt;
2888&lt;br/&gt;
2889&lt;br/&gt;
2890&lt;br/&gt;
2891&lt;br/&gt;
2892&lt;br/&gt;
2893&lt;br/&gt;
2894&lt;br/&gt;
2895&lt;br/&gt;
2896&lt;br/&gt;
2897&lt;br/&gt;
2898&lt;br/&gt;
2899&lt;br/&gt;
&lt;/div&gt;

===Param===
:(indir = 0.; not in assembler)
:&lt;b&gt;sys indir; syscall&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:nullsys by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:open</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*打开文件 的 系统调用函数
*从 用户态 传入2个参数 name, mode
**name : 文件路径
**mode : 
***0 : 读模式
***1 : 写模式
***2 : 读写模式
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5761&nbsp;&lt;br/&gt;
5762&nbsp;/* &lt;br/&gt;
5763&nbsp;&nbsp;* open system call &lt;br/&gt;
5764&nbsp;&nbsp;*/ &lt;br/&gt;
5765&nbsp;open() &lt;br/&gt;
5766&nbsp;{ &lt;br/&gt;
5767&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *ip; &lt;br/&gt;
5768&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern [[code:uchar|uchar]]; &lt;br/&gt;
5769 &lt;br/&gt;
5770&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:namei|namei]](&[[code:uchar|uchar]], 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip 指向 文件路径name 对应的 文件inode块
&lt;/div&gt;
5771&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip == NULL) &lt;br/&gt;
5772&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5773&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][1]++; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*mode ← mode + 1
*此处进行了参数修正，因为 对外的常量定义 mode，与对内的常量定义 FREAD,FWRITE 不一致
*FREAD,FWRITE的定义，参看[[file:file.h|file.h]]
&lt;/div&gt;
5774&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:open1|open1]](ip, [[code:user|u.u_arg]][1], 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*工作交由 [[code:open1|open1]] 统一处理
&lt;/div&gt;
5775&nbsp;} &lt;br/&gt;
5776&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存打开文件结构]]
*[[文件系统]]

===Param===
:(open = 5.)
:&lt;b&gt;sys open; name; mode&lt;/b&gt;
:(file descriptor in r0)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:open by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:open1</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*由 [[code:open|open]] [[code:creat|creat]] 调用，为这两个函数的公共函数
*共传入3个参数 ip,mode,trf
** ip : 指向文件的INODE块
** mode : 读/写模式
***FREAD : 读模式
***FWRITE : 写模式
**trf : 这是一个特殊的参数，标志这个函数被调用的位置
*** 0 : 由[[code:open|open]]调用
*** 1 : 由[[code:creat|creat]] 5795调用，
*** 2 : 由[[code:creat|creat]] 5793调用， 
&lt;/div&gt;
&lt;div class="wikicode"&gt;
&lt;div class="wikinote"&gt;
*这个函数 是从 [[code:open|open]] [[code:creat|creat]] 公共部分抽取而来，为了减少冗余&lt;br/&gt;但是不是很好理解，因为功能很难说明&lt;br/&gt;并且有很重的修改痕迹，对此LIONS代码分析中也提出了相近的评论
&lt;/div&gt;
5798 &lt;br/&gt;
5799&nbsp;/* &lt;br/&gt;
5800&nbsp;&nbsp;* common code for open and creat. &lt;br/&gt;
5801&nbsp;&nbsp;* Check permissions, allocate an open file structure, &lt;br/&gt;
5802&nbsp;&nbsp;* and call the device open routine if any. &lt;br/&gt;
5803&nbsp;&nbsp;*/ &lt;br/&gt;
5804&nbsp;open1(ip, mode, trf) &lt;br/&gt;
5805&nbsp;int *ip; &lt;br/&gt;
5806&nbsp;{ &lt;br/&gt;
5807&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct file|struct file]] *[[code:struct file|fp]]; &lt;br/&gt;
5808&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct inode|rip]], m; &lt;br/&gt;
5809&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i; &lt;br/&gt;
5810 &lt;br/&gt;
5811&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|rip]] = ip; &lt;br/&gt;
5812&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m = mode; &lt;br/&gt;
5813&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(trf != 2) { &lt;br/&gt;
5814&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(m&FREAD) &lt;br/&gt;
5815&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:access|access]]([[code:struct inode|rip]], IREAD); &lt;br/&gt;
5816&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(m&FWRITE) { &lt;br/&gt;
5817&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:access|access]]([[code:struct inode|rip]], IWRITE); &lt;br/&gt;
5818&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct inode|rip]]-&gt;i_mode&IFMT) == IFDIR) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处技巧，参看[[文件系统#inode类型|文件系统之inode类型]]
&lt;/div&gt;
5819&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EISDIR; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[错误代码]] : EISDIR
&lt;/div&gt;
5820&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5821&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5822&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]]) &lt;br/&gt;
5823&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处若检到错误，是
**由[[code:access|access]]抛出
**由5819抛出
&lt;/div&gt;
5824&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(trf) &lt;br/&gt;
5825&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:itrunc|itrunc]]([[code:struct inode|rip]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*LIONS 代码分析 在此提出将测试条件改为 trf==1，会改变性能
*个人认为 LIONS代码分析 出现了错误，应当与5794行([[code:creat|creat]])笔误有关
&lt;/div&gt;
5826&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]]([[code:struct inode|rip]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处解锁 ip
*加锁位置 在 调用[[code:open1|open1]]前，获取ip的[[code:namei|namei]] / [[code:maknode|maknode]]置锁
&lt;/div&gt;
5827&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:struct file|fp]] = [[code:falloc|falloc]]()) == NULL) &lt;br/&gt;
5828&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:falloc|falloc]] 中 置u.u_ar0[R0]，将在5831使用
&lt;/div&gt;
5829&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]]-&gt;f_flag = m&(FREAD&lt;nowiki&gt;|&lt;/nowiki&gt;FWRITE); &lt;br/&gt;
5830&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]]-&gt;f_inode = [[code:struct inode|rip]]; &lt;br/&gt;
5831&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = u.u_ar0[R0]; &lt;br/&gt;
5832&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:openi|openi]]([[code:struct inode|rip]], m&FWRITE); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此句意图不明，列入[[遗留问题]]
&lt;/div&gt;
5833&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]] == 0) &lt;br/&gt;
5834&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5835&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ofile]][i] = NULL; &lt;br/&gt;
5836&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]]-&gt;f_count--; &lt;br/&gt;
5837 &lt;br/&gt;
5838&nbsp;out: &lt;br/&gt;
5839&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|rip]]); &lt;br/&gt;
5840&nbsp;} &lt;br/&gt;
5841&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_open1.png"/></p>

===Ref===
*[[内存打开文件结构]]
*[[文件系统]]

===Caller===
*[[code:open]]
*[[code:creat]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:open1 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:openi</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*"打开" 指定INODE
**对于 普通INODE，不做操作
**对于 设备装载INODE，打开设备(d_open())
*参考 [[文件系统#装载文件系统]]
*传入2个参数
**ip : 指向指定的INODE
**rw : 读写模式，模式常量参看[[file:file.h|file.h]]
***读写模式只在调用 d_open()时使用，含义不明，列入[[遗留问题]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6694 &lt;br/&gt;
6695&nbsp;/* &lt;br/&gt;
6696&nbsp;&nbsp;* openi called to allow handler &lt;br/&gt;
6697&nbsp;&nbsp;* of special files to initialize and &lt;br/&gt;
6698&nbsp;&nbsp;* validate before actual IO. &lt;br/&gt;
6699&nbsp;&nbsp;* Called on all sorts of opens &lt;br/&gt;
6700&nbsp;&nbsp;* and also on mount. &lt;br/&gt;
6701&nbsp;&nbsp;*/ &lt;br/&gt;
6702&nbsp;openi(ip, rw) &lt;br/&gt;
6703&nbsp;int *ip; &lt;br/&gt;
6704&nbsp;{ &lt;br/&gt;
6705&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rip; &lt;br/&gt;
6706&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register dev, maj; &lt;br/&gt;
6707 &lt;br/&gt;
6708&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|rip]] = ip; &lt;br/&gt;
6709&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dev = [[code:struct inode|rip]]-&gt;i_addr[0]; &lt;br/&gt;
6710&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maj = [[code:struct inode|rip]]-&gt;i_addr[0][[skill:.d_major|.d_major]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*dev ← 设备号
*maj ← 主设备号
*参看[[文件系统#装载文件系统]]
&lt;/div&gt;
6711&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch([[code:struct inode|rip]]-&gt;i_mode&IFMT) { &lt;br/&gt;
6712 &lt;br/&gt;
6713&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case IFCHR: &lt;br/&gt;
6714&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(maj &gt;= nchrdev) &lt;br/&gt;
6715&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
6716&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:cdevsw|cdevsw]][maj].d_open)(dev, rw); &lt;br/&gt;
6717&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
6718 &lt;br/&gt;
6719&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case IFBLK: &lt;br/&gt;
6720&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(maj &gt;= nblkdev) &lt;br/&gt;
6721&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad; &lt;br/&gt;
6722&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][maj].d_open)(dev, rw); &lt;br/&gt;
6723&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*打开相应设备
*6711 的用法 参看 [[文件系统#inode类型]]
&lt;/div&gt;
6724&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6725 &lt;br/&gt;
6726&nbsp;bad: &lt;br/&gt;
6727&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENXIO; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 主设备号越界，抛出错误
**[[错误代码]] : ENXIO
&lt;/div&gt;
6728&nbsp;} &lt;br/&gt;
6729&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统]]

===Caller===
*[[code:open1]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:openi by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:owner</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*根据给定的路径名找到一个inode
**路径名 由 [[code:user|u.u_dirp]] 指向
*判断当前用户是否为该inode对应的文件拥有者,参看[[权限管理]]
*返回
**返回为空:
***该路径名无法找到对应inode
***当前用户不是该inode对应的文件拥有者
***当前用户不是超级用户
**返回得到的inode:
***当前用户为该inode对应的文件拥有者
***当前用户是超级用户
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6782&lt;br/&gt;
6783&nbsp;&nbsp;/*&lt;br/&gt;
6784&nbsp;&nbsp;* Look up a pathname and test if&lt;br/&gt;
6785&nbsp;&nbsp;* the resultant inode is owned by the&lt;br/&gt;
6786&nbsp;&nbsp;* current user.&lt;br/&gt;
6787&nbsp;&nbsp;* If not, try for super-user.&lt;br/&gt;
6788&nbsp;&nbsp;* If permission is granted,&lt;br/&gt;
6789&nbsp;&nbsp;* return inode pointer.&lt;br/&gt;
6790&nbsp;&nbsp;*/&lt;br/&gt;
6791&nbsp;&nbsp;owner()&lt;br/&gt;
6792&nbsp;&nbsp;{&lt;br/&gt;
6793&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|struct inode]] *ip;&lt;br/&gt;
6794&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern [[code:uchar|uchar]]();&lt;br/&gt;
6795&lt;br/&gt;
6796&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((ip = [[code:namei|namei]]([[code:uchar|uchar]], 0)) == NULL)&lt;br/&gt;
6797&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*获取路径名对应的inode,并赋给ip
*若获取失败,返回空
&lt;/div&gt;
6798&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_uid]] == [[code:struct inode|ip]]-&gt;i_uid)&lt;br/&gt;
6799&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果当前用户为文件拥有者,返回ip
&lt;/div&gt;
6800&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:suser|suser]]())&lt;br/&gt;
6801&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果当前用户为超级用户,返回ip
&lt;/div&gt;
6802&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](ip);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果当前用户既非文件拥有者又非超级用户,释放[[code:struct inode|ip]]
&lt;/div&gt;
6803&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL);&lt;br/&gt;
6804&nbsp;&nbsp;}&lt;br/&gt;
6805&nbsp;&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:chmod]]
*[[code:chown]]
*[[code:smdate]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:owner by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:panic</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统发生了 不可恢复的错误，调用此函数进行处理
*共输入1个参数 s
**s : 错误信息
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2409 &lt;br/&gt;
2410&nbsp;/* &lt;br/&gt;
2411&nbsp;&nbsp;* Panic is called on unresolvable &lt;br/&gt;
2412&nbsp;&nbsp;* fatal errors. &lt;br/&gt;
2413&nbsp;&nbsp;* It syncs, prints "panic: mesg" and &lt;br/&gt;
2414&nbsp;&nbsp;* then loops. &lt;br/&gt;
2415&nbsp;&nbsp;*/ &lt;br/&gt;
2416&nbsp;panic(s) &lt;br/&gt;
2417&nbsp;char *s; &lt;br/&gt;
2418&nbsp;{ &lt;br/&gt;
2419&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;panicstr = s; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*保存错误信息 到 panicstr
*panicstr 定义在 [[file:prf.c|prf.c]]
&lt;/div&gt;
2420&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:update|update]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 读入内存的信息 写回 磁盘
&lt;/div&gt;
2421&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("panic: %s<br/>\n", s); &lt;br/&gt;
2422&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(;;) &lt;br/&gt;
2423&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:idle|idle]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*等待 管理员 干预
&lt;/div&gt;
2424&nbsp;} &lt;br/&gt;
2425&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:main]]
*[[code:newproc]]
*[[code:sched]]
*[[code:trap]]
*[[code:exit]]
*[[code:unlink]]
*[[code:xswap]]
*[[code:xalloc]]
*[[code:getblk]]
*[[code:iinit]]
*[[code:getfs]]
*[[code:iget]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:panic by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:passc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*向 指定地址空间 的 指定地址 写入字节
*修改 u_base,u_count,u_offset ，参看[[code:user|user]]
*输入参数
** 地址空间 由 [[code:user|u.u_segflg]]指明
** 指定地址 由 [[code:user|u.u_base]] 提供
** c : 欲写入字节
*返回值
**若出错，则返回-1
**若u.u_count==0(写入任务完成)，则返回-1
**否则，返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6510&nbsp;&lt;br/&gt;
6511&nbsp;/* Pass back  c  to the user at his location u_base; &lt;br/&gt;
6512&nbsp;&nbsp;* update u_base, u_count, and u_offset.  Return -1 &lt;br/&gt;
6513&nbsp;&nbsp;* on the last character of the user’s read. &lt;br/&gt;
6514&nbsp;&nbsp;* u_base is in the user address space unless u_segflg &lt;br/&gt;
6515&nbsp;&nbsp;* is set. &lt;br/&gt;
6516&nbsp;&nbsp;*/ &lt;br/&gt;
6517&nbsp;passc(c) &lt;br/&gt;
6518&nbsp;char c; &lt;br/&gt;
6519&nbsp;{ &lt;br/&gt;
6520 &lt;br/&gt;
6521&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_segflg]]) &lt;br/&gt;
6522&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*[[code:user|u.u_base]] =c; else &lt;br/&gt;
6523&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:subyte|subyte]]([[code:user|u.u_base]], c) &lt; 0) { &lt;br/&gt;
6524&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EFAULT; &lt;br/&gt;
6525&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(-1); &lt;br/&gt;
6526&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
* 若 目标地址空间 为 [[核心态]]地址空间，则直接向目标地址写入字节
* 若 目标地址空间 为 [[用户态]]地址空间，则调用[[code:subyte|subyte]] 向目标地址写入字节
**若出错
***抛出错误，[[错误代码]]为EFAULT
***返回-1
&lt;/div&gt;
6527&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]]--; &lt;br/&gt;
6528&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(++[[code:user|u.u_offset]][1] == 0) &lt;br/&gt;
6529&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][0]++; &lt;br/&gt;
6530&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]]++; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*修改相应参数
**[[code:user|u.u_count]]
**[[code:user|u.u_offset]]
**[[code:user|u.u_base]]
*参看[[code:user|user]]
&lt;/div&gt;
6531&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return([[code:user|u.u_count]] == 0? -1: 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若u.u_count==0(写入任务完成)，则返回-1
*否则，返回0
&lt;/div&gt;
6532&nbsp;} &lt;br/&gt;
6533&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:iomove]]
*[[code:ttread]]
*[[code:mmread]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:passc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:pcclose</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*pc设备的驱动函数
*此处不予深入讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:pcclose by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:pcopen</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*pc设备的驱动函数
*此处不予深入讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:pcopen by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:pcread</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*pc设备的驱动函数
*此处不予深入讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:pcread by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:pcwrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*pc设备的驱动函数
*此处不予深入讨论</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:pcwrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:physio</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*用于处理"原始"输入/输出操作,即跳过缓存机制,直接在内存与磁盘中进行数据传输
*传入4个参数:
**start : 设备处理I/O请求的函数
**abp : "特殊缓存块",设备专用于"原始"输入/输出操作的缓存块
**dev : 设备号
**rw : 读/写标志位
*隐式调用的参数:
**[[code:user|u.u_base]]:I/O的内存起始地址
**[[code:user|u.u_offset]]:I/O的磁盘起始地址
**[[code:user|u.u_count]]:I/O的字节数
**[[code:user|u.u_sep]]:指令空间与用户空间是否分开
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5248&lt;br/&gt;
5249&nbsp;/*&lt;br/&gt;
5250&nbsp;&nbsp;* Raw I/O. The arguments are&lt;br/&gt;
5251&nbsp;&nbsp;* The strategy routine for the device&lt;br/&gt;
5252&nbsp;&nbsp;* A buffer, which will always be a special buffer&lt;br/&gt;
5253&nbsp;&nbsp;*   header owned exclusively by the device for this purpose&lt;br/&gt;
5254&nbsp;&nbsp;* The device number&lt;br/&gt;
5255&nbsp;&nbsp;* Read/write flag&lt;br/&gt;
5256&nbsp;&nbsp;* Essentially all the work is computing physical addresses&lt;br/&gt;
5257&nbsp;&nbsp;* and validating them.&lt;br/&gt;
5258&nbsp;&nbsp;*/&lt;br/&gt;
5259&nbsp;physio(strat, abp, dev, rw)&lt;br/&gt;
5260&nbsp;struct buf *abp;&lt;br/&gt;
5261&nbsp;int (*strat)();&lt;br/&gt;
5262&nbsp;{&lt;br/&gt;
5263&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *bp;&lt;br/&gt;
5264&nbsp;&nbsp;&nbsp;&nbsp;register char *base;&lt;br/&gt;
5265&nbsp;&nbsp;&nbsp;&nbsp;register int nb;&lt;br/&gt;
5266&nbsp;&nbsp;&nbsp;&nbsp;int ts;&lt;br/&gt;
5267&lt;br/&gt;
5268&nbsp;&nbsp;&nbsp;&nbsp;bp = abp;&lt;br/&gt;
5269&nbsp;&nbsp;&nbsp;&nbsp;base = [[code:user|u.u_base]];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*base置为I/O传输的内存首地址
&lt;/div&gt;
5270&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
5271&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Check odd base, odd count, and address wraparound&lt;br/&gt;
5272&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
5273&nbsp;&nbsp;&nbsp;&nbsp;if (base&01 &lt;nowiki&gt;||&lt;/nowiki&gt; [[code:user|u.u_count]]&01 &lt;nowiki&gt;||&lt;/nowiki&gt; base &gt;= base+[[code:user|u.u_count]])&lt;br/&gt;
5274&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若内存起始地址是奇地址(即不是一个字的首地址),或要传输的字节为奇字节,或要传输的字节数不为正
**进行出错处理
&lt;/div&gt;
5275&nbsp;&nbsp;&nbsp;&nbsp;ts = ([[code:user|u.u_tsize]]+127) & ~0177;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*ts置为共享正文段最后一页的下一页的首块块号(即数据段第一页的首块号)
*参看[[Pdp11:内存管理]]
&lt;/div&gt;
5276&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:user|u.u_sep]])&lt;br/&gt;
5277&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ts = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*检查指令区和数据区是否分开,对于pdp11/40,u.u_sep恒为0
&lt;/div&gt;
5278&nbsp;&nbsp;&nbsp;&nbsp;nb = (base&gt;&gt;6) & 01777;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*nb = I/O传输的内存起始块号
&lt;/div&gt;
5279&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
5280&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Check overlap with text. (ts and nb now&lt;br/&gt;
5281&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* in 64-byte clicks)&lt;br/&gt;
5282&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
5283&nbsp;&nbsp;&nbsp;&nbsp;if (nb &lt; ts)&lt;br/&gt;
5284&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若内存起始块号在正文段范围之内,进行出错处理
&lt;/div&gt;
5285&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
5286&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Check that transfer is either entirely in the&lt;br/&gt;
5287&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* data or in the stack: that is, either&lt;br/&gt;
5288&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the end is in the data or the start is in the stack&lt;br/&gt;
5289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (remember wraparound was already checked).&lt;br/&gt;
5290&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
5291&nbsp;&nbsp;&nbsp;if ((((base+[[code:user|u.u_count]])&gt;&gt;6)&01777) &gt;= ts+[[code:user|u.u_dsize]]&lt;br/&gt;
5292&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&& nb &lt; 1024-[[code:user|u.u_ssize]])&lt;br/&gt;
5293&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bad;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果要传输的内容横跨数据段和代码段
**进行出错处理
&lt;/div&gt;
5294&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下是对"特殊缓存块"的处理,为保持临界资源互斥,故需[[关中断]]
&lt;/div&gt;
5295&nbsp;&nbsp;&nbsp;&nbsp;while ([[code:struct buf|bp-&gt;b_flags]]&B_BUSY) {&lt;br/&gt;
5296&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_flags]] =&lt;nowiki&gt;|&lt;/nowiki&gt; B_WANTED;&lt;br/&gt;
5297&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](bp, PRIBIO);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若"特殊缓存块"当前被占用,置B_WANTED标志
*进程睡眠
**[[睡眠原因]]:[[code:struct buf|struct buf]]
**[[睡眠优先级]]:PRIBIO
&lt;/div&gt;
5298&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
5299&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_flags]] = B_BUSY &lt;nowiki&gt;|&lt;/nowiki&gt; B_PHYS &lt;nowiki&gt;|&lt;/nowiki&gt; rw;&lt;br/&gt;
5300&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_dev]] = dev;&lt;br/&gt;
5301&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
5302&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Compute physical address by simulating&lt;br/&gt;
5303&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the segmentation hardware.&lt;br/&gt;
5304&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
5305&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_addr]] = base&077;&lt;br/&gt;
5306&nbsp;&nbsp;&nbsp;&nbsp;base = (u.u_sep? UDSA: UISA)-&gt;r[nb&gt;&gt;7] + (nb&0177);&lt;br/&gt;
5307&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_addr]] =+ base&lt;&lt;6;&lt;br/&gt;
5308&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_xmem]] = (base&gt;&gt;10) & 077;&lt;br/&gt;
5309&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_blkno]] = lshift(u.u_offset, -9);&lt;br/&gt;
5310&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_wcount]] = -(([[code:user|u.u_count]]&gt;&gt;1) & 077777);&lt;br/&gt;
5311&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_error]] = 0;&lt;br/&gt;
5312&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_flag =&lt;nowiki&gt;|&lt;/nowiki&gt; SLOCK;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对"特殊缓存块"进行相关赋值,并在最后将当前进程置SLOCK标志
&lt;/div&gt;
5313&nbsp;&nbsp;&nbsp;&nbsp;(*strat)(bp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*启动设备I/O处理函数
&lt;/div&gt;
5314&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]],原因同上
&lt;/div&gt;
5315&nbsp;&nbsp;&nbsp;&nbsp;while (([[code:struct buf|bp-&gt;b_flags]]&B_DONE) == 0)&lt;br/&gt;
5316&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](bp, PRIBIO);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若"特殊缓存块"I/O尚未完成
*进程睡眠
**[[睡眠原因]]:[[code:struct buf|struct buf]]
**[[睡眠优先级]]:PRIBIO
&lt;/div&gt;
5317&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_flag =& ~SLOCK;&lt;br/&gt;
5318&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct buf|bp-&gt;b_flags]]&B_WANTED)&lt;br/&gt;
5319&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](bp);&lt;br/&gt;
5320&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]]();&lt;br/&gt;
5321&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|bp-&gt;b_flags]] =& ~(B_BUSY&lt;nowiki&gt;|&lt;/nowiki&gt;B_WANTED);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*待"特殊缓存块"I/O结束后,判断是否有B_WANTED标志
**若有,则唤醒睡眠在"特殊缓存块"上的进程
*[[开中断]]
*清B_BUSY与B_WANTED标志
&lt;/div&gt;
5322&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = (-[[code:struct buf|bp-&gt;b_resid]])&lt;&lt;1;&lt;br/&gt;
5323&nbsp;&nbsp;&nbsp;&nbsp;[[code:geterror|geterror]](bp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*I/O过程中的出错处理
**将未能传输的字数赋给[[code:user|u.u_count]]
**对错误进行相关处理
&lt;/div&gt;
5324&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
5325&nbsp;bad:&lt;br/&gt;
5326&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EFAULT;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*出错处理
*[[错误代码]]:EFAULT
&lt;/div&gt;
5327&nbsp;}&lt;br/&gt;
5328&nbsp;/* -------------------------   */&lt;br/&gt;
&lt;/div&gt;
|ref =
*[[字符设备管理]]
*[[设备缓存管理]]

===Caller===
*[[code:rkread]]
*[[code:rkwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:physio by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:pipe</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统调用 p[[code:struct inode|ip]]e 的入口
*申请管道结构(参看[[管道]])
**一个磁盘INODE
**一个文件结构 和 一个文件打开结构，用于 读
**一个文件结构 和 一个文件打开结构，用于 写
*输入/输出
**输入两个参数 ，设为 fd[0] fd[1]，这两个参数用于输出
**fd[0] : 返回 用于读的文件打开结构的描述符
**fd[1] : 返回 用于写的文件打开结构的描述符
**参看[[管道|管道生成时的数据结构]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7716&nbsp;&lt;br/&gt;
7717&nbsp;/* The sys-p[[code:struct inode|ip]]e entry. &lt;br/&gt;
7718&nbsp;&nbsp;* Allocate an inode on the root device. &lt;br/&gt;
7719&nbsp;&nbsp;* Allocate 2 file structures. &lt;br/&gt;
7720&nbsp;&nbsp;* Put it all together with flags. &lt;br/&gt;
7721&nbsp;&nbsp;*/ &lt;br/&gt;
7722 &lt;br/&gt;
7723&nbsp;p[[code:struct inode|ip]]e() &lt;br/&gt;
7724&nbsp;{ &lt;br/&gt;
7725&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct inode|ip]], *[[code:struct file|rf]], *[[code:struct file|wf]]; &lt;br/&gt;
7726&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int r; &lt;br/&gt;
7727 &lt;br/&gt;
7728&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:ialloc|ialloc]]([[code:rootdev|rootdev]]); &lt;br/&gt;
7729&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]] == NULL) &lt;br/&gt;
7730&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*申请 磁盘INODE块，[[code:struct inode|ip]]
*若失败，函数直接返回
&lt;/div&gt;
7731&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|rf]] = [[code:falloc|falloc]](); &lt;br/&gt;
7732&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|rf]] == NULL) { &lt;br/&gt;
7733&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:[[code:struct inode|ip]]ut|[[code:struct inode|ip]]ut]]([[code:struct inode|ip]]); &lt;br/&gt;
7734&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
7735&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*申请 一个文件结构[[code:struct file|rf]] 和 一个文件打开结构[[code:user|u.u_ofile[i]]],用于读管道
**[[code:falloc|falloc]] 中 置 [[skill:u.u_ar0|u.u_ar0[R0]]] 为 i&lt;br/&gt;其中[[code:user|u.u_ofile[i]]]将指向申请的文件打开结构(7749)
*若失败，释放[[code:struct inode|ip]]，函数返回
&lt;/div&gt;
7736&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r = [[Skill:u.u ar0|u.u ar0]][R0]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*由于7737 [[code:falloc|falloc]] 会改变 [[skill:u.u_ar0|u.u_ar0[R0]]]&lt;br/&gt;用r保护[[skill:u.u_ar0|u.u_ar0[R0]]]
&lt;/div&gt;
7737&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|wf]] = [[code:falloc|falloc]](); &lt;br/&gt;
7738&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|wf]] == NULL) { &lt;br/&gt;
7739&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|rf]]-&gt;f_count = 0; &lt;br/&gt;
7740&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ofile]][r] = NULL; &lt;br/&gt;
7741&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:[[code:struct inode|ip]]ut|[[code:struct inode|ip]]ut]]([[code:struct inode|ip]]); &lt;br/&gt;
7742&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
7743&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*申请 一个文件结构[[code:struct file|wf]] 和 一个文件打开结构[[code:user|u.u_ofile[i]]],用于写管道
**[[code:falloc|falloc]] 中 置 [[skill:u.u_ar0|u.u_ar0[R0]]] 为 i&lt;br/&gt;其中[[code:user|u.u_ofile[i]]]将指向申请的文件打开结构(7747)
*若失败
**释放用于读的文件结构和文件打开结构
**释放[[code:struct inode|ip]]
**函数返回
&lt;/div&gt;
7744&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Skill:u.u ar0|u.u ar0]][R1] = [[Skill:u.u ar0|u.u ar0]][R0]; &lt;br/&gt;
7745&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[Skill:u.u ar0|u.u ar0]][R0] = r; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将参数置为 
**[[Skill:u.u ar0|u.u ar0]][R0] : 用于读的文件打开结构的描述符
**[[Skill:u.u ar0|u.u ar0]][R1] : 用于写的文件打开结构的描述符

&lt;/div&gt;
7746&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|wf]]-&gt;f_flag = &lt;nowiki&gt;FWRITE|FP[[code:struct inode|ip]]E;&lt;/nowiki&gt; &lt;br/&gt;
7747&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|wf]]-&gt;f_inode = [[code:struct inode|ip]]; &lt;br/&gt;
7748&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|rf]]-&gt;f_flag = &lt;nowiki&gt;FREAD|FP[[code:struct inode|ip]]E; &lt;/nowiki&gt;&lt;br/&gt;
7749&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|rf]]-&gt;f_inode = [[code:struct inode|ip]]; &lt;br/&gt;
7750&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_count = 2; &lt;br/&gt;
7751&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag = &lt;nowiki&gt;IACC|IUPD;&lt;/nowiki&gt; &lt;br/&gt;
7752&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_mode = IALLOC; &lt;br/&gt;
7753&nbsp;} &lt;br/&gt;
7754 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[管道]]

===Param===
:(pipe = 42.)
:&lt;b&gt;sys pipe&lt;/b&gt;
:(read file descriptor in r0)
:(write file descriptor in r1)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:pipe by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:plock</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 一个管道结构([[code:struct inode|struct inode]]) 置锁
*若已锁，则 进程睡眠等待
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7857&nbsp;&lt;br/&gt;
7858&nbsp;/* Lock a pipe. &lt;br/&gt;
7859&nbsp;&nbsp;* If its already locked, &lt;br/&gt;
7860&nbsp;&nbsp;* set the WANT bit and sleep. &lt;br/&gt;
7861&nbsp;&nbsp;*/ &lt;br/&gt;
7862&nbsp;plock(ip) &lt;br/&gt;
7863&nbsp;int *ip; &lt;br/&gt;
7864&nbsp;{ &lt;br/&gt;
7865&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp; &lt;br/&gt;
7866 &lt;br/&gt;
7867&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = ip; &lt;br/&gt;
7868&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(rp-&gt;i_flag&ILOCK) { &lt;br/&gt;
7869&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; IWANT; &lt;br/&gt;
7870&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](rp, PPIPE); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[睡眠原因]] : struct inode
*[[睡眠优先级]] : PPIPE
&lt;/div&gt;
7871&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7872&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; ILOCK; &lt;br/&gt;
7873 } &lt;br/&gt;
7874 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[管道]]

===Caller===
*[[code:readp]]
*[[code:writep]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:plock by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:prdev</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*输出 设备错误
*共传入两个参数 str,dev
**str : 错误字串
**dev : 发出错误的设备
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2426 &lt;br/&gt;
2427&nbsp;/* &lt;br/&gt;
2428&nbsp;&nbsp;* prdev prints a warning message of the &lt;br/&gt;
2429&nbsp;&nbsp;* form "mesg on dev x/y". &lt;br/&gt;
2430&nbsp;&nbsp;* x and y are the major and minor parts of &lt;br/&gt;
2431&nbsp;&nbsp;* the device argument. &lt;br/&gt;
2432&nbsp;&nbsp;*/ &lt;br/&gt;
2433&nbsp;prdev(str, dev) &lt;br/&gt;
2434&nbsp;{ &lt;br/&gt;
2435 &lt;br/&gt;
2436&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("%s on dev %l/%l<br/>\n", str, dev[[skill:.d_major|.d_major]], dev[[skill:.d_minor|.d_minor]]); &lt;br/&gt;
2437&nbsp;} &lt;br/&gt;
2438&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:deverror]]
*[[code:alloc]]
*[[code:badblock]]
*[[code:ialloc]]
*[[code:getfs]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:prdev by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:prele</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*解锁 一个INODE结构 / pipe结构
*共传入一个参数 ip
**ip : 指向 [[code:struct inode|struct inode]]结构 的指针
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7875 &lt;br/&gt;
7876&nbsp;/* Unlock a pipe. &lt;br/&gt;
7877&nbsp;&nbsp;* If WANT bit is on, &lt;br/&gt;
7878&nbsp;&nbsp;* wakeup. &lt;br/&gt;
7879&nbsp;&nbsp;* This routine is also used &lt;br/&gt;
7880&nbsp;&nbsp;* to ulock inodes in general. &lt;br/&gt;
7881&nbsp;&nbsp;*/ &lt;br/&gt;
7882&nbsp;prele(ip) &lt;br/&gt;
7883&nbsp;int *ip; &lt;br/&gt;
7884&nbsp;{ &lt;br/&gt;
7885&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp; &lt;br/&gt;
7886 &lt;br/&gt;
7887&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = ip; &lt;br/&gt;
7888&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_flag =& ~ILOCK; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清除锁标志
&lt;/div&gt;
7889&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;i_flag&IWANT) { &lt;br/&gt;
7890&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_flag =& ~IWANT; &lt;br/&gt;
7891&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](rp); &lt;br/&gt;
7892&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果有进程在等待该INODE，则
**清除IWANT标志
**唤醒因等待该块而睡眠的进程
**参看[[睡眠原因#struct inode|睡眠原因]]
&lt;/div&gt;
7893&nbsp;} &lt;br/&gt;
7894&nbsp;/* ------------------------- */ &lt;br/&gt;
7895 &lt;br/&gt;
7896 &lt;br/&gt;
7897 &lt;br/&gt;
7898 &lt;br/&gt;
7899 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]
*[[管道]]

===Caller===
*[[code:unlink]]
*[[code:chdir]]
*[[code:open1]]
*[[code:smount]]
*[[code:update]]
*[[code:iput]]
*[[code:readp]]
*[[code:writep]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:prele by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:printf</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*类似于C中的printf函数，按指定格式输出内容
*共传入两个参数：fmt 和 x1 (其他参数未调用)
* fmt : 格式串，格式保留字包括 %s %l %d(=%l) %o
* &x1 : 数据指针
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2329&lt;br/&gt;
2330 /*&lt;br/&gt;
2331 &nbsp;* Scaled down version of C library printf.&lt;br/&gt;
2332 &nbsp;* Only %s %l %d (==%l) %o are recognized.&lt;br/&gt;
2333 &nbsp;* Used to print diagnostic information&lt;br/&gt;
2334 &nbsp;* directly on console tty.&lt;br/&gt;
2335 &nbsp;* Since it is not interrupt driven,&lt;br/&gt;
2336 &nbsp;* all system activities are pretty much&lt;br/&gt;
2337 &nbsp;* suspended.&lt;br/&gt;
2338 &nbsp;* Printf should not be used for chit-chat.&lt;br/&gt;
2339 &nbsp;*/&lt;br/&gt;
2340 printf(fmt,x1,x2,x3,x4,x5,x6,x7,x8,x9,xa,xb,xc)&lt;br/&gt;
2341 char fmt[];&lt;br/&gt;
2342 {&lt;br/&gt;
2343 &nbsp;&nbsp;&nbsp;&nbsp;register char *s;&lt;br/&gt;
2344 &nbsp;&nbsp;&nbsp;&nbsp;register *adx, c;&lt;br/&gt;
2345 &lt;br/&gt;
2346 &nbsp;&nbsp;&nbsp;&nbsp;adx = &x1;&lt;br/&gt;
&lt;div class="wikinote"&gt;
以下开始扫描格式串，并逐一转换输出
&lt;/div&gt;
2347 loop:&lt;br/&gt;
2348 &nbsp;&nbsp;&nbsp;&nbsp;while((c = *fmt++) != ’%’) {&lt;br/&gt;
2349 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c == ’\0’) &lt;br/&gt;
2350 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &lt;br/&gt;
2351 &nbsp;&nbsp;&nbsp;&nbsp;[[code:putchar|putchar]](c); &lt;br/&gt;
2352 }&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若当前扫描的字符并非保留字，则直接输出
*若格式串读到末尾(\0)，则函数返回
*当读到格式保留字时，往下执行
&lt;/div&gt;
2353 &nbsp;&nbsp;&nbsp;&nbsp;c = *fmt++;&lt;br/&gt;
2354 &nbsp;&nbsp;&nbsp;&nbsp;&lt;nowiki&gt;if(c == ’d’ || c == ’l’ || c == ’o’)&lt;/nowiki&gt;&lt;br/&gt;
2355 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printn|printn]](*adx, c==’o’? 8: 10); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*转换并输出数字格式
*2355判断输出八进制或十进制数
&lt;/div&gt;
2356 &nbsp;&nbsp;&nbsp;&nbsp;if(c == ’s’) {&lt;br/&gt;
2357 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = *adx; &lt;br/&gt;
2358 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(c = *s++) &lt;br/&gt;
2359 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:putchar|putchar]](c); &lt;br/&gt;
2360 &nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*输出字符串
&lt;/div&gt;
2361 &nbsp;&nbsp;&nbsp;&nbsp;adx++;&lt;br/&gt;
2362 &nbsp;&nbsp;&nbsp;&nbsp;goto loop;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*返回2347，进行下一次扫描
&lt;/div&gt;
2363 }&lt;br/&gt;
2364 /* -------------------------*/ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:main]]
*[[code:panic]]
*[[code:prdev]]
*[[code:deverror]]
*[[code:trap]]
*[[code:falloc]]
*[[code:iget]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:printf by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:printn</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*输出给定数字在给定进制下的表示
*输入两个参数n,b
**n : 给定的数字
**b : 进制
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2365&lt;br/&gt;
2366&nbsp; /*&lt;br/&gt;
2367&nbsp;  * Print an unsigned integer in base b.&lt;br/&gt;
2368&nbsp;  */&lt;br/&gt;
2369&nbsp;printn(n, b)&lt;br/&gt;
2370&nbsp;{&lt;br/&gt;
2371&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register a;&lt;br/&gt;
2372&lt;br/&gt;
2373&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a = [[code:ldiv|ldiv]](n, b))&lt;br/&gt;
2374&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printn(a, b);&lt;br/&gt;
2375&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:putchar|putchar]]([[code:lrem|lrem]](n, b) + '0');&lt;br/&gt;
&lt;div class="wikinote"&gt;
+ '0' 操作将数字转换为相应ACSII码
&lt;/div&gt;
2376&nbsp;}&lt;br/&gt;
2377&nbsp; /* ------------------------- */&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:printf]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:printn by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:proc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0350&nbsp;/* &lt;br/&gt;
0351&nbsp;&nbsp;* One structure allocated per active &lt;br/&gt;
0352&nbsp;&nbsp;* process. It contains all data needed &lt;br/&gt;
0353&nbsp;&nbsp;* about the process while the &lt;br/&gt;
0354&nbsp;&nbsp;* process may be swapped out. &lt;br/&gt;
0355&nbsp;&nbsp;* Other per process data (user.h) &lt;br/&gt;
0356&nbsp;&nbsp;* is swapped with the process. &lt;br/&gt;
0357&nbsp;&nbsp;*/ &lt;br/&gt;
0358&nbsp;struct     proc &lt;br/&gt;
0359&nbsp;{ &lt;br/&gt;
0360&nbsp;&nbsp;char p_stat; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程状态，常量定义在[[file:proc.h|proc.h]]
&lt;/div&gt;
0361&nbsp;&nbsp;char p_flag; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程标志，常量定义在[[file:proc.h|proc.h]]
&lt;/div&gt;
0362&nbsp;&nbsp;char p_pri;  /* priority, negative is high */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[进程优先级]]
&lt;/div&gt;
0363&nbsp;&nbsp;char p_sig;  /* signal number sent to this process */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*发送给该进程的信号
&lt;/div&gt;
0364&nbsp;&nbsp;char p_uid;  /* user id, used to direct tty signals */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程的用户ID(UID)
&lt;/div&gt;
0365&nbsp;&nbsp;char p_time; /* resident time for scheduling */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程 驻留时间
&lt;/div&gt;
0366&nbsp;&nbsp;char p_cpu;  /* cpu usage for scheduling */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程 CPU 使用程度
&lt;/div&gt;
0367&nbsp;&nbsp;char p_nice; /* nice for scheduling */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程优先级
&lt;/div&gt;
0368&nbsp;&nbsp;int p_ttyp; /* controlling tty */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程 所属的tty
&lt;/div&gt;
0369&nbsp;&nbsp;int p_pid;  /* unique process id */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程 的进程号
&lt;/div&gt;
0370&nbsp;&nbsp;int p_ppid; /* process id of parent */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程父进程 的进程号
&lt;/div&gt;
0371&nbsp;&nbsp;int p_addr; /* address of swappable image */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该进程 可交换图像 的地址
*该地址 为物理实地址，不经过[[pdp11:内存管理|pdp11虚实地址转换]]，可以直接赋给KISA6(参看[[KISA6寻址]])
&lt;/div&gt;
0372&nbsp;&nbsp;int p_size; /* size of swappable image (*64 bytes) */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*可交换的[[进程图像]] 的大小 (块数，64字节/块)
&lt;/div&gt;
0373&nbsp;&nbsp;int p_wchan;/* event process is awaiting */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程睡眠原因
*常量定义 参看[[睡眠原因]]
&lt;/div&gt;
0374&nbsp;&nbsp;int *p_textp;/* pointer to text structure */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 进程的正文段的控制块&lt;br/&gt;[[code:text|struct text]]
&lt;/div&gt;
0375 &lt;br/&gt;
0376&nbsp;} proc[NPROC]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*NPROC定义在[[file:param.h|param.h 的0144行]]，值为50
&lt;/div&gt;
0377&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:main]]
*[[code:newproc]]
*[[code:sched]]
*[[code:sleep]]
*[[code:wakeup]]
*[[code:setrun]]
*[[code:swtch]]
*[[code:expand]]
*[[code:exit]]
*[[code:wait]]
*[[code:fork]]
*[[code:kill]]
*[[code:clock]]
*[[code:signal]]
*[[code:psignal]]
*[[code:issig]]
*[[code:stop]]
*[[code:ptrace]]
*[[code:xswap]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:proc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:procxmt</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*[[跟踪]] 机制的 子进程跟踪处理函数
*[[code:ipc|ipc]] 是父进程设置的跟踪 请求结构
*对 [[code:ipc|ipc.ip_req]]不同取值作出解释
**1,2 : 用户 指令/数据空间，从指定地址[[code:ipc|ipc.ip-addr]]读入一个字，到[[code:ipc|ipc.ipc-data]]
**3 : PPDA区，从指定地址[[code:ipc|ipc.ip-addr]]读入一个字，到[[code:ipc|ipc.ipc-data]]
**4,5 : 用户 指令/数据空间，向指定地址[[code:ipc|ipc.ip-addr]]写入一个字[[code:ipc|ipc.ipc-data]]
**6 : PPDA区，向指定地址[[code:ipc|ipc.ip-addr]]写入一个字[[code:ipc|ipc.ipc-data]]&lt;br/&gt;只能写入特殊的位置，包括 [[code:user|u.u_fsav]] 和 [[skill:u.u_ar0|u.u_ar0]]
**7 : 设置子进程信号，[[code:ipc|ipc.ip-data]] 送入 p_sig
**8 : 终止子进程
*对于 pdp11/40 ，指令空间和数据空间不分开
*返回值
**[[code:ipc|ipc.ip_req]] == 7时，返回1
**[[code:ipc|ipc.ip_req]] == 8时，没有返回值(也不需要返回值...)
**其余情况，返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4198 &lt;br/&gt;
4199&nbsp;/* &lt;br/&gt;
4200&nbsp;&nbsp;* Code that the child process &lt;br/&gt;
4201&nbsp;&nbsp;* executes to implement the command &lt;br/&gt;
4202&nbsp;&nbsp;* of the parent process in tracing. &lt;br/&gt;
4203&nbsp;&nbsp;*/ &lt;br/&gt;
4204&nbsp;procxmt() &lt;br/&gt;
4205&nbsp;{ &lt;br/&gt;
4206&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int i; &lt;br/&gt;
4207&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int *p; &lt;br/&gt;
4208 &lt;br/&gt;
4209&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:ipc|ipc.ip_lock]] != [[code:user|u.u_procp]]-&gt;p_pid) &lt;br/&gt;
4210&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:ipc|ipc]] 的参数 被错误地设置(并非针对子进程)，则直接返回0
&lt;/div&gt;
4211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = [[code:ipc|ipc.ip_req]]; &lt;br/&gt;
4212&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc.ip_req]] = 0; &lt;br/&gt;
4213&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&[[code:ipc|ipc]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*唤醒父进程
*在此处唤醒的正确性值得讨论... 列入[[遗留问题]]
&lt;/div&gt;
4214&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (i) { &lt;br/&gt;
4215 &lt;br/&gt;
4216&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* read user I */ &lt;br/&gt;
4217&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1: &lt;br/&gt;
4218&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:fuibyte|fuibyte]]([[code:ipc|ipc.ip_addr]]) == -1) &lt;br/&gt;
4219&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto error; &lt;br/&gt;
4220&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc.ip_data]] = [[code:fuiword|fuiword]]([[code:ipc|ipc.ip_addr]]); &lt;br/&gt;
4221&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
4222 &lt;br/&gt;
4223&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* read user D */ &lt;br/&gt;
4224&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 2: &lt;br/&gt;
4225&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:fubyte|fubyte]]([[code:ipc|ipc.ip_addr]]) == -1) &lt;br/&gt;
4226&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto error; &lt;br/&gt;
4227&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc.ip_data]] = [[code:fuword|fuword]]([[code:ipc|ipc.ip_addr]]); &lt;br/&gt;
4228&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
4229 &lt;br/&gt;
4230&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* read u */ &lt;br/&gt;
4231&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 3: &lt;br/&gt;
4232&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = [[code:ipc|ipc.ip_addr]]; &lt;br/&gt;
4233&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i&lt;0 &lt;nowiki&gt;||&lt;/nowiki&gt; i &gt;= (USIZE&lt;&lt;6)) &lt;br/&gt;
4234&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto error; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*地址 不在 PPDA区，进入错误处理
&lt;/div&gt;
4235&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc.ip_data]] = [[code:user|u]][[skill:.inta|.inta]][i&gt;&gt;1]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
* i&gt;&gt;1 将单位从 字节 转化为 字
&lt;/div&gt;
4236&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
4237 &lt;br/&gt;
4238&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* write user I (for now, always an error) */ &lt;br/&gt;
4239&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 4: &lt;br/&gt;
4240&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:suiword|suiword]]([[code:ipc|ipc.ip_addr]], 0) &lt; 0) &lt;br/&gt;
4241&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto error; &lt;br/&gt;
4242&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suiword|suiword]]([[code:ipc|ipc.ip_addr]], [[code:ipc|ipc.ip_data]]); &lt;br/&gt;
4243&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
4244 &lt;br/&gt;
4245&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* write user D */ &lt;br/&gt;
4246&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 5: &lt;br/&gt;
4247&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:suword|suword]]([[code:ipc|ipc.ip_addr]], 0) &lt; 0) &lt;br/&gt;
4248&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto error; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*关于 为什么要用0作为参数 尝试写入，原因不明，列入[[遗留问题]]
&lt;/div&gt;
4249&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]]([[code:ipc|ipc.ip_addr]], [[code:ipc|ipc.ip_data]]); &lt;br/&gt;
4250&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
4251 &lt;br/&gt;
4252&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* write u */ &lt;br/&gt;
4253&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 6: &lt;br/&gt;
4254&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = &[[code:user|u]][[skill:.inta|.inta]][ [[code:ipc|ipc.ip_addr|]]&gt;&gt;1 ]; &lt;br/&gt;
4255&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (p &gt;= [[code:user|u.u_fsav]] && p &lt; &[[code:user|u.u_fsav]][25]) &lt;br/&gt;
4256&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto ok; &lt;br/&gt;
4257&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i=0; i&lt;9; i++) &lt;br/&gt;
4258&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (p == &[[skill:u.u_ar0|u.u_ar0]][regloc[i]]) &lt;br/&gt;
4259&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto ok; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*只有PPDA区特殊位置 能被写入
**[[code:user|u.u_fsav]]
**[[skill:u.u_ar0|u.u_ar0]] 指向的 堆栈中现场保护区
&lt;/div&gt;
4260&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto error; &lt;br/&gt;
4261&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok: &lt;br/&gt;
4262&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (p == &[[skill:u.u_ar0|u.u_ar0]][RPS]) { &lt;br/&gt;
4263&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* assure user space */ &lt;br/&gt;
4264&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc.ip_data]] &lt;nowiki&gt;=|&lt;/nowiki&gt; 0170000; &lt;br/&gt;
4265&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* priority 0 */ &lt;br/&gt;
4266&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc.ip_data]] =& ~0340; &lt;br/&gt;
4267&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 想设置 堆栈中保存的PS，需要特殊操作
**禁止 设置 先前态和当前态 为 核心态
**禁止 提高 处理机优先级
*当然，做法有些粗暴...
&lt;/div&gt;
4268&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p = [[code:ipc|ipc.ip_data]]; &lt;br/&gt;
4269&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
4270 &lt;br/&gt;
4271&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* set signal and continue */ &lt;br/&gt;
4272&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 7: &lt;br/&gt;
4273&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_sig = [[code:ipc|ipc.ip_data]]; &lt;br/&gt;
4274&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(1); &lt;br/&gt;
4275 &lt;br/&gt;
4276&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* force exit */ &lt;br/&gt;
4277&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 8: &lt;br/&gt;
4278&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:exit|exit]](); &lt;br/&gt;
4279 &lt;br/&gt;
4280&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default: &lt;br/&gt;
4281&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error: &lt;br/&gt;
4282&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc]].ip_req = -1; &lt;br/&gt;
4283&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4284&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
4285&nbsp;} &lt;br/&gt;
4286&nbsp;/* ------------------------- */ &lt;br/&gt;
4287 &lt;br/&gt;
4288 &lt;br/&gt;
4289 &lt;br/&gt;
4290 &lt;br/&gt;
4291 &lt;br/&gt;
4292 &lt;br/&gt;
4293 &lt;br/&gt;
4294 &lt;br/&gt;
4295 &lt;br/&gt;
4296 &lt;br/&gt;
4297 &lt;br/&gt;
4298 &lt;br/&gt;
4299 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[跟踪]]

===Caller===
*[[code:stop]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:procxmt by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:profil</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*设置 [[程序统计直方图]] 的参数，启动[[程序统计直方图]]
*使用4个隐式参数，对应[[code:user|u.u_prof[]]]的元素
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3666&lt;br/&gt;
3667&nbsp;profil()&lt;br/&gt;
3668&nbsp;{&lt;br/&gt;
3669&lt;br/&gt;
3670&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_prof]][0] = [[code:user|u.u_arg]][0] & ~1;  /* base of sample buf */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置 统计数组的起始地址
*地址 修剪为 偶地址
&lt;/div&gt;
3671&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_prof]][1] = [[code:user|u.u_arg]][1]; /* size of same */ &lt;br/&gt;
3672&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_prof]][2] = [[code:user|u.u_arg]][2]; /* pc offset */ &lt;br/&gt;
3673&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_prof]][3] = ([[code:user|u.u_arg]][3]&gt;&gt;1) & 077777; /* pc scale */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置 缩放比例(并非实际缩放比例)，为 传入参数/2
&lt;/div&gt;
3674&nbsp;}&lt;br/&gt;
3675&nbsp;/* ------------------------- */ &lt;br/&gt;
3676&lt;br/&gt;
3677&lt;br/&gt;
3678&lt;br/&gt;
3679&lt;br/&gt;
3680&lt;br/&gt;
3681&lt;br/&gt;
3682&lt;br/&gt;
3683&lt;br/&gt;
3684&lt;br/&gt;
3685&lt;br/&gt;
3686&lt;br/&gt;
3687&lt;br/&gt;
3688&lt;br/&gt;
3689&lt;br/&gt;
3690&lt;br/&gt;
3691&lt;br/&gt;
3692&lt;br/&gt;
3693&lt;br/&gt;
3694&lt;br/&gt;
3695&lt;br/&gt;
3696&lt;br/&gt;
3697&lt;br/&gt;
3698&lt;br/&gt;
3699&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[程序统计直方图]]

===Param===
:(profil = 44.; not in assembler)
:&lt;b&gt;sys	profil; buff; bufsiz; offset; scale&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:profil by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:psig</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
4035 &lt;br/&gt;
4036&nbsp;/* &lt;br/&gt;
4037&nbsp;&nbsp;* Perform the action specified by &lt;br/&gt;
4038&nbsp;&nbsp;* the current signal. &lt;br/&gt;
4039&nbsp;&nbsp;* The usual sequence is: &lt;br/&gt;
4040&nbsp;&nbsp;* if(issig()) &lt;br/&gt;
4041&nbsp;&nbsp;* psig(); &lt;br/&gt;
4042&nbsp;&nbsp;*/ &lt;br/&gt;
4043&nbsp;psig() &lt;br/&gt;
4044&nbsp;{ &lt;br/&gt;
4045&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register n, p; &lt;br/&gt;
4046&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp; &lt;br/&gt;
4047 &lt;br/&gt;
4048&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = [[code:user|u.u_procp]]; &lt;br/&gt;
4049&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = rp-&gt;p_sig; &lt;br/&gt;
4050&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_sig = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清 信号
&lt;/div&gt;
4051&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((p=[[code:user|u.u_signal]][n]) != 0) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 信号处理 不为 缺省，则...
&lt;/div&gt;
4052&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = 0; &lt;br/&gt;
4053&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n != SIGINS && n != SIGTRC) &lt;br/&gt;
4054&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_signal]][n] = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*信号 不为 SIGINS 或 SIGTRC，则信号处理方式 置为 缺省
&lt;/div&gt;
4055&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n =  [[skill:u.u_ar0|u.u_ar0]][R6] - 4; &lt;br/&gt;
4056&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:grow|grow]](n); &lt;br/&gt;
4057&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](n+2, [[skill:u.u_ar0|u.u_ar0]][RPS]); &lt;br/&gt;
4058&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](n, [[skill:u.u_ar0|u.u_ar0]][R7]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*向 用户栈 压入 当前中断保护的pc,ps
*设为 pc0,ps0
*参看 [[code:psig|说明]]
&lt;/div&gt;
4059&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R6] = n; &lt;br/&gt;
4060&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][RPS] =& ~TBIT; &lt;br/&gt;
4061&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R7] = p; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 当前中断保护 的pc 置为 信号处理函数的入口
*将 当前中断保护 的ps 清 T(陷入) 位
*设为 pc1,ps1
*修正 用户栈栈顶
*参看 [[code:psig|说明]]
&lt;/div&gt;
4062&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
4063&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*当 使用缺省的信号处理方式，执行以下代码
&lt;/div&gt;
4064&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(n) { &lt;br/&gt;
4065 &lt;br/&gt;
4066&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGQIT: &lt;br/&gt;
4067&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGINS: &lt;br/&gt;
4068&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGTRC: &lt;br/&gt;
4069&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGIOT: &lt;br/&gt;
4070&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGEMT: &lt;br/&gt;
4071&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGFPT: &lt;br/&gt;
4072&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGBUS: &lt;br/&gt;
4073&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGSEG: &lt;br/&gt;
4074&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case SIGSYS: &lt;br/&gt;
4075&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][0] = n; &lt;br/&gt;
4076&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:core|core]]()) &lt;br/&gt;
4077&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n =+ 0200; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*生成 内存映像文件，方便debug
&lt;/div&gt;
4078&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4079&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][0] = ([[skill:u.u_ar0|u.u_ar0]][R0]&lt;&lt;8) &lt;nowiki&gt;|&lt;/nowiki&gt; n; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:user|u.u_arg]][0] 
**高字节 为 [[skill:u.u_ar0|u.u_ar0]][R0]的低字节
**低字节 为 信号 以及 [[code:core|core]]的成功标志
&lt;/div&gt;
4080&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:exit|exit]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*终止 本进程
&lt;/div&gt;
4081&nbsp;} &lt;br/&gt;
4082&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Extend===
=说明=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_psig.png"/></p>

===Ref===
*[[信号系统]]
===Caller===
*[[code:trap]]
*[[code:clock]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:psig by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:psignal</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*发送信号sig到指定进程p
*共输入两个参数
**sig : 信号标志
**p : 指向 指定进程的 [[code:proc|proc结构]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3958&nbsp;&lt;br/&gt;
3959&nbsp;/* &lt;br/&gt;
3960&nbsp;&nbsp;* Send the specified signal to &lt;br/&gt;
3961&nbsp;&nbsp;* the specified process. &lt;br/&gt;
3962&nbsp;&nbsp;*/ &lt;br/&gt;
3963&nbsp;psignal(p, sig) &lt;br/&gt;
3964&nbsp;int *p; &lt;br/&gt;
3965&nbsp;{ &lt;br/&gt;
3966&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp; &lt;br/&gt;
3967&nbsp;&lt;br/&gt;
3968&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sig &gt;= NSIG) &lt;br/&gt;
3969&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 信号标志越界(不检查下界)，则函数直接返回
**NSIG 定义在 [[file:param.h|param.h]]
&lt;/div&gt;
3970&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = p; &lt;br/&gt;
3971&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;p_sig != SIGKIL) &lt;br/&gt;
3972&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_sig = sig; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*更新 指定进程的 信号
*但 SIGKIL 信号不更新
&lt;/div&gt;
3973&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;p_pri &gt; PUSER) &lt;br/&gt;
3974&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_pri  = PUSER; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*LIONS源代码为&lt;div class="wikiheadcode"&gt;3973&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;p_stat &gt; PUSER) &lt;br/&gt;3974&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_stat = PUSER; &lt;br/&gt;&lt;/div&gt;疑为错误
*更新 进程优先数 p_pri = min{p_pri,PUSER}
*PUSER 定义在 [[file:param.h|param.h]]
&lt;/div&gt;
3975&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;p_stat == SWAIT) &lt;br/&gt;
3976&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:setrun|setrun]](rp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 指定进程 在低优先级睡眠，则唤醒该进程
&lt;/div&gt;
3977&nbsp;} &lt;br/&gt;
3978&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[信号系统]]
===Caller===
*[[code:trap]]
*[[code:kill]]
*[[code:signal]]
*[[code:writep]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:psignal by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ptrace</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*[[跟踪]]系统 重要的函数
*ptrace 的 系统调用函数
*共使用4个参数 request, pid, addr, data
**request : 跟踪请求 类型，参看[[code:procxmt|procxmt]]说明，保存在 [[code:user|u.u_arg[2]]]
**pid : 子进程的进程号，保存在 [[code:user|u.u_arg[0]]]
**addr : 跟踪的 地址参数，保存在 [[code:user|u.u_arg[1]]]
**data : 跟踪的 数据参数，保存在 [[skill:u.u_ar0|u.u_ar0]][R0]
*一般情况下，子进程调用ptrace(0,0,0,0)&lt;br/&gt;其他情况 由父进程调用ptrace
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4160 &lt;br/&gt;
4161&nbsp;/* &lt;br/&gt;
4162&nbsp;&nbsp;* sys-trace system call. &lt;br/&gt;
4163&nbsp;&nbsp;*/ &lt;br/&gt;
4164&nbsp;ptrace() &lt;br/&gt;
4165&nbsp;{ &lt;br/&gt;
4166&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *p; &lt;br/&gt;
4167 &lt;br/&gt;
4168&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:user|u.u_arg]][2] &lt;= 0) { &lt;br/&gt;
4169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; STRC; &lt;br/&gt;
4170&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
4171&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
4168 - 4171
*由子进程运行(参看[[跟踪]])
*子进程 置 STRC (跟踪标志)
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*以下由 父进程 运行
&lt;/div&gt;
4172&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (p=[[code:proc|proc]]; p &lt; &[[code:proc|proc]][NPROC]; p++) &lt;br/&gt;
4173&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (p-&gt;p_stat==SSTOP &lt;br/&gt;
4174&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&& p-&gt;p_pid==[[code:user|u.u_arg]][0] &lt;br/&gt;
4175&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&& p-&gt;p_ppid==[[code:user|u.u_procp]]-&gt;p_pid) &lt;br/&gt;
4176&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto found; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*查找 匹配的子进程
**状态 为 SSTOP
**进程号 为 pid
**当前进程 的 子进程
&lt;/div&gt;
4177&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ESRCH; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*找不到指定的子进程，则抛出错误
**[[错误代码]] : ESRCH
&lt;/div&gt;
4178&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
4179 &lt;br/&gt;
4180&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;found: &lt;br/&gt;
4181&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ([[code:ipc|ipc]].ip_lock) &lt;br/&gt;
4182&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&[[code:ipc|ipc]], IPCPRI); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*父进程 等待 [[code:ipc|ipc]] 而睡眠
**[[睡眠原因]] : [[code:ipc|ipc]]
**[[睡眠优先级]] : IPCPRI
&lt;/div&gt;
4183&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc]].ip_lock = p-&gt;p_pid; &lt;br/&gt;
4184&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc]].ip_data = [[skill:u.u_ar0|u.u_ar0]][R0]; &lt;br/&gt;
4185&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc]].ip_addr = [[code:user|u.u_arg]][1] & ~01;&lt;br/&gt;
&lt;div class="wikinote"&gt;&lt;br/&gt;
LIONS 源代码为&lt;div class="wikiheadcode"&gt;[[code:ipc|ipc]].ip_addr - u.u_arg[1] & ~01;&lt;/div&gt;
疑为笔误
&lt;/div&gt;&lt;br/&gt;
4186&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc]].ip_req = [[code:user|u.u_arg]][2]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
4183 - 4186
*填写 [[code:ipc|ipc]] 参数(跟踪请求参数)
&lt;/div&gt;
4187&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_flag =& ~SWTED; &lt;br/&gt;
4188&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:setrun|setrun]](p); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*子进程 清 SWTED 标志
*唤醒 子进程
&lt;/div&gt;
4189&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ([[code:ipc|ipc]].ip_req &gt; 0) &lt;br/&gt;
4190&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&[[code:ipc|ipc]], IPCPRI); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*父进程 睡眠 ，等待 子进程 处理跟踪请求
**[[睡眠原因]] : [[code:ipc|ipc]]
**[[睡眠优先级]] : IPCPRI
&lt;/div&gt;
4191&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0] = [[code:ipc|ipc]].ip_data; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*返回值 置 跟踪请求处理后的数据
&lt;/div&gt;
4192&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:ipc|ipc]].ip_req &lt; 0) &lt;br/&gt;
4193&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EIO; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*请求处理 错误，则抛出错误
**[[错误代码]] : EIO
&lt;/div&gt;
4194&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ipc|ipc]].ip_lock = 0; &lt;br/&gt;
4195&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&[[code:ipc|ipc]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*解锁 [[code:ipc|ipc]]
*唤醒 等待 [[code:ipc|ipc]] 的进程
&lt;/div&gt;
4196&nbsp;} &lt;br/&gt;
4197&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[跟踪]]

===Param===
:(ptrace = 26.; not in assembler)
:(data in r0)
:&lt;b&gt;sys	ptrace; pid; addr; request&lt;/b&gt;
:(value in r0)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ptrace by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:putc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*向字符缓存池写入一个字符
*传入2个参数
**参数1:一个字符
**参数2:[[code:struct clist|struct clist]]的地址
*返回值
**若成功写入,返回0
**否则返回一个非零值
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0967&nbsp;_putc:&lt;br/&gt;
0968&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     2(sp),r0&lt;br/&gt;
0969&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     4(sp),r1&lt;br/&gt;
0970&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     PS,-(sp)&lt;br/&gt;
0971&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,-(sp)&lt;br/&gt;
0972&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r3,-(sp)&lt;br/&gt;
0973&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS					&lt;br/&gt;
0974&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $100,PS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/ spl 5&lt;br/&gt;
0975&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     4(r1),r2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/ last ptr&lt;br/&gt;
0976&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     1f&lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断clist.c-cl是否为空指针,若不是,跳到983行执行,否则继续
&lt;/div&gt;
0977&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     _cfreelist,r2&lt;br/&gt;
&lt;div class="wikinote"&gt;
*从[[字符设备管理#自由字符缓存队列|自由字符缓存队列]]取出位于队首的缓存,并将其指针赋给R2
&lt;/div&gt;
0978&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     9f&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若cfreelist为空指针,表明[[字符设备管理#自由字符缓存队列|自由字符缓存队列]]为空,分配失败,跳转至1001行,否则继续
&lt;/div&gt;
0979&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (r2),_cfreelist&lt;br/&gt;
&lt;div class="wikinote"&gt;
*cfreelist 指向 原先[[字符设备管理#自由字符缓存队列|自由字符缓存队列]]中的第二个缓存
&lt;/div&gt;
0980&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]] (r2)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*新分配缓存的c_next 置为 NULL
*同时 R2指向新分配缓存块的第一个字符存放的位置
&lt;/div&gt;
0981&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,2(r1)+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/ first ptr&lt;br/&gt;
0982&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]]       2f&lt;br/&gt;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:struct clist|struct clist]].c-cf 指向 新分配缓存的第一个字符
&lt;/div&gt;
0983&nbsp;1:&lt;br/&gt;
0984&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $7,r2&lt;br/&gt;
0985&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     2f&lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断寄存器R2的值最后三位是否为000
**若为000,表明[[字符设备管理#I/O字符缓存队列|I/O字符缓存队列]]队尾的缓存已被用完,需要新分配缓存,原因请参考[[字符设备管理#缓存池的改造|缓存池的改造]]
**否则,无需分配新缓存,则直接跳至992行
&lt;/div&gt;
0986&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     _cfreelist,r3&lt;br/&gt;
0987&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BEQ|beq]]     9f&lt;br/&gt;
0988&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (r3),_cfreelist&lt;br/&gt;
&lt;div class="wikinote"&gt;
*986 - 998行类似于977 -979行,此处不再赘述
&lt;/div&gt;
0989&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r3,-10(r2)&lt;br/&gt;
0990&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r3,r2&lt;br/&gt;
&lt;div class="wikinote"&gt;
*队尾缓存块的c_next → R3,R3 → R2
*于是当前R2中存放的是新分配缓存块的首地址 
&lt;/div&gt;
0991&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     (r2)+&lt;br/&gt;
&lt;div class="wikinote"&gt;
*新分配缓存的c_next 置为 NULL
*同时 R2指向新分配缓存块的第一个字符存放的位置
&lt;/div&gt;
0992&nbsp;2:&lt;br/&gt;
0993&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOVB|movb]]    r0,(r2)+&lt;br/&gt;
0994&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,4(r1)&lt;br/&gt;
0995&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:INC|inc]]     (r1)							/ count&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将字符c写入[[字符设备管理#I/O字符缓存队列|I/O字符缓存队列]]的队尾
*更新队尾指针
*[[code:struct clist|struct clist]].c-cc加1
&lt;/div&gt;
0996&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     r0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*0 → R0,用于返回0,表明字符写入缓存池成功
&lt;/div&gt;
0997&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r3&lt;br/&gt;
0998&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2&lt;br/&gt;
0999&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,PS&lt;br/&gt;
1000&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下为缓存分配失败后的处理
&lt;/div&gt;
1001&nbsp;9:&lt;br/&gt;
1002&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     pc,r0&lt;br/&gt;
&lt;div class="wikinote"&gt;
*0 → R0,用于返回一个非0值,表明字符写入缓存池失败
&lt;/div&gt;
1003&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r3&lt;br/&gt;
1004&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,r2&lt;br/&gt;
1005&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     (sp)+,PS&lt;br/&gt;
1006&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;/div&gt;
===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_putc.png"/></p>
===Ref===
*[[字符设备管理]]
*[[关于汇编函数的说明]]

===Caller===
*[[code:canon]]
*[[code:ttyinput]]
*[[code:ttyoutput]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:putc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:putchar</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*该函数用于输出字符
*传入1个参数c
*c:想要输出的字符
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2378 &lt;br/&gt;
2379 /*&lt;br/&gt;
2380 * Print a character on console.&lt;br/&gt;
2381 * Attempts to save and restore device&lt;br/&gt;
2382 * status.&lt;br/&gt;
2383 * If the switches are 0, all&lt;br/&gt;
2384 * printing is inhibited.&lt;br/&gt;
2385 */&lt;br/&gt;
2386 putchar(c)&lt;br/&gt;
2387 {&lt;br/&gt;
2388 &nbsp;&nbsp;&nbsp;&nbsp;register rc, s;&lt;br/&gt;
2389&lt;br/&gt;
2390 &nbsp;&nbsp;&nbsp;&nbsp;rc = c;&lt;br/&gt;
2391 &nbsp;&nbsp;&nbsp;&nbsp;if(SW-&gt;integ == 0)&lt;br/&gt;
2392 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*参考 [[skill:SW|SW-&gt;integ 的解释]]
*猜测含义：若控制台输出端不可用，则返回，不输出 ([[遗留问题]])
&lt;/div&gt;
2393 &nbsp;&nbsp;&nbsp;&nbsp;while((KL-&gt;xsr&0200) ==0)&lt;br/&gt;
2394 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*KL-&gt;xsr 含义详见 [[code:putchar#附加说明|附加说明]]
*含义：判断寄存器中的Ready位,参看[[字符设备管理]],当输出设备未就绪时，进行空等待
&lt;/div&gt;
2395 &nbsp;&nbsp;&nbsp;&nbsp;if(rc == 0)&lt;br/&gt;
2396 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*与2405句合作，实现了 [[code:putchar#附加说明|附加说明]] 中的 输出后状态检查机制
&lt;/div&gt;
2397 &nbsp;&nbsp;&nbsp;&nbsp;s = KL-&gt;xsr;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对 原先发送器状态寄存器 进行保护
*与2406句合作，构成对 原先发送器状态寄存器 的保护和还原
*关于发送器状态寄存器,参看[[code:putchar#附加说明|附加说明]]
&lt;/div&gt;
2398 &nbsp;&nbsp;&nbsp;&nbsp;KL-&gt;xsr = 0;&lt;br/&gt;
2399 &nbsp;&nbsp;&nbsp;&nbsp;KL-&gt;xbr = rc;&lt;br/&gt;
2400 &nbsp;&nbsp;&nbsp;&nbsp;if(rc == ’<br/>\n’) {&lt;br/&gt;
2401 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putchar(’\r’); &lt;br/&gt;
2402 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putchar(0177); &lt;br/&gt;
2403 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putchar(0177); &lt;br/&gt;
2404 &nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*2398 2399句对相关寄存器(具体含义见[[code:putchar#附加说明|附加说明]])进行赋值，进行写操作
*若输出换行"<br/>\n"，则输出回车"\r"
*2402 2403输出两个DEL字符，按LIONS代码解释([[参考文献]])，作用是提供在终端上完成回车操作所需的延迟

&lt;/div&gt;
2405 &nbsp;&nbsp;&nbsp;&nbsp;putchar(0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*与2395 2396句合作，实现了 [[code:putchar#附加说明|附加说明]] 中的 输出后状态检查机制
&lt;/div&gt;
2406 &nbsp;&nbsp;&nbsp;&nbsp;KL-&gt;xsr = s;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对 原先发送器状态寄存器  进行还原
*与2397句合作，构成对 原先发送器状态寄存器 的保护和还原
&lt;/div&gt;
2407 }&lt;br/&gt;
2408 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=附加说明=
==输出后状态检查机制==
*整个过程复用了2391 - 2394 用于状态检查的代码
#调用函数时，程序完成输出操作，一直运行到2405句，调用自身
#putchar再次进行状态检查(2393)，等到输出设备就绪后，执行到2396返回
==关于KL==
*KL指向系统控制台,其定义在[[file:param.h|param.h]]的第165行
*KL-&gt;xsr指向发送器状态寄存器,参看[[字符设备管理#设备寄存器]]
*KL-&gt;xbr指向发送器数据缓存寄存器,参看[[字符设备管理#设备寄存器]]
*此处使用了[[编程技巧#无名结构|无名结构]]，定义在[[file:prf.c|prf.c]]的2313行

===Caller===
*[[code:printf]]
*[[code:printn]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:putchar by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rdwr</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*完成 文件读/写任务
*由 [[code:read|read]]/[[code:write|write]] 调用
*共传入 1个参数 mode
**mode : FREAD / FWRITE 分别对应 读/写 模式
*由 用户态 传入3个参数 fildes, buffer, nbytes，参看[[系统调用#系统调用的参数传递|系统调用的参数传递]]
**fildes : 文件打开标志, u.u_ofile[fildes] 指向对应的文件打开结构，参看[[内存打开文件结构]]，保存在 [[skill:u.u_ar0|u.u_ar0[R0]]]
**buffer : 读取/写入的起始偏移位，保存在 [[code:user|u.u_arg[0]]]
**nbytes : 读取/写入的字节数，保存在 [[code:user|u.u_arg[1]]]
*向 用户态 返回 一个参数
**共读取/写入 的字节数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5725&nbsp;&lt;br/&gt;
5726&nbsp;/* &lt;br/&gt;
5727&nbsp;&nbsp;* common code for read and write calls: &lt;br/&gt;
5728&nbsp;&nbsp;* check permissions, set base, count, and offset, &lt;br/&gt;
5729&nbsp;&nbsp;* and switch out to readi, writei, or pipe code. &lt;br/&gt;
5730&nbsp;&nbsp;*/ &lt;br/&gt;
5731&nbsp;rdwr(mode) &lt;br/&gt;
5732&nbsp;{ &lt;br/&gt;
5733&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct file|fp]], m; &lt;br/&gt;
5734 &lt;br/&gt;
5735&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m = mode; &lt;br/&gt;
5736&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]] = [[code:getf|getf]]([[skill:u.u_ar0|u.u_ar0]][R0]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:struct file|fp]] ← fildes 对应 的文件打开结构
*参考 [[内存打开文件结构]]
&lt;/div&gt;
5737&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|fp]] == NULL) &lt;br/&gt;
5738&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5739&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct file|fp]]-&gt;f_flag&m) == 0) { &lt;br/&gt;
5740&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EBADF; &lt;br/&gt;
5741&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5742&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*检查 读/写 权限
*检查失败抛出错误
**[[错误代码]] : EBADF
&lt;/div&gt;
5743&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] = [[code:user|u.u_arg]][0]; &lt;br/&gt;
5744&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = [[code:user|u.u_arg]][1]; &lt;br/&gt;
5745&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_segflg]] = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 相应参数，为调用 [[code:readp|readp]] / [[code:writep|writep]] / [[code:readi|readi]] / [[code:writei|writei]] 做准备
&lt;/div&gt;
5746&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|fp]]-&gt;f_flag&FPIPE) { &lt;br/&gt;
5747&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(m==FREAD) &lt;br/&gt;
5748&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:readp|readp]]([[code:struct file|fp]]); else &lt;br/&gt;
5749&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:writep|writep]]([[code:struct file|fp]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理 [[管道]] 读/写
&lt;/div&gt;
5750&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { &lt;br/&gt;
5751&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] = [[code:struct file|fp]]-&gt;f_offset[1]; &lt;br/&gt;
5752&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][0] = [[code:struct file|fp]]-&gt;f_offset[0]; &lt;br/&gt;
5753&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(m==FREAD) &lt;br/&gt;
5754&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:readi|readi]]([[code:struct file|fp]]-&gt;f_inode); else &lt;br/&gt;
5755&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:writei|writei]]([[code:struct file|fp]]-&gt;f_inode); &lt;br/&gt;
5756&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]]([[code:struct file|fp]]-&gt;f_offset, [[code:user|u.u_arg]][1]-[[code:user|u.u_count]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理 文件 读/写
&lt;/div&gt;
5757&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5758&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ar0]][R0] = [[code:user|u.u_arg]][1]-[[code:user|u.u_count]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*向 用户态 返回 共读取/写入 的字节数
&lt;/div&gt;
5759&nbsp;} &lt;br/&gt;
5760&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:read]]
*[[code:write]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rdwr by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:read</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*读文件 的 系统调用函数
*由 用户态 传入3个参数 fildes, buffer, nbytes
**fildes : 文件打开标志, u.u_ofile[fildes] 指向对应的文件打开结构，参看[[内存打开文件结构]]
**buffer : 读取的起始偏移位
**nbytes : 读取的字节数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5707&lt;br/&gt;
5708&nbsp;/*&lt;br/&gt;
5709&nbsp;&nbsp;* read system call&lt;br/&gt;
5710&nbsp;&nbsp;*/&lt;br/&gt;
5711&nbsp;read()&lt;br/&gt;
5712&nbsp;{&lt;br/&gt;
5713&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:rdwr|rdwr]](FREAD);&lt;br/&gt;
5714&nbsp;}&lt;br/&gt;
5715&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Param===
:(read = 3.)
:(file descriptor in r0)
:&lt;b&gt;sys read; buffer; nbytes&lt;/b&gt;
:(byte count in r0)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:read by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:readi</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*读取文件
*输入参数
**aip : 文件对应的[[code:struct inode|INODE结构]]
**[[code:user|u_segflg]] : 目标地址的地址空间
**[[code:user|u_base]] : 目标地址
**[[code:user|u_offset]] : 文件偏移量(字节)
**[[code:user|u_count]] : 欲读取的字节数
*运行时修正以下参数
**[[code:user|u.u_base]]
**[[code:user|u.u_offset]]
**[[code:user|u.u_count]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
&lt;div class="wikinote"&gt;
*该函数处理了两种情况，普通INODE 和 块设备装载INODE(参看[[文件系统#装载文件系统]])
**普通INODE，对块的处理：将 逻辑块号 转化为 物理块号
**块设备装载INODE，对块的处理：对于块设备来说，逻辑块号=物理块号
&lt;/div&gt;
6210&nbsp;&lt;br/&gt;
6211&nbsp;/* &lt;br/&gt;
6212&nbsp;&nbsp;* Read the file corresponding to &lt;br/&gt;
6213&nbsp;&nbsp;* the inode pointed at by the argument. &lt;br/&gt;
6214&nbsp;&nbsp;* the actual read arguments are found &lt;br/&gt;
6215&nbsp;&nbsp;* in the variables: &lt;br/&gt;
6216&nbsp;&nbsp;* u_base core address for destination &lt;br/&gt;
6217&nbsp;&nbsp;* u_offset byte offset in file &lt;br/&gt;
6218&nbsp;&nbsp;* u_count number of bytes to read &lt;br/&gt;
6219&nbsp;&nbsp;* u_segflg read to kernel/user &lt;br/&gt;
6220&nbsp;&nbsp;*/ &lt;br/&gt;
6221&nbsp;readi(aip) &lt;br/&gt;
6222&nbsp;[[code:struct inode|struct inode]] *aip; &lt;br/&gt;
6223&nbsp;{ &lt;br/&gt;
6224&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int *bp; &lt;br/&gt;
6225&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int lbn, bn, on; &lt;br/&gt;
6226&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register dn, n; &lt;br/&gt;
6227&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|struct inode]] *ip; &lt;br/&gt;
6228 &lt;br/&gt;
6229&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = aip; &lt;br/&gt;
6230&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_count]] == 0) &lt;br/&gt;
6231&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*欲读取字节数为0，函数直接返回
&lt;/div&gt;
6232&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; IACC; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*标志 该INODE块已被存取
&lt;/div&gt;
6233&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ip-&gt;i_mode&IFMT) == IFCHR) { &lt;br/&gt;
6234&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:cdevsw|cdevsw]][ip-&gt;i_addr[0][[skill:.d_major|.d_major]] ].d_read)(ip-&gt;i_addr[0]);  &lt;br/&gt;
6235&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6236&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理 字符设备装载INODE(参看[[文件系统#装载文件系统]])
&lt;/div&gt;
6237 &lt;br/&gt;
6238&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do { &lt;br/&gt;
6239&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lbn = bn = [[code:lshift|lshift]]([[code:user|u.u_offset]], -9); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*u.u_offset右移9位，相当于u.u_offset/512，计算需要读取的逻辑块号
*u.u_offset值 不改变
*lbn,bn 赋值为逻辑块号
&lt;/div&gt;
6240&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on = [[code:user|u.u_offset]][1] & 0777; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*on 赋值为 块内偏移量
&lt;/div&gt;
6241&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = [[code:min|min]](512-on, [[code:user|u.u_count]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*n 置为 该块内需读取的字节数 (= 512-块内偏移量 与 需读取字节 的最小值)
&lt;/div&gt;
6242&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ip-&gt;i_mode&IFMT) != IFBLK) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 INODE 不为 块设备装载INODE(参看[[文件系统#装载文件系统]]),...
*此处用法参看[[文件系统#inode类型]]
&lt;/div&gt;
6243&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dn = [[code:dpcmp|dpcmp]](ip-&gt;i_size0&0377, ip-&gt;i_size1,  &lt;br/&gt;
6244&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u.u_offset[0], u.u_offset[1]);     &lt;br/&gt;
6245&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(dn &lt;= 0) &lt;br/&gt;
6246&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*比较 文件大小 和 文件偏移量(u_offset)
*若 文件偏移量 &gt; 文件大小 ，则函数返回
*否则，dn = min{ 512 , 文件大小-文件偏移量}
&lt;/div&gt;
6247&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = [[code:min|min]](n, dn); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*n 置为 文件当前块需读字节(= min(该块内需读取的字节数 , 文件剩余字节数))
&lt;/div&gt;
6248&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((bn = [[code:bmap|bmap]](ip, lbn)) == 0) &lt;br/&gt;
6249&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*bn 置为 需读取块在物理设备对应的块号
&lt;/div&gt;
6250&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dn = ip-&gt;i_dev; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*dn 置为 需读取块所在的物理设备号
&lt;/div&gt;
6251&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { &lt;br/&gt;
6252&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dn = ip-&gt;i_addr[0]; &lt;br/&gt;
6253&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rablock = bn+1; &lt;br/&gt;
6254&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 ip 为 块设备装载INODE，则
**获取 设备号dn (参看[[文件系统#装载文件系统]])
**bn直接作为物理块号(对于设备，逻辑块号=物理块号，不需转换)
**设置rablock
&lt;/div&gt;
6255&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ip-&gt;i_lastr+1 == lbn) &lt;br/&gt;
6256&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:breada|breada]](dn, bn, rablock); &lt;br/&gt;
6257&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else &lt;br/&gt;
6258&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]](dn, bn); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若为顺序读，则用使用预读方式读取块
&lt;/div&gt;
6259&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_lastr = lbn; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*更新INODE最后一个读取的块号
&lt;/div&gt;
6260&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iomove|iomove]](bp, on, n, B_READ); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从读取的块里读出相应的字节
&lt;/div&gt;
6261&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
6262&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while(u.u_error==0 && u.u_count!=0); &lt;br/&gt;
6263&nbsp;} &lt;br/&gt;
6264&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统]]

===Caller===
*[[code:exec]]
*[[code:xalloc]]
*[[code:rdwr]]
*[[code:readp]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:readi by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:readp</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*从指定管道 读取数据
**若无数据可读，则睡眠等待
*共输入一个参数 fp
**fp : 指定管道的[[code:struct file|file 结构]] (参看 [[管道]])
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7755&nbsp;&lt;br/&gt;
7756&nbsp;/* Read call directed to a pipe. &lt;br/&gt;
7757&nbsp;&nbsp;*/ &lt;br/&gt;
7758&nbsp;readp(fp) &lt;br/&gt;
7759&nbsp;int *fp; &lt;br/&gt;
7760&nbsp;{ &lt;br/&gt;
7761&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp, *ip; &lt;br/&gt;
7762 &lt;br/&gt;
7763&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = fp; &lt;br/&gt;
7764&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = rp-&gt;f_inode; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*rp 指向 管道的[[code:struct file|file 结构]]
*ip 指向 对应的[[code:struct inode|INODE]]
&lt;/div&gt;
7765&nbsp;loop: &lt;br/&gt;
7766&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Very conservative locking. &lt;br/&gt;
7767&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7768&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:plock|plock]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip 置锁
&lt;/div&gt;
7769&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* If the head (read) has caught up with &lt;br/&gt;
7770&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the tail (write), reset both to 0. &lt;br/&gt;
7771&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7772&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;f_offset[1] == ip-&gt;i_size1) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 管道文件已读到底...
&lt;/div&gt;
7773&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;f_offset[1] != 0) { &lt;br/&gt;
7774&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;f_offset[1] = 0; &lt;br/&gt;
7775&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_size1 = 0; &lt;br/&gt;
7776&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_mode&IWRITE) { &lt;br/&gt;
7777&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_mode =& ~IWRITE; &lt;br/&gt;
7778&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](ip+1); &lt;br/&gt;
7779&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清 管道文件偏移
*清 管道文件大小
*若 有进程 等待写此管道，则唤醒此进程
**[[睡眠原因]] : (struct inode)+1
&lt;/div&gt;
7780&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7781 &lt;br/&gt;
7782&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* If there are not both reader and &lt;br/&gt;
7783&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* writer active, return without &lt;br/&gt;
7784&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* satisfying read. &lt;br/&gt;
7785&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7786&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放 ip
&lt;/div&gt;
7787&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_count &lt; 2) &lt;br/&gt;
7788&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 写管道 不存在，则直接返回
&lt;/div&gt;
7789&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_mode &lt;nowiki&gt;=|&lt;/nowiki&gt; IREAD; &lt;br/&gt;
7790&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](ip+2, PPIPE); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程睡眠
**[[睡眠原因]] : (struct inode)+2
**[[睡眠优先级]] : PPIPE
&lt;/div&gt;
7791&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
7792&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
7793&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Read and return &lt;br/&gt;
7794&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7795&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u.u_offset[0] = 0; &lt;br/&gt;
7796&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u.u_offset[1] = rp-&gt;f_offset[1]; &lt;br/&gt;
7797&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:readi|readi]](ip); &lt;br/&gt;
7798&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;f_offset[1] = u.u_offset[1]; &lt;br/&gt;
7799&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置参数，并调用 [[code:readi|readi]] 读管道文件
*更新 rp 参数
*解锁 ip
&lt;/div&gt;
7800&nbsp;} &lt;br/&gt;
7801&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[管道]]

===Caller===
*[[code:rdwr]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:readp by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:regloc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*帮助 定位 保存在堆栈中的寄存器值
*R0，R1...常量定义参看[[file:reg.h|reg.h]]
*载点 在 [[file:systm.h|systm.h]] 0237
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2672&lt;br/&gt;
2673&nbsp;/*&lt;br/&gt;
2674&nbsp;&nbsp;* Offsets of the user’s registers relative to&lt;br/&gt;
2675&nbsp;&nbsp;* the saved r0. See reg.h&lt;br/&gt;
2676&nbsp;&nbsp;*/&lt;br/&gt;
2677&nbsp;char regloc[9] &lt;br/&gt;
2678&nbsp;{&lt;br/&gt;
2679&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R0, R1, R2, R3, R4, R5, R6, R7, RPS&lt;br/&gt;
2680&nbsp;};&lt;br/&gt;
2681&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[编程技巧#无名结构]]

===Caller===
*[[code:exec]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:regloc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:retu</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0723 ~ 0750]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:retu by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rexit</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统调用exit的处理程序
*传入1个参数cstatus, 通过寄放在R0中传入
**这是一个用来传递给父进程的参数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3200&nbsp;/* -------------------------*/&lt;br/&gt;
3201&lt;br/&gt;
3202&nbsp;/* exit system call:&lt;br/&gt;
3203&nbsp;&nbsp;* pass back caller's r0&lt;br/&gt;
3204&nbsp;&nbsp;*/&lt;br/&gt;
3205&nbsp;rexit()&lt;br/&gt;
3206&nbsp;{&lt;br/&gt;
3207&lt;br/&gt;
3208&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][0] = [[code:user|u.u_ar0]][R0] &lt;&lt; 8;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将R0左移8位放入u.u_arg[0]中,R0是从用户态传入的参数
**关于为什么要左移8位,参见[[遗留问题]]
*u.u_arg[0]后会在[[code:wait|wait]]3297中被用到
&lt;/div&gt;
3209&nbsp;&nbsp;&nbsp;&nbsp;[[code:exit|exit]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用exit函数自我终止
&lt;/div&gt;
3210&nbsp;}&lt;br/&gt;
3211&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;

===Param===
:(exit = 1.)
:(status in r0)
:&lt;b&gt;sys exit&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rexit by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rhstart</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*RH设备的启动函数
*本版本 Unix 源代码并未调用此函数
*不作讨论
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5118 &lt;br/&gt;
5119&nbsp;/* startup routine for RH controllers. */ &lt;br/&gt;
5120&nbsp;#define    RHWCOM  060 &lt;br/&gt;
5121&nbsp;#define    RHRCOM  070 &lt;br/&gt;
5122 &lt;br/&gt;
5123&nbsp;rhstart(bp, devloc, devblk, abae) &lt;br/&gt;
5124&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
5125&nbsp;int *devloc, *abae; &lt;br/&gt;
5126&nbsp;{ &lt;br/&gt;
5127&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int *dp; &lt;br/&gt;
5128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *rbp; &lt;br/&gt;
5129&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int com; &lt;br/&gt;
5130 &lt;br/&gt;
5131&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp = devloc; &lt;br/&gt;
5132&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rbp = bp; &lt;br/&gt;
5133&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(cputype == 70) &lt;br/&gt;
5134&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*abae = rbp-&gt;b_xmem; &lt;br/&gt;
5135&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dp = devblk; /* block address */ &lt;br/&gt;
5136&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--dp = rbp-&gt;b_addr; /* buffer address */ &lt;br/&gt;
5137&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--dp = rbp-&gt;b_wcount; /* word count */ &lt;br/&gt;
5138&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com = IENABLE &lt;nowiki&gt;| GO |&lt;/nowiki&gt; &lt;br/&gt;
5139&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((rbp-&gt;b_xmem & 03) &lt;&lt; 8); &lt;br/&gt;
5140&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rbp-&gt;b_flags&B_READ) /* command + x-mem */     &lt;br/&gt;
5141&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com &lt;nowiki&gt;=|&lt;/nowiki&gt; RHRCOM; else &lt;br/&gt;
5142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com &lt;nowiki&gt;=|&lt;/nowiki&gt; RHWCOM; &lt;br/&gt;
5143&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--dp = com; &lt;br/&gt;
5144&nbsp;} &lt;br/&gt;
5145&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rhstart by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rkaddr</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 缓存块管理结构 [[code:struct buf|struct buf]]中的磁盘地址 转换为 [[RK磁盘#RKDA|RKDA寄存器]] 的地址形式
*共传入一个参数：bp
*bp :缓存块管理结构，类型为[[code:struct buf|struct buf]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5419 &lt;br/&gt;
5420&nbsp;rkaddr(bp) &lt;br/&gt;
5421&nbsp;[[code:struct buf|struct buf]] *bp; &lt;br/&gt;
5422&nbsp;{ &lt;br/&gt;
5423&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *p; &lt;br/&gt;
5424&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int b; &lt;br/&gt;
5425&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int d, m; &lt;br/&gt;
5426 &lt;br/&gt;
5427&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = bp; &lt;br/&gt;
5428&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b = p-&gt;b_blkno; &lt;br/&gt;
5429&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m = p-&gt;b_dev[[skill:.d_minor|.d_minor]] - 7; &lt;br/&gt;
5430&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(m &lt;= 0) &lt;br/&gt;
5431&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = p-&gt;b_dev[[skill:.d_minor|.d_minor]]; &lt;br/&gt;
5432&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else { &lt;br/&gt;
5433&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = [[code:lrem|lrem]](b, m); &lt;br/&gt;
5434&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b = [[code:ldiv|ldiv]](b, m); &lt;br/&gt;
5435&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*5429 - 5435 行，相当于m = p-&gt;b_dev[[skill:.d_minor|.d_minor]]
*5429 5433-5434 涉及到[[Rk磁盘交叉存储]]，由于Unix V6后不再使用此机制，在此不作讨论
&lt;/div&gt;
5436&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&lt;nowiki&gt;(d&lt;&lt;13 | (b/12)&lt;&lt;4 | b%12); &lt;/nowiki&gt;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*b为块号
*d为从设备号
*d&lt;&lt;13 将 从设备号置于 13-15位
*b%12 为 扇区地址/块地址，置于0-3位
*b/12 为 磁道地址（1磁道 = 12扇区/块)，置于4-12位
**b/12的末位为0，则在0面
**b/12的末位为1，则在1面
**所以4位也指示面号
*参考 [[RK磁盘#RKDA|RKDA寄存器]]&lt;br/&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/RKDA.png"/></p>
&lt;/div&gt;
5437 } &lt;br/&gt;
5438 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[RK磁盘]]

===Caller===
*[[code:rkstart]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rkaddr by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rkintr</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*当 [[RK磁盘]] I/O完成或发生错误时被调用
**进行错误处理
**处理已完成缓存块
**启动设备处理下一个在[[设备I/O队列]]的缓存块
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5450 &lt;br/&gt;
5451 rkintr() &lt;br/&gt;
5452 { &lt;br/&gt;
5453&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *bp; &lt;br/&gt;
5454 &lt;br/&gt;
5455&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct devtab|rktab]].d_active == 0) &lt;br/&gt;
5456&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若设备未启动，则此次函数调用无意义，函数直接返回
*并不清楚什么时候会发生此情况，列入[[遗留问题]]
&lt;/div&gt;
5457&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:struct devtab|rktab]].d_actf; &lt;br/&gt;
5458&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct devtab|rktab]].d_active = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清设备启动标志(此时设备I/O已完成，可以清标志)
&lt;/div&gt;
5459&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[skill:rk无名结构|RKADDR-&gt;rkcs]] &lt; 0) { /* error bit */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*RKCS最高位为错误位
*RKCS&lt;0，最高位为1，即错误位为1
*若 本次I/O出错，则执行以下操作
&lt;/div&gt;
5460&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:deverror|deverror]](bp, RKADDR-&gt;rker, RKADDR-&gt;rkds); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*在控制台显示错误消息
&lt;/div&gt;
5461&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RKADDR-&gt;rkcs = &lt;nowiki&gt;RESET|GO;&lt;/nowiki&gt; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*重置[[RK磁盘#RKCS|RKCS寄存器]]，并重启[[RK磁盘]]
*常量定义见 [[file:rk.c|rk.c]]
&lt;/div&gt;
5462&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while((RKADDR-&gt;rkcs&CTLRDY) == 0) ; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*等待RK磁盘，直到RK磁盘准备接受指令
&lt;/div&gt;
5463&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (++[[code:struct devtab|rktab]].d_errcnt &lt;= 10) { &lt;br/&gt;
5464&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:rkstart|rkstart]](); &lt;br/&gt;
5465&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5466&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若RK磁盘积累错误次数&lt;=10，则
**再次启动磁盘执行[[设备I/O队列]]任务
**函数返回
&lt;/div&gt;
5467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_flags&lt;nowiki&gt; =| &lt;/nowiki&gt;B_ERROR; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若RK磁盘积累错误次数&gt;10，则
**缓存块 置 错误标志
&lt;/div&gt;
5468&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5469&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct devtab|rktab]].d_errcnt = 0; &lt;br/&gt;
5470&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct devtab|rktab]].d_actf = bp-&gt;av_forw; &lt;br/&gt;
5471&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iodone|iodone]](bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*RK磁盘积累错误次数 清零
*[[设备I/O队列]] 当前完成任务移除队列
*释放 已I/O完成的缓存块
&lt;/div&gt;
5472&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:rkstart|rkstart]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*启动RK磁盘，执行下一个任务
&lt;/div&gt;
5473&nbsp;} &lt;br/&gt;
5474&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[RK磁盘]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rkintr by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rkread</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*RK磁盘 的 驱动函数(读)
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5475&lt;br/&gt;
5476&nbsp;rkread(dev)&lt;br/&gt;
5477&nbsp;{&lt;br/&gt;
5478&lt;br/&gt;
5479&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:physio|physio]]([[code:rkstrategy|rkstrategy]], &rrkbuf, dev, B_READ);&lt;br/&gt;
5480&nbsp;}&lt;br/&gt;
5481&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[RK磁盘]]

===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rkread by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rkstart</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*启动[[RK磁盘]]
*无参数传入
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5439&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br/&gt;
5440&nbsp;&nbsp;rkstart()&lt;br/&gt;
5441&nbsp;&nbsp;{&lt;br/&gt;
5442&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *bp;&lt;br/&gt;
5443&lt;br/&gt;
5444&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((bp = [[code:struct devtab|rktab]].d_actf) == 0)&lt;br/&gt;
5445&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*取[[设备I/O队列]]队首的 缓存 管理块
*如果[[设备I/O队列]]为空,直接返回
&lt;/div&gt;
5446&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct devtab|rktab]].d_active++;&lt;br/&gt;
5447&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:devstart|devstart]](bp, &RKADDR-&gt;rkda, [[code:rkaddr|rkaddr]](bp), 0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果[[设备I/O队列]]不为空,置d_active(忙标志)
*根据[[设备I/O队列]]中的第一个buf置[[RK磁盘#RKWC|RKWC]],[[RK磁盘#RKCS|RKCS]],[[RK磁盘#RKBA|RKBA]],[[RK磁盘#RKDA|RKDA]]寄存器的值
&lt;/div&gt;
5448&nbsp;&nbsp;}&lt;br/&gt;
5449 /* ------------------------- */&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[RK磁盘]]

===Caller===
*[[code:rkstrategy]]
*[[code:rkintr]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rkstart by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rkstrategy</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*处理I/O读写请求,将请求块放入I/O请求队列
*启动RK磁盘(如果有必要的话)
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5388&lt;br/&gt;
5389&nbsp;&nbsp;rkstrategy(abp)&lt;br/&gt;
5390&nbsp;&nbsp;[[code:struct buf|struct buf]] *abp;&lt;br/&gt;
5391&nbsp;&nbsp;{&lt;br/&gt;
5392&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct buf|struct buf]] *bp;&lt;br/&gt;
5393&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *qc, *ql;&lt;br/&gt;
5394&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int d;&lt;br/&gt;
5395&lt;br/&gt;
5396&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = abp;&lt;br/&gt;
5397&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bp-&gt;b_flags&B_PHYS)&lt;br/&gt;
5398&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mapalloc|mapalloc]](bp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果b_flags包含B_PHYS标志,调用[[code:mapalloc|mapalloc]]程序,该调用除了对pdp11/70系统外并无其他作用,故此处不予讨论
&lt;/div&gt;
5399&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = bp-&gt;b_dev.[[file:conf.h|d_minor]]-7;&lt;br/&gt;
5400&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(d &lt;= 0)&lt;br/&gt;
5401&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = 1;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*相当于取d = bp-&gt;b_dev.[[file:conf.h|d_minor]]
*此处涉及[[Rk磁盘交叉存储]]，由于Unix V6后不再使用此机制，在此不作讨论
&lt;/div&gt;
5402&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bp-&gt;b_blkno &gt;= NRKBLK*d) {&lt;br/&gt;
5403&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;b_flags =&lt;nowiki&gt;|&lt;/nowiki&gt; B_ERROR;&lt;br/&gt;
5404&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iodone|iodone]](bp);&lt;br/&gt;
5405&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果缓存块所指定的块号越界,则置B_ERROR标志
*本次I/O就此结束,直接返回
&lt;/div&gt;
5406&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
5407&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp-&gt;av_forw = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*由于bp将被插入[[设备I/O队列]]尾部,其后没有缓存块,故置av_forw为空
&lt;/div&gt;
5408&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]5();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*中断等级变为5级
&lt;/div&gt;
5409&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct devtab|rktab]].d_actf==0)&lt;br/&gt;
5410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct devtab|rktab]].d_actf = bp;&lt;br/&gt;
5411&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&lt;br/&gt;
5412&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct devtab|rktab]].d_actl-&gt;av_forw = bp;&lt;br/&gt;
5413&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct devtab|rktab]].d_actl = bp;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果[[设备I/O队列]]为空,则将bp放在其队首
*否则将bp插入[[设备I/O队列]]队尾
&lt;/div&gt;
5414&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:struct devtab|rktab]].d_active==0)&lt;br/&gt;
5415&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:rkstart|rkstart]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果[[RK磁盘]]尚未启动则启动之
&lt;/div&gt;
5416&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]0();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*开中断
&lt;/div&gt;
5417&nbsp;&nbsp;}&lt;br/&gt;
5418 /* -------------------------*/&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[RK磁盘]]

===Caller===
*[[code:bdevsw]]
*[[code:rkread]]
*[[code:rkwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rkstrategy by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rkwrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*RK 磁盘的驱动函数(写)
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5482&lt;br/&gt;
5483&nbsp;rkwrite(dev)&lt;br/&gt;
5484&nbsp;{&lt;br/&gt;
5485&lt;br/&gt;
5486&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:physio|physio]]([[code:rkstrategy|rkstrategy]], &rrkbuf, dev, B_WRITE);&lt;br/&gt;
5487&nbsp;}&lt;br/&gt;
5488&nbsp;/* ------------------------- */ &lt;br/&gt;
5489&lt;br/&gt;
5490&lt;br/&gt;
5491&lt;br/&gt;
5492&lt;br/&gt;
5493&lt;br/&gt;
5494&lt;br/&gt;
5495&lt;br/&gt;
5496&lt;br/&gt;
5497&lt;br/&gt;
5498&lt;br/&gt;
5499&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[RK磁盘]]
===Caller===
*[[code:cdevsw]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rkwrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:rootdev</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[code:4695 ~ 4699]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:rootdev by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:runrun</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[file:systm.h|systm.h]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:runrun by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:savfp</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0887 ~ 0892]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:savfp by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:savu</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0723 ~ 0750]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:savu by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sbreak</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统调用break的执行函数
*用于使数据段长度变更
*通过[[code:user|u.u_arg]][0]传入1个参数,它是一个未经地址转换的虚拟地址,指向变更后数据段的末块
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3350&nbsp;&lt;br/&gt;
3351&nbsp;/* break system call.&lt;br/&gt;
3352&nbsp;&nbsp;*  -- bad planning: "break" is a dirty word in C.&lt;br/&gt;
3353&nbsp;&nbsp;*/&lt;br/&gt;
3354&nbsp;sbreak()&lt;br/&gt;
3356&nbsp;&nbsp;&nbsp;&nbsp;register a, n, d;&lt;br/&gt;
3357&nbsp;&nbsp;&nbsp;&nbsp;int i;&lt;br/&gt;
3358&lt;br/&gt;
3359&nbsp;&nbsp;&nbsp;&nbsp;/* set n to new data size&lt;br/&gt;
3360&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* set d to new-old&lt;br/&gt;
3361&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* set n to new total size&lt;br/&gt;
3362&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
3363&lt;br/&gt;
3364&nbsp;&nbsp;&nbsp;&nbsp;n = ((([[code:user|u.u_arg]][0]+63)&gt;&gt;6) & 01777);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*n = 传入地址对应的虚拟块号,代表变更后的数据段的末块块号
&lt;/div&gt;
3365&nbsp;&nbsp;&nbsp;&nbsp;if(![[code:user|u.u_sep]])&lt;br/&gt;
3366&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n =- [[code:nseg|nseg]]([[code:user|u.u_tsize]]) * 128;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*语句3365 - 3366乍看起来有些匪夷所思,让我们来揭穿它:
*首先解释一下这两句话的作用: 将n置为 变更后数据段所占的块数
*接着我们来分析一下它是如何实现的:
**3365:[[code:user|u.u_sep]] = 0, 表明进程的共享正文段和数据段以及用户栈公用一个地址映照表,参看[[内存管理]].由于对于pdp11/40而言[[code:user|u.u_sep]]恒定为0,因此该判断成立
**接下来是神奇的3366行:
**前面提到我们的目的是要将n变为数据段所占的块数,那么我们离这个目标有多远呢?
**我们通过下图以一个例子来说明:
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_sbreak.png"/></p>
*相信这幅图片已经足以说明一切问题
*请特别注意途中彩色的字,并仔细理解其含义
*如果你还有疑惑,那么请联系[[内存管理|UNIX内存管理]]以及[[pdp11:内存管理|pdp11内存管理]]加以理解
&lt;/div&gt;
3367&nbsp;&nbsp;&nbsp;&nbsp;if(n &lt; 0)&lt;br/&gt;
3368&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = 0;&lt;br/&gt;
3369&nbsp;&nbsp;&nbsp;&nbsp;d = n - [[code:user|u.u_dsize]];&lt;br/&gt;
3370&nbsp;&nbsp;&nbsp;&nbsp;n =+ USIZE+[[code:user|u.u_ssize]];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*d = 新旧数据段长度之差,即长度变更量
*n = 新的进程图像大小(新数据段大小n + ppda区大小USIZE+ 用户栈大小u.u_ssize )
&lt;/div&gt;
3371&nbsp;&nbsp;&nbsp;&nbsp;if([[code:estabur|estabur]]([[code:user|u.u_tsize]], [[code:user|u.u_dsize]]+d, [[code:user|u.u_ssize]], [[code:user|u.u_sep]]))&lt;br/&gt;
3372&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*通过设置相对地址映照的方式检查进程大小是否越界
*若越界则直接返回
&lt;/div&gt;
3373&nbsp;&nbsp;&nbsp;&nbsp;u.u_dsize =+ d;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若没有越界,则将数据段的大小加上长度变更量
&lt;/div&gt;
3374&nbsp;&nbsp;&nbsp;&nbsp;if(d &gt; 0)&lt;br/&gt;
3375&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bigger;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若数据段变大,跳至3386行
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*以下是数据段不变或变小的处理
&lt;/div&gt;
3376&nbsp;&nbsp;&nbsp;&nbsp;a = [[code:user|u.u_procp]]-&gt;p_addr + n - [[code:user|u.u_ssize]];&lt;br/&gt;
3377&nbsp;&nbsp;&nbsp;&nbsp;i = n;&lt;br/&gt;
3378&nbsp;&nbsp;&nbsp;&nbsp;n = [[code:user|u.u_ssize]];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*a = 新用户栈栈顶指针
*i = 新的进程图像大小
*n = 用户栈大小
&lt;/div&gt;
3379&nbsp;&nbsp;&nbsp;&nbsp;while(n--) {&lt;br/&gt;
3380&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:copyseg|copyseg]](a-d, a);&lt;br/&gt;
3381&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a++;&lt;br/&gt;
3382&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将用户栈上移 &lt;nowiki&gt;|d|&lt;/nowiki&gt; 个字符块
&lt;/div&gt;
3383&nbsp;&nbsp;&nbsp;&nbsp;[[code:expand|expand]](i);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将进程图像缩小为变更后的图像大小,放弃多余的内存区
&lt;/div&gt;
3384&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
3385&lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下是关于数据段扩大的处理
&lt;/div&gt;
3386&nbsp;bigger:&lt;br/&gt;
3387&nbsp;&nbsp;&nbsp;&nbsp;expand(n);&lt;br/&gt;
3388&nbsp;&nbsp;&nbsp;&nbsp;a = [[code:user|u.u_procp]]-&gt;p_addr + n;&lt;br/&gt;
3389&nbsp;&nbsp;&nbsp;&nbsp;n = [[code:user|u.u_ssize]];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*a = 用户栈底指针
*n = 用户栈大小
&lt;/div&gt;
3390&nbsp;&nbsp;&nbsp;&nbsp;while(n--) {&lt;br/&gt;
3391&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a--;&lt;br/&gt;
3392&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:copyseg|copyseg]](a-d, a);&lt;br/&gt;
3393&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将进程图像扩大为n(新的图像大小)
*将原用户栈下移d个字符块,d为数据段增加的块数
&lt;/div&gt;
3394&nbsp;&nbsp;&nbsp;&nbsp;while(d--)&lt;br/&gt;
3395&nbsp;&nbsp;&nbsp;&nbsp;[[code:clearseg|clearseg]](--a);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将数据段新增的区域清零
&lt;/div&gt;
3396&nbsp;}&lt;br/&gt;
3397&nbsp;/* -------------------------*/&lt;br/&gt;
3398&lt;br/&gt;
3399&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存管理]]

===Param===
:(break = 17.)
:&lt;b&gt;sys break; addr&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sbreak by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:schar</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*返回 [[核心态]]地址空间内 由[[code:user|u.u_dirp]]指向的 字节
*一般用于返回 [[code:user|u.u_dirp]]指向的文件路径字符串 的下一个字符
*一般作为参数 由 [[code:namei|namei]] 调用
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7674&nbsp;&lt;br/&gt;
7675&nbsp;/* &lt;br/&gt;
7676&nbsp;&nbsp;* Return the next character from the &lt;br/&gt;
7677&nbsp;&nbsp;* kernel string pointed at by dirp. &lt;br/&gt;
7678&nbsp;&nbsp;*/ &lt;br/&gt;
7679&nbsp;schar() &lt;br/&gt;
7680&nbsp;{ &lt;br/&gt;
7681&nbsp;&lt;br/&gt;
7682&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(*[[code:user|u.u_dirp]]++ & 0377); &lt;br/&gt;
7683&nbsp;} &lt;br/&gt;
7684&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:core]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:schar by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sched</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*进程图像 调入调出 的主循环，由0#进程执行
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1921&nbsp;&lt;br/&gt;
1922&nbsp;/* &lt;br/&gt;
1923&nbsp;&nbsp;* The main loop of the scheduling (swapping) &lt;br/&gt;
1924&nbsp;&nbsp;* process. &lt;br/&gt;
1925&nbsp;&nbsp;* The basic idea is: &lt;br/&gt;
1926&nbsp;&nbsp;*  see if anyone wants to be swapped in; &lt;br/&gt;
1927&nbsp;&nbsp;*  swap out processes until there is room; &lt;br/&gt;
1928&nbsp;&nbsp;*  swap him in; &lt;br/&gt;
1929&nbsp;&nbsp;*  repeat. &lt;br/&gt;
1930&nbsp;&nbsp;* Although it is not remarkably evident, the basic &lt;br/&gt;
1931&nbsp;&nbsp;* synchronization here is on the runin flag, which is &lt;br/&gt;
1932&nbsp;&nbsp;* slept on and is set once per second by the clock routine.  &lt;br/&gt;
1933&nbsp;&nbsp;* Core shuffling therefore take place once per second. &lt;br/&gt;
1934&nbsp;&nbsp;* &lt;br/&gt;
1935&nbsp;&nbsp;* panic: swap error -- IO error while swapping. &lt;br/&gt;
1936&nbsp;&nbsp;* this is the one panic that should be &lt;br/&gt;
1937&nbsp;&nbsp;* handled in a less drastic way. Its &lt;br/&gt;
1938&nbsp;&nbsp;* very hard. &lt;br/&gt;
1939&nbsp;&nbsp;*/ &lt;br/&gt;
1940&nbsp;sched() &lt;br/&gt;
1941&nbsp;{ &lt;br/&gt;
1942&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|struct proc]] *p1; &lt;br/&gt;
1943&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:proc|struct proc]] *rp; &lt;br/&gt;
1944&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register a, n; &lt;br/&gt;
1945 &lt;br/&gt;
1946&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
1947&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* find user to swap in &lt;br/&gt;
1948&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* of users ready, select one out longest &lt;br/&gt;
1949&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
1950 &lt;br/&gt;
1951&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
1952 &lt;br/&gt;
1953&nbsp;sloop: &lt;br/&gt;
1954&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runin++; &lt;br/&gt;
1955&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&runin, PSWP); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置runin
*在runin上睡眠,参看[[睡眠原因]]
&lt;/div&gt;
1956 &lt;br/&gt;
1957&nbsp;loop: &lt;br/&gt;
1958&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级设为6
&lt;/div&gt;
1959&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = -1; &lt;br/&gt;
1960&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(rp = &[[code:proc|proc]][0]; rp &lt; &[[code:proc|proc]][NPROC]; rp++) &lt;br/&gt;
1961&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;p_stat==SRUN && (rp-&gt;p_flag&SLOAD)==0 && &lt;br/&gt;
1962&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_time &gt; n) { &lt;br/&gt;
1963&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1 = rp; &lt;br/&gt;
1964&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = rp-&gt;p_time; &lt;br/&gt;
1965&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:proc|proc数组]],寻找处于盘交换区上的就绪态进程中,在盘交换区呆了时间最长的进程
&lt;/div&gt;
1966&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n == -1) { &lt;br/&gt;
1967&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runout++; &lt;br/&gt;
1968&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&runout, PSWP); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若未能搜到盘交换区上的就绪态进程,则
**置runout
**在runout上睡眠,参见[[睡眠原因]]
&lt;/div&gt;
1969&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
1970&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
1971 &lt;br/&gt;
1972&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
1973&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* see if there is core for that process &lt;br/&gt;
1974&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
1975 &lt;br/&gt;
1976&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
1977&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = p1; &lt;br/&gt;
1978&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = rp-&gt;p_size; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置a为进程图像的大小(暂不包含共享正文段)
&lt;/div&gt;
1979&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rp=rp-&gt;p_textp) != NULL) &lt;br/&gt;
1980&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;x_ccount == 0) &lt;br/&gt;
1981&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a =+ rp-&gt;x_size; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若该进程图像有共享正文段,且该正文段还未被载入内存,则将a再加上共享正文段大小
&lt;/div&gt;
1982&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((a=[[code:malloc|malloc]](coremap, a)) != NULL) &lt;br/&gt;
1983&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto found2; &lt;br/&gt;
1984 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*为待调入的进程图像分配空间,若分配成功,则转到2031行
*否则继续
&lt;/div&gt;
1985&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
1986&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* none found, &lt;br/&gt;
1987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* look around for easy core &lt;br/&gt;
1988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
1989 &lt;br/&gt;
1990&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl6]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
&lt;/div&gt;
1991&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(rp = &[[code:proc|proc]][0]; rp &lt; &[[code:proc|proc]][NPROC]; rp++) &lt;br/&gt;
1992&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rp-&gt;p_flag&&lt;nowiki&gt;(SSYS|SLOCK|SLOAD)&lt;/nowiki&gt;)==SLOAD && &lt;br/&gt;
1993&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(rp-&gt;p_stat == SWAIT &lt;nowiki&gt;||&lt;/nowiki&gt; rp-&gt;p_stat==SSTOP)) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:proc|proc数组]],寻找内存中状态为SWAIT或SSTOP 且 不含SSYS或SLOCK标志 的进程
*若能找到,则转到2021行
&lt;/div&gt;
1994&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto found1; &lt;br/&gt;
1995 &lt;br/&gt;
1996&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
1997&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* no easy core, &lt;br/&gt;
1998&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* if this process is deserving, &lt;br/&gt;
1999&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* look around for &lt;br/&gt;
2000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* oldest process in core &lt;br/&gt;
2001&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
2002 &lt;br/&gt;
2003&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n &lt; 3) &lt;br/&gt;
2004&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto sloop; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若之前选中的待调入进程在硬盘的驻留时间没有到3秒
**则跳转至1953行
**置runin标志
**在runin上睡眠,参看[[睡眠原因]]
*否则继续
&lt;/div&gt;
2005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = -1; &lt;br/&gt;
2006&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(rp = &[[code:proc|proc]][0]; rp &lt; &[[code:proc|proc]][NPROC]; rp++) &lt;br/&gt;
2007&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rp-&gt;p_flag&&lt;nowiki&gt;(SSYS|SLOCK|SLOAD)&lt;/nowiki&gt;)==SLOAD && &lt;br/&gt;
2008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(rp-&gt;p_stat==SRUN &lt;nowiki&gt;||&lt;/nowiki&gt; rp-&gt;p_stat==SSLEEP) &&     &lt;br/&gt;
2009&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_time &gt; n) { &lt;br/&gt;
2010&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1 = rp; &lt;br/&gt;
2011&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = rp-&gt;p_time; &lt;br/&gt;
2012&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从内存 找到 状态为SRUN或SSLEEP 且 不含SSYS或SLOCK标志 且 驻留时间最长 的进程
&lt;/div&gt;
2013&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n &lt; 2) &lt;br/&gt;
2014&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto sloop; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若找不到符合上述条件且在内存驻留时间超过2秒的进程
**则跳转至1953行
**置runin标志
**在runin上睡眠,参看[[睡眠原因]]
*否则将找到的进程调出
&lt;/div&gt;
2015&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = p1; &lt;br/&gt;
2016 &lt;br/&gt;
2017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
2018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* swap user out &lt;br/&gt;
2019&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
2020 &lt;br/&gt;
2021&nbsp;found1: &lt;br/&gt;
2022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
2023&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_flag =& ~SLOAD; &lt;br/&gt;
2024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:xswap|xswap]](rp, 1, 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*去SLOAD标志
*将进程调出到盘交换区
&lt;/div&gt;
2025&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
2026 &lt;br/&gt;
2027&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
2028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* swap user in &lt;br/&gt;
2029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
2030 &lt;br/&gt;
2031&nbsp;found2: &lt;br/&gt;
2032&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rp=p1-&gt;p_textp) != NULL) { &lt;br/&gt;
2033&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp-&gt;x_ccount == 0) { &lt;br/&gt;
2034&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:swap|swap]](rp-&gt;x_daddr, a, rp-&gt;x_size, B_READ))   &lt;br/&gt;
2035&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto swaper; &lt;br/&gt;
2036&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;x_caddr = a; &lt;br/&gt;
2037&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a =+ rp-&gt;x_size; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若要调入的进程有共享正文段,且尚未被调入内存,则将其先调入内存
*若调入失败,则直接跳至2050行,抛出错误
*否则更新相应信息
**共享正文段起始地址置为1982行分配所得的开始地址a
**将共享正文段的结尾地址赋给a
&lt;/div&gt;
2038&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2039&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;x_ccount++; &lt;br/&gt;
2040&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2041&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = p1; &lt;br/&gt;
2042&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:swap|swap]](rp-&gt;p_addr, a, rp-&gt;p_size, B_READ)) &lt;br/&gt;
2043&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto swaper; &lt;br/&gt;
2044&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]](swapmap, (rp-&gt;p_size+7)/8, rp-&gt;p_addr); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*调入除共享正文段外的进程图像
*若调入失败,则直接跳至2050行,抛出错误
*否则释放盘交换区空间
&lt;/div&gt;
2045&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_addr = a; &lt;br/&gt;
2046&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; SLOAD; &lt;br/&gt;
2047&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_time = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*更新进程[[code:proc|proc结构]]的相关信息
**ppda区首址置为a
**标志位置上SLOAD
**内存滞留时间清零
&lt;/div&gt;
2048&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
2049 &lt;br/&gt;
2050&nbsp;swaper: &lt;br/&gt;
2051&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("swap error"); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*抛出错误
&lt;/div&gt;
2052 } &lt;br/&gt;
2053 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_sched.png"/></p>

===Ref===
*[[进程调度]]


===Caller===
*[[code:main]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sched by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:seek</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*seek 的系统调用函数
*移动 指定文件 的偏移指针
*使用3个隐式参数 : fildes, offset, ptrname
**fildes : 文件描述号，保存在 [[skill:u.u_ar0|u.u_ar0]][R0]
**offset : 移动的增量，保存在 [[code:user|u.u_arg[0]]]
**ptrname : 模式位，保存在 [[code:user|u.u_arg[1]]]
***(以下为方便叙述&lt;br/&gt;设px为 对应x模式位的 文件偏移指针&lt;br/&gt;设 当前文件偏移为now&lt;br/&gt;设当前文件大小为size)
***0,1,2 为 字节模式
***3,4,5 为 块模式
***0 : p0(无符号数) = offset
***1 : p1 = now + offset
***2 : p2 = size + offset
***3 : p3(无符号数) = p0 * 512 
***4 : p4 = p1 * 512
***5 : p5 = p2 * 512
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5857 &lt;br/&gt;
5858&nbsp;/* &lt;br/&gt;
5859&nbsp;&nbsp;* seek system call &lt;br/&gt;
5860&nbsp;&nbsp;*/ &lt;br/&gt;
5861&nbsp;seek() &lt;br/&gt;
5862&nbsp;{ &lt;br/&gt;
5863&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int n[2]; &lt;br/&gt;
5864&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *[[code:struct file|fp]], t; &lt;br/&gt;
5865 &lt;br/&gt;
5866&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]] = [[code:getf|getf]]([[skill:u.u_ar0|u.u_ar0]][R0]); &lt;br/&gt;
5867&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|fp]] == NULL) &lt;br/&gt;
5868&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*fp ← 根据 fildes 得到对应的 [[code:struct file|file结构]]
&lt;/div&gt;
5869&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct file|fp]]-&gt;f_flag&FPIPE) { &lt;br/&gt;
5870&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ESPIPE; &lt;br/&gt;
5871&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
5872&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若是管道文件(不支持[[code:seek|seek]]操作)，抛出错误
**[[错误代码]] : ESPIPE
&lt;/div&gt;
5873&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = [[code:user|u.u_arg]][1]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*t ← ptrname
&lt;/div&gt;
5874&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(t &gt; 2) { &lt;br/&gt;
5875&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[1] = [[code:user|u.u_arg]][0]&lt;&lt;9; &lt;br/&gt;
5876&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[0] = [[code:user|u.u_arg]][0]&gt;&gt;7; &lt;br/&gt;
5877&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(t == 3) &lt;br/&gt;
5878&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[0] =& 0777; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*t = 3,4,5 ，n = [[code:user|u.u_arg]][0] * 512
*t = 3 时，清R[0]的最高位(即符号位),因为R[0]表示的是无符号数
&lt;/div&gt;
5879&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { &lt;br/&gt;
5880&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[1] = [[code:user|u.u_arg]][0]; &lt;br/&gt;
5881&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[0] = 0; &lt;br/&gt;
5882&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(t!=0 && n[1]&lt;0) &lt;br/&gt;
5883&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[0] = -1; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*t=0,1,2 ，n = [[code:user|u.u_arg]][0]
*t=1,2 ，若为负数，将负数扩展到双字
&lt;/div&gt;
5884&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5885&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(t) { &lt;br/&gt;
5886 &lt;br/&gt;
5887&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1: &lt;br/&gt;
5888&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 4: &lt;br/&gt;
5889&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[0] =+ [[code:struct file|fp]]-&gt;f_offset[0]; &lt;br/&gt;
5890&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]](n, [[code:struct file|fp]]-&gt;f_offset[1]); &lt;br/&gt;
5891&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*t=1,4&lt;br/&gt;n = n + now
&lt;/div&gt;
5892 &lt;br/&gt;
5893&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default: &lt;br/&gt;
5894&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[0] =+ [[code:struct file|fp]]-&gt;f_inode-&gt;i_size0&0377; &lt;br/&gt;
5895&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]](n, [[code:struct file|fp]]-&gt;f_inode-&gt;i_size1); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*t=2,5&lt;br/&gt;n = n + size
&lt;/div&gt;
5896 &lt;br/&gt;
5897&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 0: &lt;br/&gt;
5898&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 3: &lt;br/&gt;
5899&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*t=0,3&lt;br/&gt;无操作
&lt;/div&gt;
5900&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5901&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]]-&gt;f_offset[1] = n[1]; &lt;br/&gt;
5902&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct file|fp]]-&gt;f_offset[0] = n[0]; &lt;br/&gt;
5903&nbsp;} &lt;br/&gt;
5904&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存打开文件结构]]
*[[文件系统]]

===Param===
:(seek = 19.)
:(file descriptor in r0)
:&lt;b&gt;sys seek; offset; ptrname&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:seek by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:setgid</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*设置组ID
*共传入一个参数，设为id
*id的低字节部分为 欲设置的组ID
*参看[[权限管理]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3459&nbsp;&lt;br/&gt;
3460&nbsp;setgid() &lt;br/&gt;
3461&nbsp;{ &lt;br/&gt;
3462&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register gid; &lt;br/&gt;
3463&nbsp;&lt;br/&gt;
3464&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gid = [[skill:u.u_ar0|u.u_ar0]][R0].lobyte; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*取输入参数的低字节(低8位),作为欲设置的组ID gid
*此处使用了[[编程技巧#无名结构|编程技巧之无名结构]]
*结构体定义在 [[file:param.h|param.h]] 0180行
&lt;/div&gt;
3465&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u]].u_rgid == gid.lobyte&lt;nowiki&gt; ||&lt;/nowiki&gt; [[code:suser|suser]]()) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 真实组ID==gid 或 当前用户具有超级用户权限，继续进行
*此处使用gid.lobyte，为保证gid取低字节8位，让比较正常进行
&lt;/div&gt;
3466&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_gid = gid; &lt;br/&gt;
3467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_rgid = gid; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置以下量 为 gid
**组ID u_gid
**真实组ID u_rgid
*参看[[权限管理]]
* 此处赋值 gid 进行了隐式类型转换，传入u_gid、u_rgid的实际是gid 的低字节
&lt;/div&gt;
3468&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3469&nbsp;} &lt;br/&gt;
3470&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[权限管理]]
*[[编程技巧#无名结构|编程技巧之无名结构]]

===Param===
:(setgid = 46.; not in assembler)
:(group ID in r0)
:&lt;b&gt;sys setgid&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:setgid by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:setpri</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*计算并设置指定进程的[[进程优先级]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2149&nbsp;&lt;br/&gt;
2150&nbsp;/* &lt;br/&gt;
2151&nbsp;&nbsp;* Set user priority. &lt;br/&gt;
2152&nbsp;&nbsp;* The rescheduling flag (runrun) &lt;br/&gt;
2153&nbsp;&nbsp;* is set if the priority is higher &lt;br/&gt;
2154&nbsp;&nbsp;* than the currently running process. &lt;br/&gt;
2155&nbsp;&nbsp;*/ &lt;br/&gt;
2156&nbsp;setpri(up) &lt;br/&gt;
2157&nbsp;{ &lt;br/&gt;
2158&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *pp, p; &lt;br/&gt;
2159 &lt;br/&gt;
2160&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pp = up; &lt;br/&gt;
2161&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = (pp-&gt;p_cpu & 0377)/16; &lt;br/&gt;
2162&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p =+ PUSER + pp-&gt;p_nice; &lt;br/&gt;
2163&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p &gt; 127) &lt;br/&gt;
2164&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = 127; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程优先级 p = min{127,(p-cpu/16 + PUSER + p-nice)}
*参看 [[进程优先级]]
&lt;/div&gt;
2165&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p &gt; curpri) &lt;br/&gt;
2166&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runrun++; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 p &gt; curpri (优先级小于现行进程的优先级)，则置runrun申请进程切换
*看似这个结论很不合逻辑，应当是优先级高于现行进程时才置runrun申请进程切换&lt;br/&gt;关于这点的解释，参看 [[进程调度#runrun]]
&lt;/div&gt;
2167&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pp-&gt;p_pri = p; &lt;br/&gt;
2168&nbsp;} &lt;br/&gt;
2169&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程调度]]

===Caller===
*[[code:trap]]
*[[code:clock]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:setpri by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:setrun</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*设置进程为就绪态
*如有需要的话将进程调入内存
*传入一个参数p
**p指向一个进程的[[code:proc|proc结构]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2129&lt;br/&gt;
2130&nbsp;/* &lt;br/&gt;
2131&nbsp;&nbsp;* Set the process running; &lt;br/&gt;
2132&nbsp;&nbsp;* arrange for it to be swapped in if necessary. &lt;br/&gt;
2133&nbsp;&nbsp;*/ &lt;br/&gt;
2134&nbsp;setrun(p) &lt;br/&gt;
2135&nbsp;{ &lt;br/&gt;
2136&nbsp;&nbsp;&nbsp;&nbsp;register [[code:proc|struct proc]] *rp; &lt;br/&gt;
2137&lt;br/&gt;
2138&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]] = p; &lt;br/&gt;
2139&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]-&gt;p_wchan = 0; &lt;br/&gt;
2140&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]-&gt;p_stat = SRUN; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将睡眠原因置为0
*将进程状态置为SRUN(就绪状态)
&lt;/div&gt;
2141&nbsp;&nbsp;&nbsp;&nbsp;if([[code:proc|rp]]-&gt;p_pri &lt; curpri) &lt;br/&gt;
2142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runrun++;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若进程优先级比当前进程要高,则置runrun标志,以等待进程调度
**参看 [[进程调度#runrun]]
&lt;/div&gt;
2143&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(runout != 0 && ([[code:proc|rp]]-&gt;p_flag&SLOAD) == 0) { &lt;br/&gt;
2144&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runout = 0;&lt;br/&gt;
2145&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&runout);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若runout已被置,且当前进程图象不在内存中
**则清runout标志,并唤醒因runout睡眠的0#进程,以调用[[code:sched|sched]]函数将进程图象调入内存
*关于为何唤醒的是0#进程,参看[[进程调度|进程调度之0#进程]]
&lt;/div&gt;
2146&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2147&nbsp;} &lt;br/&gt;
2148 /* ------------------------- */&lt;br/&gt;
2149 &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[进程调度]]
===Caller===
*[[code:wakeup]]
*[[code:exit]]
*[[code:wait]]
*[[code:psignal]]
*[[code:ptrace]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:setrun by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:setuid</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*设置用户ID
*共传入一个参数，设为id
*id的低字节部分为 欲设置的用户ID
*参看[[权限管理]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3438&nbsp;&lt;br/&gt;
3439&nbsp;setuid()  &lt;br/&gt;
3440&nbsp;{  &lt;br/&gt;
3441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register uid;  &lt;br/&gt;
3442&nbsp;&lt;br/&gt;
3443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uid = [[skill:u.u_ar0|u.u_ar0]][R0].lobyte;  &lt;br/&gt;
&lt;div class="wikinote"&gt;
*取输入参数的低字节(低8位),作为欲设置的用户ID uid
*此处使用了[[编程技巧#无名结构|编程技巧之无名结构]]
*结构体定义在 [[file:param.h|param.h]] 0180行
&lt;/div&gt;
3444&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u]].u_ruid == uid.lobyte&lt;nowiki&gt; || &lt;/nowiki&gt;[[code:suser|suser]]()) {  &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 真实用户ID==uid 或 当前用户具有超级用户权限，继续进行
*此处使用uid.lobyte，为保证uid取低字节8位，让比较正常进行
&lt;/div&gt;
3445&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_uid = uid; &lt;br/&gt;
3446&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_procp-&gt;[[code:proc|p_uid]] = uid; &lt;br/&gt;
3447&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_ruid = uid; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置以下量 为 uid
**用户ID u_uid
**进程的用户ID p_uid
**真实用户ID u_ruid
*参看[[权限管理]]
* 此处赋值 uid 进行了隐式类型转换，传入u_uid、p_uid、u_ruid的实际是uid 的低字节
&lt;/div&gt;
3448&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  &lt;br/&gt;
3449&nbsp;}  &lt;br/&gt;
3450&nbsp;/* ------------------------- */  &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[权限管理]]

===Param===
:(setuid = 23.)
:(user ID in r0)
:&lt;b&gt;sys setuid&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:setuid by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sgtty</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*用来调用指定设备对应的d_sgtty函数
*传入一个参数:
**t:一个缓存区，用来交换tty状态
*隐式参数:
**通过R0传入指定设备的字符设备装载文件的文件描述号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8194&nbsp;/* Stuff common to stty and gtty.&lt;br/&gt;
8196&nbsp;&nbsp;* device routine.&lt;br/&gt;
8197&nbsp;&nbsp;* v is 0 for stty; the parameters are taken from u.u_arg\[].&lt;br/&gt;
8198&nbsp;&nbsp;* c is non-zero for gtty and is the place in which the&lt;br/&gt;
8199&nbsp;&nbsp;* device routines place their information.&lt;br/&gt;
8200&nbsp;&nbsp;*/&lt;br/&gt;
8201&nbsp;sgtty(v)&lt;br/&gt;
8202&nbsp;int *v;&lt;br/&gt;
8203&nbsp;{&lt;br/&gt;
8204&nbsp;&nbsp;&nbsp;&nbsp;register struct [[code:struct file|file]] *fp;&lt;br/&gt;
8205&nbsp;&nbsp;&nbsp;&nbsp;register struct [[code:struct inode|inode]] *ip;&lt;br/&gt;
8206&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:struct file|fp]] = [[code:getf|getf]]([[code:user|u.u_ar0]][R0])) == NULL)&lt;br/&gt;
8207&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据传入的文件描述号找到其对应的[[code:struct file|file结构]]
**若不能找到便直接返回
&lt;/div&gt;
8208&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:struct file|fp]]-&gt;f_inode;&lt;br/&gt;
8209&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:struct inode|ip]]-&gt;i_mode&IFMT) != IFCHR) {&lt;br/&gt;
8210&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ENOTTY;&lt;br/&gt;
8211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据[[code:struct file|file结构]]找到对应的文件[[code:struct inode|INODE]]
*若该INODE不是[[文件系统#装载文件系统|字符设备装载INODE]]
**抛出错误,[[错误代码]]:ENOTTY
&lt;/div&gt;
8212&nbsp;}&lt;br/&gt;
8213&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:cdevsw|cdevsw]][ip-&gt;i_addr[0][[skill:.d_major|.d_major]] ].d_sgtty)(ip-&gt;i_addr[0],v);
&lt;div class="wikinote"&gt;
*根据[[文件系统#装载文件系统|字符设备装载INODE]]找到设备号,并启动该设备的d_sgtty函数
*比如[[code:klsgtty|klsgtty]]
&lt;/div&gt;
8214&nbsp;}&lt;br/&gt;
8215&nbsp;/* -------------------------  */&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:gtty]]
*[[code:stty]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sgtty by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:signal</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*传入两个参数
**tp:终端号
**sig:信号类型号
*向终端号为tp的所有进程发送类型为sig的信号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3941&lt;br/&gt;
3942&nbsp;/*&lt;br/&gt;
3943&nbsp;&nbsp;* Send the specified signal to&lt;br/&gt;
3944&nbsp;&nbsp;* all processes with 'tp' as its&lt;br/&gt;
3945&nbsp;&nbsp;* controlling teletype.&lt;br/&gt;
3946&nbsp;&nbsp;* Called by tty.c for quits and&lt;br/&gt;
3947&nbsp;&nbsp;* interrupts.&lt;br/&gt;
3948&nbsp;&nbsp;*/&lt;br/&gt;
3949&nbsp;signal(tp, sig)&lt;br/&gt;
3950&nbsp;{&lt;br/&gt;
3951&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *p;&lt;br/&gt;
3952&lt;br/&gt;
3953&nbsp;&nbsp;&nbsp;&nbsp;for(p = &[[code:struct proc|proc]][0]; p &lt; &[[code:struct proc|proc]][NPROC]; p++)&lt;br/&gt;
3954&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct proc|p-&gt;p_ttyp]] == tp)&lt;br/&gt;
3955&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:psignal|psignal]](p, sig);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历PROC数组,搜索终端号为tp的进程
*对于每个搜索到的进程,向其发送sig类型的信号
&lt;/div&gt;
3956&nbsp;}&lt;br/&gt;
3957&nbsp;/* -------------------------   */&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[信号系统]]
===Caller===
*[[code:ttyinput]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:signal by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sleep</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*按照指定的优先权使进程进入睡眠状态,并且调用swtch进行进程切换调度
*传入2个参数 , chan ,pri
**chan: [[睡眠原因]]
**pri: [[睡眠优先级]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2054&lt;br/&gt;
2055&nbsp;/*&lt;br/&gt;
2056&nbsp;&nbsp;* Give up the processor till a wakeup occurs&lt;br/&gt;
2057&nbsp;&nbsp;* on chan, at which time the process&lt;br/&gt;
2059&nbsp;&nbsp;* The most important effect of pri is that when&lt;br/&gt;
2060&nbsp;&nbsp;* pri&lt;0 a signal cannot disturb the sleep;&lt;br/&gt;
2061&nbsp;&nbsp;* if the pri&gt;=0 signals will be processed.&lt;br/&gt;
2062&nbsp;&nbsp;* Callers of this routine must be prepared for&lt;br/&gt;
2063&nbsp;&nbsp;* premature return, and check that the reason for&lt;br/&gt;
2064&nbsp;&nbsp;* sleeping has gone away.&lt;br/&gt;
2065&nbsp;&nbsp;*/&lt;br/&gt;
2066&nbsp;sleep(chan, pri)&lt;br/&gt;
2067&nbsp;{&lt;br/&gt;
2068&nbsp;&nbsp;&nbsp;&nbsp;register *rp, s;&lt;br/&gt;
2069&lt;br/&gt;
2070&nbsp;&nbsp;&nbsp;&nbsp;s = [[PS]]-&gt;[[skill:integ|integ]];&lt;br/&gt;
2071&nbsp;&nbsp;&nbsp;&nbsp;rp = [[code:user|u]].u_procp;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将s置为当前[[处理机状态字]],以待将来恢复时用
*将rp指向当前进程的[[code:proc|proc 结构]]
&lt;/div&gt;
2072&nbsp;&nbsp;&nbsp;&nbsp;if(pri &gt;= 0) {&lt;br/&gt;
2073&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:issig|issig]]())&lt;br/&gt;
2074&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto psig;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*当进程睡眠优先权大于等于0时,在睡眠前先判断有无 [[信号系统|信号]],若有,则进入 信号处理
&lt;/div&gt;
2075&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]6();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
*此处关中断的原因:
**为了防止在2076与2077之间由于中断而插入[[code:wakeup|wakeup(chan)]],将p_wchan置回为0
**接着2007行继续会进入睡眠状态,于是造成进程的睡眠原因为0,从而永远都无法被唤醒
&lt;/div&gt;
2076&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]-&gt;p_wchan = chan;&lt;br/&gt;
2077&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]-&gt;p_stat = SWAIT;&lt;br/&gt;
2078&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]-&gt;p_pri = pri;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*睡眠原因置为 chan
*状态置为低优先权睡眠状态,参看[[进程优先级]]
*进程优先权置为 pri
&lt;/div&gt;
2079&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]0();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
2080&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(runin != 0) {&lt;br/&gt;
2081&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runin = 0;&lt;br/&gt;
2082&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&runin);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果runin被置,清runin标志,唤醒在runin上睡眠的0#进程,执行进程图象调入调出的工作
*关于为何唤醒的是0#进程,参看[[进程调度# 0#进程|进程调度之0#进程]]
&lt;/div&gt;
2083&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2084&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:swtch|swtch]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用swtch进行 [[进程调度]]
&lt;/div&gt;
2085&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:issig|issig]]())&lt;br/&gt;
2086&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto psig;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*在结束时再判断一下是否有 信号
*若有,则进入 信号处理
&lt;/div&gt;
2087&nbsp;&nbsp;&nbsp;&nbsp;} else {&lt;br/&gt;
2088&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]6();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
*此处关中断的原因同2075行
&lt;/div&gt;
2089&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]-&gt;p_wchan = chan;&lt;br/&gt;
2090&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]-&gt;p_stat = SSLEEP;&lt;br/&gt;
2091&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]-&gt;p_pri = pri;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若进程睡眠优先权小于0 
*则将睡眠原因置为chan
*将进程状态置为高优先级睡眠状态,参见[[进程优先级]]
*将进程优先权置为pri
&lt;/div&gt;
2092&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]0();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
2093&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:swtch|swtch]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用swtch进行 [[进程调度]]
&lt;/div&gt;
2094&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2095&nbsp;&nbsp;&nbsp;&nbsp;[[处理机状态字|PS-&gt;integ]] = s;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*睡眠结束并且被选中上台时恢复睡眠前的处理机状态字
&lt;/div&gt;
2096&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
2097&lt;br/&gt;
2098&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
2099&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If priority was low (&gt;=0) and&lt;br/&gt;
2100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* there has been a signal,&lt;br/&gt;
2101&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* execute non-local goto to&lt;br/&gt;
2102&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the qsav location.&lt;br/&gt;
2103&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (see trap1/trap.c)&lt;br/&gt;
2104&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
2105&nbsp;psig:&lt;br/&gt;
2106&nbsp;&nbsp;&nbsp;&nbsp;[[code:aretu|aretu]]([[code:user|u]].u_qsav);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*从 [[code:user|u.u_qsav]] 恢复R5,R6
*用途 参看 [[code:trap1|trap1]] 2847注解
&lt;/div&gt;
2107&nbsp;}&lt;br/&gt;
2108&nbsp;/*--------------------------  */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[睡眠原因]]
*[[睡眠优先级]]

===Caller===
*[[code:sched]]
*[[code:exec]]
*[[code:wait]]
*[[code:ptrace]]
*[[code:getblk]]
*[[code:iowait]]
*[[code:swap]]
*[[code:physio]]
*[[code:sslep]]
*[[code:alloc]]
*[[code:free]]
*[[code:ialloc]]
*[[code:iget]]
*[[code:readp]]
*[[code:writep]]
*[[code:plock]]
*[[code:wflushtty]]
*[[code:canon]]
*[[code:ttwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sleep by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:smdate</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*设置 文件 的修改时间
*输入2个参数
**文件路径 : 由[[code:user|u.u_dirp]]指向(在[[code:owner|owner]]中使用)
**欲设置的时间 : 保存在 [[code:user|u.u_arg[R0]]] [[code:user|u.u_arg[R1]]]
*注意
**整个函数 被注释起来，函数入口也被取消，这个系统调用被取消，原因如下：&lt;br/&gt;这个函数 违背了 文件修改时间的原则(修改 按 时间顺序进行)，用户可以随意设置修改时间
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3587&lt;br/&gt;
3588&nbsp;/*&lt;br/&gt;
3589&nbsp;&nbsp;* Change modified date of file:&lt;br/&gt;
3590&nbsp;&nbsp;* time to r0-r1; sys smdate; file&lt;br/&gt;
3591&nbsp;&nbsp;* This call has been withdrawn because it messes up&lt;br/&gt;
3592&nbsp;&nbsp;* incremental dumps (pseudo-old files aren’t dumped).&lt;br/&gt;
3593&nbsp;&nbsp;* It works though and you can uncomment it if you like.&lt;br/&gt;
3594&lt;br/&gt;
3595&nbsp;smdate()&lt;br/&gt;
3596&nbsp;{&lt;br/&gt;
3597&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|struct inode]] *ip;&lt;br/&gt;
3598&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int *tp;&lt;br/&gt;
3599&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int tbuf[2];&lt;br/&gt;
3600&lt;br/&gt;
3601&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((ip = [[code:owner|owner]]()) == NULL)&lt;br/&gt;
3602&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
3603&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; IUPD;&lt;br/&gt;
3604&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = &tbuf[2];&lt;br/&gt;
3605&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--tp = [[skill:u.u_ar0|u.u_ar0]][R1];&lt;br/&gt;
3606&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--tp = [[skill:u.u_ar0|u.u_ar0]][R0];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*tbuf[1] ← [[skill:u.u_ar0|u.u_ar0]][R1]
*tbuf[0] ← [[skill:u.u_ar0|u.u_ar0]][R0]
&lt;/div&gt;
3607&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iupdat|iupdat]](ip, tp);&lt;br/&gt;
3608&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_flag =& ~IUPD;&lt;br/&gt;
3609&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](ip);&lt;br/&gt;
3610&nbsp;}&lt;br/&gt;
3611&nbsp;*/&lt;br/&gt;
3612&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:smdate by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:smount</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统调用 mount 的实现函数
*使用3个隐式参数: special; name; rwflag
**special : 设备装载文件路径，如 "/etc/rk2"，保存在[[code:user|u.u_arg[0]]]和[[code:user|u.u_dirp]](参看[[code:trap|trap]] 2770)
**name : 装载点文件路径，保存在[[code:user|u.u_arg[1]]]
**rwflag : 读/写模式，保存在[[code:user|u.u_arg[2]]]
*该函数将 special指定的子文件系统 装载到 name 指定的装载点，模式位rwflag
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6082 &lt;br/&gt;
6083&nbsp;/* &lt;br/&gt;
6084&nbsp;&nbsp;* the mount system call. &lt;br/&gt;
6085&nbsp;&nbsp;*/ &lt;br/&gt;
6086&nbsp;smount() &lt;br/&gt;
6087&nbsp;{ &lt;br/&gt;
6088&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int d; &lt;br/&gt;
6089&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *ip; &lt;br/&gt;
6090&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct mount|struct mount]] *mp, *smp; &lt;br/&gt;
6091&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern uchar; &lt;br/&gt;
6092 &lt;br/&gt;
6093&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d = [[code:getmdev|getmdev]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:getmdev|getmdev]] &lt;br/&gt;从 [[code:user|u.u_dirp]] 即special 指定的INODE(块设备装载INODE) 提取 设备号d
&lt;/div&gt;
6094&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]]) &lt;br/&gt;
6095&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6096&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_dirp]] = [[code:user|u.u_arg]][1]; &lt;br/&gt;
6097&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:namei|namei]](&[[code:uchar|uchar]], 0); &lt;br/&gt;
6098&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip == NULL) &lt;br/&gt;
6099&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip ← name 对应的INODE
&lt;/div&gt;
6100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_count!=1  &lt;nowiki&gt;||&lt;/nowiki&gt; (ip-&gt;i_mode&(IFBLK&IFCHR))!=0) &lt;br/&gt;
6101&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下情况 转到出错处理
**ip被其他进程使用(ip-&gt;i_count!=1)
**ip不是设备装载INODE
&lt;/div&gt;
6102&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp = NULL; &lt;br/&gt;
6103&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(mp = &[[code:struct mount|mount]][0]; mp &lt; &[[code:struct mount|mount]][NMOUNT]; mp++) { &lt;br/&gt;
6104&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(mp-&gt;m_bufp != NULL) { &lt;br/&gt;
6105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(d == mp-&gt;m_dev) &lt;br/&gt;
6106&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
6107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
6108&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(smp == NULL) &lt;br/&gt;
6109&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp = mp; &lt;br/&gt;
6110&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:struct mount|mount[]]]，找到 空闲项(mp-&gt;m_bufp == NULL)
**若已有 对应设备的加载项，则转到出错处理
&lt;/div&gt;
6111&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(smp == NULL) &lt;br/&gt;
6112&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
6113&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][ d[[skill:.d_major|.d_major]] ].d_open)(d, !u.u_arg[2]); &lt;br/&gt;
6114&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(u.u_error) &lt;br/&gt;
6115&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*启动对应设备
*对 RK磁盘 没有作用
*至于 传入的参数 原因不明，列入[[遗留问题]]
&lt;/div&gt;
6116&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mp = [[code:bread|bread]](d, 1); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*读出 d设备的超级块
&lt;/div&gt;
6117&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(u.u_error) { &lt;br/&gt;
6118&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](mp); &lt;br/&gt;
6119&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out1; &lt;br/&gt;
6120&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
6121&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp-&gt;m_inodp = ip; &lt;br/&gt;
6122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp-&gt;m_dev = d; &lt;br/&gt;
6123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp-&gt;m_bufp = [[code:getblk|getblk]](NODEV); &lt;br/&gt;
6124&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bcopy|bcopy]](mp-&gt;b_addr, smp-&gt;m_bufp-&gt;b_addr, 256); &lt;br/&gt;
6125&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp = smp-&gt;m_bufp-&gt;b_addr; &lt;br/&gt;
6126&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp-&gt;s_ilock = 0; &lt;br/&gt;
6127&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp-&gt;s_flock = 0; &lt;br/&gt;
6128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smp-&gt;s_ronly = [[code:user|u.u_arg]][2] & 1; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 加载块 smp 相关参数
&lt;/div&gt;
6129&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](mp); &lt;br/&gt;
6130&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_flag =&lt;nowiki&gt;|&lt;/nowiki&gt; IMOUNT; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip 置 IMOUNT 标志
&lt;/div&gt;
6131&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](ip); &lt;br/&gt;
6132&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6133 &lt;br/&gt;
6134&nbsp;out: &lt;br/&gt;
6135&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EBUSY; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[错误代码]] : EBUSY
&lt;/div&gt;
6136&nbsp;out1: &lt;br/&gt;
6137&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](ip); &lt;br/&gt;
6138&nbsp;} &lt;br/&gt;
6139&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统#装载文件系统]]

===Param===
:(mount = 21.)
:&lt;b&gt;sys mount; special; name; rwflag&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:smount by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:spl</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
1291&nbsp;/* ------------------------- */ &lt;br/&gt;
1292&nbsp;.globl     _spl0, _spl1, _spl4, _spl5, _spl6, _spl7&lt;br/&gt;
1293&nbsp;_spl0:&lt;br/&gt;
1294&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $340,PS&lt;br/&gt;
1295&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[处理机状态字]] 5-7 位清位
*即将 处理机优先级 置0
&lt;/div&gt;
1296&lt;br/&gt;
1297&nbsp;_spl1:&lt;br/&gt;
1298&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $40,PS&lt;br/&gt;
1299&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $300,PS&lt;br/&gt;
1300&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[处理机状态字]] 第5位 置位
*将[[处理机状态字]] 6-7位 清位
*即将 处理机优先级 置1
&lt;/div&gt;
1301&lt;br/&gt;
1302&nbsp;_spl4:&lt;br/&gt;
1303&nbsp;_spl5:&lt;br/&gt;
1304&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS&lt;br/&gt;
1305&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $100,PS&lt;br/&gt;
1306&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[处理机状态字]] 5-7位 置位
*将[[处理机状态字]] 6位 清位
*即将 处理机优先级 置5
*_spl4 和 _spl5 同体
&lt;/div&gt;
1307&lt;br/&gt;
1308&nbsp;_spl6:&lt;br/&gt;
1309&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS&lt;br/&gt;
1310&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $40,PS&lt;br/&gt;
1311&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[处理机状态字]] 5-7位 置位
*将[[处理机状态字]] 7位 清位
*即将 处理机优先级 置6
&lt;/div&gt;
1312&lt;br/&gt;
1313&nbsp;_spl7:&lt;br/&gt;
1314&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIS|bis]]     $340,PS&lt;br/&gt;
1315&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]]     pc&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将[[处理机状态字]] 5-7位 置位
*即将 处理机优先级 置7
&lt;/div&gt;
1316&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[编程技巧#设置处理机状态字|编程技巧之设置处理机状态字]]
*[[处理机状态字]]
*[[关于汇编函数的说明]]

===Caller===
*[[code:sched]]
*[[code:sleep]]
*[[code:clock]]
*[[code:timeout]]
*[[code:brelse]]
*[[code:getblk]]
*[[code:iowait]]
*[[code:notavil]]
*[[code:swap]]
*[[code:bflush]]
*[[code:physio]]
*[[code:rkstrategy]]
*[[code:sslep]]
*[[code:wflushtty]]
*[[code:flushtty]]
*[[code:canon]]
*[[code:ttwrite]]
*[[code:mmread]]
*[[code:mmwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:spl by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ssig</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*设置某类型进程信号的处理函数
*从用户态传入两个参数:
**参数1(u_arg[0]):sig,信号类型号 
**参数2(u_arg[1]):*func,信号处理函数入口地址
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3613&lt;br/&gt;
3614&nbsp;ssig()&lt;br/&gt;
3615&nbsp;{&lt;br/&gt;
3616&nbsp;&nbsp;&nbsp;&nbsp;register a;&lt;br/&gt;
3617&lt;br/&gt;
3618&nbsp;&nbsp;&nbsp;&nbsp;a = [[code:user|u.u_arg]][0];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*a = 信号类型号
&lt;/div&gt;
3619&nbsp;&nbsp;&nbsp;&nbsp;if(a&lt;=0 &lt;nowiki&gt;||&lt;/nowiki&gt; a&gt;=NSIG &lt;nowiki&gt;||&lt;/nowiki&gt; a ==SIGKIL) {&lt;br/&gt;
3620&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EINVAL;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若类型号越界或为类型9(自我终止信号)
**抛出错误
**[[错误代码]]:EINVAL
&lt;/div&gt;
3621&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
3622&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
3623&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_ar0]][R0] = [[code:user|u.u_signal]][a];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*原信号处理函数入口地址暂存入R0,向用户态返回
&lt;/div&gt;
3624&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_signal]][a] = [[code:user|u.u_arg]][1];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将信号a的处理函数置为参数2
&lt;/div&gt;
3625&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_procp]]-&gt;p_sig == a)&lt;br/&gt;
3626&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_sig = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若当前进程 接受到的信号 为 a，则 清信号
**信号处理方式不一样了...原先的信号不再处理了
&lt;/div&gt;
3627&nbsp;}&lt;br/&gt;
3628&nbsp;/* -------------------------     */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[信号系统]]

===Param===
:(signal = 48.)
:&lt;b&gt;sys  signal; sig; label&lt;/b&gt;
:(old value in r0)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ssig by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sslep</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*令当前进程进入睡眠，睡眠指定秒数
*共传入一个参数，设为t
*t : 指定秒数，令进程睡眠t秒
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5976&nbsp;/* sleep system call &lt;br/&gt;
5977&nbsp;&nbsp;* not to be confused with the sleep internal routine. &lt;br/&gt;
5978&nbsp;&nbsp;*/ &lt;br/&gt;
5979&nbsp;sslep() &lt;br/&gt;
5980&nbsp;{ &lt;br/&gt;
5981&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char *d[2]; &lt;br/&gt;
5982&nbsp;&lt;br/&gt;
5983&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl7]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
&lt;/div&gt;
5984&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d[0] = time[0]; &lt;br/&gt;
5985&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d[1] = time[1]; &lt;br/&gt;
5986&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]](d, [[Skill:u.u ar0|u.u_ar0]][R0]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*令 d = time + t
*d 为 睡眠到期时间
&lt;/div&gt;
5987&nbsp;&lt;br/&gt;
5988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while([[code:dpcmp|dpcmp]](d[0], d[1], time[0], time[1]) &gt; 0) { &lt;br/&gt;
5989&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:dpcmp|dpcmp]](tout[0], tout[1], time[0], time[1]) &lt;nowiki&gt; &lt;= 0 || &lt;/nowiki&gt;&lt;br/&gt;
5990&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpcmp|dpcmp]](tout[0], tout[1], d[0], d[1]) &gt; 0) { &lt;br/&gt;
5991&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tout[0] = d[0]; &lt;br/&gt;
5992&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tout[1] = d[1]; &lt;br/&gt;
5993&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*tout为所有调用sslep睡眠的进程中最早的到期时间，参考[[睡眠原因#tout|睡眠原因]]
*更新tout( tout = min(tout , d) )
&lt;/div&gt;
5994&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](tout, PSLEP); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若睡眠未到期，则继续睡眠
*[[睡眠原因#tout|睡眠原因为tout]]
*[[进程优先级|优先级 为 PSLEP]]
&lt;/div&gt;
5995&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
5996&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spl0(); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
5997&nbsp;} &lt;br/&gt;
5998&nbsp;/* ------------------------- */ &lt;br/&gt;
5999&nbsp;&lt;br/&gt;
&lt;/div&gt;

===Extend===
=原理=
*调用内核函数 [[code:sslep|sslep]]
**更新tout (tout为所有调用sleep睡眠的进程中最早的睡眠到期时间)
**令进程睡眠，[[睡眠原因]]tout
*[[时钟]]中断发生，调用[[code:clock|clock]]函数
**判断是否有进程睡眠到期(tout == 当前系统时间)
**若有，则唤醒所有睡眠在tout上的进程
*进程被唤醒，继续执行[[code:sslep|sslep]]
**若睡眠到期，则函数返回
**若睡眠未到期，则再度睡眠，[[睡眠原因]]tout

===Param===

:(sleep = 35.; not in assembler)
:(seconds in r0)
:&lt;b&gt;sys sleep&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sslep by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ssr</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[file:m40.s]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ssr by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:start</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统引导函数
* _end _edata 是 装入程序的伪变量
**_end : 数据段 + bss段 底地址(KISA5的末尾) + 1
**_edata : 数据段 底地址 + 1
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0610&nbsp;/* ------------------------- */ &lt;br/&gt;
0611&nbsp;.globl     start, _end, _edata, _main &lt;br/&gt;
0612&nbsp;start: &lt;br/&gt;
0613&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIT|bit]]     $1,[[code:SSR|SSR0]] &lt;br/&gt;
0614&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BNE|bne]]     start / loop if restart &lt;br/&gt;
&lt;div class="wikinote"&gt;
*等待 [[内存管理]]机制(虚实地址映照) 关闭
&lt;/div&gt;
0615&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RESET|reset]]&lt;br/&gt;
&lt;div class="wikinote"&gt;
*重置 总线设备
&lt;/div&gt;
0616 &lt;br/&gt;
0617&nbsp;/ initialize systems segments &lt;br/&gt;
0618 &lt;br/&gt;
0619&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $KISA0,r0 &lt;br/&gt;
0620&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $KISD0,r1 &lt;br/&gt;
0621&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $200,r4 &lt;br/&gt;
0622&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     r2 &lt;br/&gt;
0623&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $6,r3 &lt;br/&gt;
0624&nbsp;1: &lt;br/&gt;
0625&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,(r0)+ &lt;br/&gt;
0626&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $77406,(r1)+ / 4k rw &lt;br/&gt;
0627&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ADD|add]]     r4,r2 &lt;br/&gt;
0628&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:SOB|sob]]     r3,1b &lt;br/&gt;
&lt;div class="wikinote"&gt;
*写入信息到 KISA0/KISD0 - KISA5/KISD5
**KISAi = 200 * (i-1)
**KISDi = 77406
***读写
***长度 200 (128)块
&lt;/div&gt;
0629 &lt;br/&gt;
0630&nbsp;/ initialize user segment &lt;br/&gt;
0631 &lt;br/&gt;
0632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $_end+63.,r2 &lt;br/&gt;
0633&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:ASH|ash]]     $-6,r2 &lt;br/&gt;
0634&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BIC|bic]]     $!1777,r2 &lt;br/&gt;
0635&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     r2,(r0)+ / ksr = sysu &lt;br/&gt;
0636&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $USIZE-1\&lt;8&lt;nowiki&gt;|&lt;/nowiki&gt;6,(r1)+ &lt;br/&gt;
0637 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*KISA6 ← _end向下修正为整块(0#进程 PPDA区的起始地址)
*KISD6 置为
**段大小 = PPDA区大小
**读写
&lt;/div&gt;
0638&nbsp;/ initialize io segment &lt;br/&gt;
0639&nbsp;/ set up counts on supervisor segments &lt;br/&gt;
0640 &lt;br/&gt;
0641&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $IO,(r0)+ &lt;br/&gt;
0642&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $77406,(r1)+ / rw 4k &lt;br/&gt;
&lt;div class="wikinote"&gt;
*KISA7 ← IO
*KISD7  = 77406
**读写
**长度 200 (128)块
&lt;/div&gt;
0643 &lt;br/&gt;
0644&nbsp;/ get a sp and start segmentation &lt;br/&gt;
0645 &lt;br/&gt;
0646&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $_u+[USIZE*64.],sp &lt;br/&gt;
&lt;div class="wikinote"&gt;
*初始化 sp
*_u 定义在 [[file:m40.s|m40.s]]
*此处 传入sp的是 相对地址，而 虚实地址映照 在下一句启用
&lt;/div&gt;
0647&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:INC|inc]]     [[code:SSR|SSR0]] &lt;br/&gt;
&lt;div class="wikinote"&gt;
*启用 虚实地址映照
&lt;/div&gt;
0648 &lt;br/&gt;
0649&nbsp;/ clear bss &lt;br/&gt;
0650 &lt;br/&gt;
0651&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]] $_edata,r0 &lt;br/&gt;
0652&nbsp;1: &lt;br/&gt;
0653&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     (r0)+ &lt;br/&gt;
0654&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r0,$_end &lt;br/&gt;
0655&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BLO|blo]]     1b &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清零 [[.bss]]区
&lt;/div&gt;
0656 &lt;br/&gt;
0657&nbsp;/ clear user block &lt;br/&gt;
0658 &lt;br/&gt;
0659&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $_u,r0 &lt;br/&gt;
0660&nbsp;1: &lt;br/&gt;
0661&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     (r0)+ &lt;br/&gt;
0662&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CMP|cmp]]     r0,$_u+[USIZE*64.] &lt;br/&gt;
0663&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BLO|blo]]     1b &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清零 0#进程 PPDA区
&lt;/div&gt;
0664 &lt;br/&gt;
0665&nbsp;/ set up previous mode and call main &lt;br/&gt;
0666&nbsp;/ on return, enter user mode at 0R &lt;br/&gt;
0667 &lt;br/&gt;
0668&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $30000,PS &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 PS
**先前态 为 用户态
**当前态 为 核心态
**[[进程优先级]] 为 0
&lt;/div&gt;
0669&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JSR|jsr]]     pc,_main &lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用 [[code:main|main]]
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*以下 由 1# 进程 执行 (参看 [[系统初启]])
&lt;/div&gt;
0670&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]]     $170000,-(sp) &lt;br/&gt;
0671&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:CLR|clr]]     -(sp) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*向 堆栈中 构造
**PS = 170000
***当前态 为 用户态
***先前态 为 用户态
***[[进程优先级]] 为 0
**PC = 0
&lt;/div&gt;
0672&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTT|rtt]] &lt;br/&gt;
&lt;div class="wikinote"&gt;
*转入 用户态 PC=0 处 开始运行
&lt;/div&gt;
0673 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[系统初启]]
*[[关于汇编函数的说明]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:start by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:stat</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*获取文件的状态，保存到[[用户态]]地址空间指定地址
*使用2个隐式参数
**文件路径 : [[code:user|u.u_arg]][0]
**[[用户态]]地址空间指定地址 : [[code:user|u.u_arg]][1]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6024&lt;br/&gt;
6025&nbsp;/*&lt;br/&gt;
6026&nbsp;&nbsp;* the stat system call.&lt;br/&gt;
6027&nbsp;&nbsp;*/&lt;br/&gt;
6028&nbsp;stat()&lt;br/&gt;
6029&nbsp;{&lt;br/&gt;
6030&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|ip]];&lt;br/&gt;
6031&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern uchar;&lt;br/&gt;
6032&lt;br/&gt;
6033&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:namei|namei]](&[[code:uchar|uchar]], 0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据 文件路径 查找 [[code:struct inode|inode结构]]
&lt;/div&gt;
6034&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]] == NULL)&lt;br/&gt;
6035&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
6036&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:stat1|stat1]]([[code:struct inode|ip]], [[code:user|u.u_arg]][1]);&lt;br/&gt;
6037&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:iput|iput]] "释放" ip
*"释放" 用来还原 在[[code:namei|namei]]中设置的[[code:struct inode|inode]]参数
&lt;/div&gt;
6038&nbsp;}&lt;br/&gt;
6039&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Param===
:(stat = 18.)
:&lt;b&gt;sys stat; name; buf&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:stat by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:stat1</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*读出 指定文件[[code:struct inode|INODE结构]]的状态，写到[[用户态]]地址空间的指定位置
*共输入2个参数
**[[code:struct inode|ip]] : 指向指定的[[code:struct inode|INODE结构]]
**ub : [[用户态]]地址空间地址
&lt;/div&gt;
&lt;div class="wikicode"&gt;
&lt;div class="wikinote"&gt;
*[[code:struct inode|INODE结构]]共有两个部分，两者有不同的部分
**内存INODE
**磁盘INODE
*从两个部分分别读出需要的状态，写入指定地址
&lt;/div&gt;
6040 &lt;br/&gt;
6041&nbsp;/* &lt;br/&gt;
6042&nbsp;&nbsp;* The basic routine for fstat and stat: &lt;br/&gt;
6043&nbsp;&nbsp;* get the inode and pass appropriate parts back. &lt;br/&gt;
6044&nbsp;&nbsp;*/ &lt;br/&gt;
6045&nbsp;stat1([[code:struct inode|ip]], ub) &lt;br/&gt;
6046&nbsp;int [[code:struct inode|ip]]; &lt;br/&gt;
6047&nbsp;{ &lt;br/&gt;
6048&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register i, *bp, *cp; &lt;br/&gt;
6049 &lt;br/&gt;
6050&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iupdat|iupdat]]([[code:struct inode|ip]], time); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 内存INODE 写回 磁盘
&lt;/div&gt;
6051&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]]([[code:struct inode|ip]]-&gt;i_dev, [[code:ldiv|ldiv]]([[code:struct inode|ip]]-&gt;i_number+31, 16)); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*读出 ip所在对应的磁盘块bp
&lt;/div&gt;
6052&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = bp-&gt;b_addr + 32*[[code:lrem|lrem]]([[code:struct inode|ip]]-&gt;i_number+31, 16) +24; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*cp ← 指向 bp上对应ip的INODE的i_atime项
&lt;/div&gt;
6053&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = &([[code:struct inode|ip]]-&gt;i_dev); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip ← 指向原ip的i_dev项
&lt;/div&gt;
6054&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i&lt;14; i++) { &lt;br/&gt;
6055&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](ub, *[[code:struct inode|ip]]++); &lt;br/&gt;
6056&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ub =+ 2; &lt;br/&gt;
6057&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将以下内容写入[[用户态]]地址空间ub地址，ip的
**i_dev
**i_number
**i_mode
**i_nlink
**i_uid
**i_gid
**i_size0
**i_size1
**i_addr[8]
&lt;/div&gt;
6058&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i&lt;4; i++) { &lt;br/&gt;
6059&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]](ub, *cp++); &lt;br/&gt;
6060&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ub =+ 2; &lt;br/&gt;
6061&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将以下内容写入[[用户态]]地址空间ub地址，ip对应的磁盘inode的
**i_atime
**i_mtime
&lt;/div&gt;
6062&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放 [[code:struct buf|bp]]
&lt;/div&gt;
6063&nbsp;} &lt;br/&gt;
6064&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统]]
*[[内存打开文件结构]]

===Caller===
*[[code:fstat]]
*[[code:stat]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:stat1 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:stime</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*设置系统时间
*传入两个参数，分别为欲设置时间(32位长)的高位和低位
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3427&lt;br/&gt;
3428&nbsp;stime()&lt;br/&gt;
3429&nbsp;{&lt;br/&gt;
3430&lt;br/&gt;
3431&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:suser|suser]]()) {&lt;br/&gt;
&lt;div class="wikinote"&gt;
*只有超级用户可以设置系统时间
&lt;/div&gt;
3432&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;time[0] = [[skill:u.u_ar0|u.u_ar0]][R0]; &lt;br/&gt;
3433&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;time[1] = [[skill:u.u_ar0|u.u_ar0]][R1]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将传入的参数分别赋给time的高低位，设置系统时间
&lt;/div&gt;
3434&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]]([[睡眠原因#tout|tout]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*唤醒所有 睡眠原因为[[睡眠原因#tout|tout]]的睡眠进程
*[[睡眠原因#tout|tout]]睡眠原因 含义为 睡眠固定时间，具体参考 [[睡眠原因#tout|睡眠原因]]
*由于系统时间被重置，可能某些因[[睡眠原因#tout|tout]]睡眠的进程无法唤醒，为此需要唤醒所有因[[睡眠原因#tout|tout]]睡眠的进程
&lt;/div&gt;
3435&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
3436&nbsp;}&lt;br/&gt;
3437&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Param===
:(stime = 25.)
:(time in r0-r1)
:&lt;b&gt;sys stime&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:stime by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:stop</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*[[跟踪]] 系统中，子进程进入SSTOP状态，响应跟踪请求
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4009 &lt;br/&gt;
4010&nbsp;/* &lt;br/&gt;
4011&nbsp;&nbsp;* Enter the tracing STOP state. &lt;br/&gt;
4012&nbsp;&nbsp;* In this state, the parent is &lt;br/&gt;
4013&nbsp;&nbsp;* informed and the process is able to &lt;br/&gt;
4014&nbsp;&nbsp;* receive commands from the parent. &lt;br/&gt;
4015&nbsp;&nbsp;*/ &lt;br/&gt;
4016&nbsp;stop() &lt;br/&gt;
4017&nbsp;{ &lt;br/&gt;
4018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *pp, *cp; &lt;br/&gt;
4019 &lt;br/&gt;
4020&nbsp;loop: &lt;br/&gt;
4021&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp = [[code:user|u.u_procp]]; &lt;br/&gt;
4022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(cp-&gt;p_ppid != 1) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*LIONS 源代码为&lt;div class="wikiheadcode"&gt;4022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(cp-&gt;p_pid != 1)&lt;/div&gt;
疑为笔误
&lt;/div&gt;
4023&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (pp = &[[code:proc|proc]][0]; pp &lt; &[[code:proc|proc]][NPROC]; pp++) &lt;br/&gt;
4024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pp-&gt;p_pid == cp-&gt;p_ppid) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*pp ← 现行进程的父进程
&lt;/div&gt;
4025&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](pp); &lt;br/&gt;
4026&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp-&gt;p_stat = SSTOP; &lt;br/&gt;
4027&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:swtch|swtch]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*唤醒 父进程
*子进程 置 SSTOP
*要求进程切换
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*当 父进程 提出了跟踪请求，且子进程再次切换上台，继续执行
&lt;/div&gt;
4028&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((cp-&gt;p_flag&STRC)==0 &lt;nowiki&gt;||&lt;/nowiki&gt; [[code:procxmt|procxmt]]())   &lt;br/&gt;
4029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下情况 函数返回
**子进程 STRC 被清 (不再进行跟踪)
**父进程 向 子进程 发送信号([[code:procxmt|procxmt]]() == 1)
&lt;/div&gt;
4030&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
4031&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4032&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:exit|exit]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下情况 进程终止
**子进程 的 父进程 为 1#进程&lt;br/&gt;(父进程 已经退出，子进程托管给1#进程)&lt;br/&gt;(已经没有必要继续跟踪了)
&lt;/div&gt;
4033&nbsp;} &lt;br/&gt;
4034&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[跟踪]]

===Caller===
*[[code:issig]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:stop by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct buf</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*定义 [[设备缓存管理]] 使用的 缓存块管理结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4500&nbsp;/* &lt;br/&gt;
4501&nbsp;&nbsp;* Each buffer in the pool is usually doubly linked into two  &lt;br/&gt;
4502&nbsp;&nbsp;* lists: for the device with which it is currently associat- &lt;br/&gt;
4503&nbsp;&nbsp;* ed (always) and also for a list of blocks available for    &lt;br/&gt;
4504&nbsp;&nbsp;* allocation for other use (usually). &lt;br/&gt;
4505&nbsp;&nbsp;* The latter list is kept in last-used order, and the two    &lt;br/&gt;
4506&nbsp;&nbsp;* lists are doubly linked to make it easy to remove &lt;br/&gt;
4507&nbsp;&nbsp;* a buffer from one list when it was found by &lt;br/&gt;
4508&nbsp;&nbsp;* looking through the other. &lt;br/&gt;
4509&nbsp;&nbsp;* A buffer is on the available list, and is liable &lt;br/&gt;
4510&nbsp;&nbsp;* to be reassigned to another disk block, if and only &lt;br/&gt;
4511&nbsp;&nbsp;* if it is not marked BUSY.  When a buffer is busy, the      &lt;br/&gt;
4512&nbsp;&nbsp;* available-list pointers can be used for other purposes.    &lt;br/&gt;
4513&nbsp;&nbsp;* Most drivers use the forward ptr as a link in their I/O    &lt;br/&gt;
4514&nbsp;&nbsp;* active queue. &lt;br/&gt;
4515&nbsp;&nbsp;* A buffer header contains all the information required      &lt;br/&gt;
4516&nbsp;&nbsp;* to perform I/O. &lt;br/&gt;
4517&nbsp;&nbsp;* Most of the routines which manipulate these things &lt;br/&gt;
4518&nbsp;&nbsp;* are in bio.c. &lt;br/&gt;
4519&nbsp;&nbsp;*/ &lt;br/&gt;
4520&nbsp;struct buf &lt;br/&gt;
4521&nbsp;{ &lt;br/&gt;
4522&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     b_flags; /* see defines below */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*标志位
*标志常量定义参见 [[file:buf.h|buf.h]]
&lt;/div&gt;
4523&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct  buf *b_forw;    /* headed by devtab of b_dev */    &lt;br/&gt;
4524&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct  buf *b_back;    /*  "  */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[设备队列]] 队列指针
&lt;/div&gt;
4525&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct  buf *av_forw;   /* position on free list, */ &lt;br/&gt;
4526&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct  buf *av_back;   /*     if not BUSY*/ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[自由队列]] 队列指针
* av_forw也作为 [[设备I/O队列]] 队列指针
&lt;/div&gt;
4527&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     b_dev; /* major+minor device name */      &lt;br/&gt;
&lt;div class="wikinote"&gt;
*设备号 
*主设备号 + 从设备号
&lt;/div&gt;
4528&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     b_wcount; /* transfer count (usu. words) */  &lt;br/&gt;
&lt;div class="wikinote"&gt;
*缓存块与磁盘进行I/O时的待传输字数
&lt;/div&gt;
4529&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    *b_addr; /* low order core address */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*一般使用时，指向对应的缓存块
*作为交换区缓存管理块使用时，为对应缓存块内存起始地址的低16位
&lt;/div&gt;
4530&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    *b_xmem; /* high order core address */      &lt;br/&gt;
&lt;div class="wikinote"&gt;
*作为交换区缓存管理块使用时，对应缓存块内存起始地址的高6位,在pdp11/40中,只有最后两位有效
&lt;/div&gt;
4531&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    *b_blkno; /* block # on device */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该缓存在设备上对应的块号
&lt;/div&gt;
4532&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    b_error; /* returned after I/O */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该缓存块的I/O错误号
&lt;/div&gt;
4533&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    *b_resid; /* words not transferred after     &lt;br/&gt;
4534&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error */ &lt;br/&gt;
4535&nbsp;} buf[NBUF]; &lt;br/&gt;
4536&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
|ref =
*[[设备缓存管理]]
===Caller===
*[[code:deverror]]
*[[code:struct devtab]]
*[[code:bread]]
*[[code:breada]]
*[[code:bwrite]]
*[[code:bdwrite]]
*[[code:bawrite]]
*[[code:brelse]]
*[[code:incore]]
*[[code:getblk]]
*[[code:iowait]]
*[[code:notavil]]
*[[code:iodone]]
*[[code:binit]]
*[[code:devstart]]
*[[code:rhstart]]
*[[code:swap]]
*[[code:bflush]]
*[[code:physio]]
*[[code:geterror]]
*[[code:rkstrategy]]
*[[code:rkaddr]]
*[[code:rkstart]]
*[[code:rkintr]]
*[[code:iomove]]
*[[code:alloc]]
*[[code:free]]
*[[code:ialloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct buf by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct callo</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[file:systm.h]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct callo by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct cblock</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[file:tty.c]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct cblock by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct clist</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*[[I/O字符缓存队列]] 队列头
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7900&nbsp;/* &lt;br/&gt;
7901&nbsp;&nbsp;* A clist structure is the head &lt;br/&gt;
7902&nbsp;&nbsp;* of a linked list queue of characters. &lt;br/&gt;
7903&nbsp;&nbsp;* The characters are stored in 4-word &lt;br/&gt;
7904&nbsp;&nbsp;* blocks containing a link and 6 characters. &lt;br/&gt;
7905&nbsp;&nbsp;* The routines getc and putc (m45.s or m40.s) &lt;br/&gt;
7906&nbsp;&nbsp;* manipulate these structures. &lt;br/&gt;
7907&nbsp;&nbsp;*/ &lt;br/&gt;
7908&nbsp;struct clist &lt;br/&gt;
7909&nbsp;{ &lt;br/&gt;
7910&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     c_cc; /* character count */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*队列 字符数
&lt;/div&gt;
7911&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     c_cf; /* pointer to first block */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*队列 头指针
&lt;/div&gt;
7912&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int     c_cl; /* pointer to last block */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*队列 尾指针
&lt;/div&gt;
7913&nbsp;}; &lt;br/&gt;
7914&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[I/O字符缓存队列]]

===Caller===
*[[code:struct tty]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct clist by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct devtab</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*定义 [[设备缓存管理]] 使用的 设备缓存管理结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4537 &lt;br/&gt;
4538&nbsp;/* &lt;br/&gt;
4539&nbsp;&nbsp;* Each block device has a devtab, which contains private     &lt;br/&gt;
4540&nbsp;&nbsp;* state stuff and 2 list heads: the b_forw/b_back list,      &lt;br/&gt;
4541&nbsp;&nbsp;* which is doubly linked and has all the buffers currently   &lt;br/&gt;
4542&nbsp;&nbsp;* associated with the major device; &lt;br/&gt;
4543&nbsp;&nbsp;* and the d_actf/d_actl list, which is private to the &lt;br/&gt;
4544&nbsp;&nbsp;* device but in fact is always used for the head and tail    &lt;br/&gt;
4545&nbsp;&nbsp;* of the I/O queue for the device. &lt;br/&gt;
4546&nbsp;&nbsp;* Various routines in bio.c look at b_forw/b_back &lt;br/&gt;
4547&nbsp;&nbsp;* (notice they are the same as in the buf structure) &lt;br/&gt;
4548&nbsp;&nbsp;* but the rest is private to each device driver. &lt;br/&gt;
4549&nbsp;&nbsp;*/ &lt;br/&gt;
4550 &lt;br/&gt;
4551&nbsp;struct devtab &lt;br/&gt;
4552&nbsp;{ &lt;br/&gt;
4553&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    d_active; /* busy flag */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*标志设备是否启动
&lt;/div&gt;
4554&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    d_errcnt; /* error count (for recovery)*/ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*累计I/O错误次数
&lt;/div&gt;
4555&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|struct buf]] *b_forw;    /* first buffer for this dev */ &lt;br/&gt;
4556&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|struct buf]] *b_back;    /* last buffer for this dev */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[设备队列]] 的队列头尾
&lt;/div&gt;
4557&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|struct buf]] *d_actf;    /* head of I/O queue */ &lt;br/&gt;
4558&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|struct buf]] *d_actl;    /* tail of I/O queue */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[设备I/O队列]] 的队列头尾
&lt;/div&gt;
4559&nbsp;}; &lt;br/&gt;
4560&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:bdevsw]]
*[[code:bdwrite]]
*[[code:incore]]
*[[code:getblk]]
*[[code:binit]]
*[[code:rkstrategy]]
*[[code:rkstart]]
*[[code:rkintr]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct devtab by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct file</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*打开文件结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5500&nbsp;/* &lt;br/&gt;
5501&nbsp;&nbsp;* One file structure is allocated &lt;br/&gt;
5502&nbsp;&nbsp;* for each open/creat/pipe call. &lt;br/&gt;
5503&nbsp;&nbsp;* Main use is to hold the read/write &lt;br/&gt;
5504&nbsp;&nbsp;* pointer associated with each open &lt;br/&gt;
5505&nbsp;&nbsp;* file. &lt;br/&gt;
5506&nbsp;&nbsp;*/ &lt;br/&gt;
5507&nbsp;struct     file &lt;br/&gt;
5508&nbsp;{ &lt;br/&gt;
5509&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    f_flag; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*标志位
*标志常量参看[[file:file.h|file.h]]
&lt;/div&gt;
5510&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    f_count; /* reference count */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向该file结构的进程数
&lt;/div&gt;
5511&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     f_inode; /* pointer to inode structure */   &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 对应的INODE结构
&lt;/div&gt;
5512&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    *f_offset[2];   /* read/write character pointer */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*文件的I/O偏移量
&lt;/div&gt;
5513&nbsp;} file[NFILE]; &lt;br/&gt;
5514&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[内存打开文件结构]]
===Caller===
*[[code:rdwr]]
*[[code:open1]]
*[[code:seek]]
*[[code:fstat]]
*[[code:dup]]
*[[code:closef]]
*[[code:falloc]]
*[[code:pipe]]
*[[code:readp]]
*[[code:writep]]
*[[code:sgtty]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct file by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct filsys</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
5550&nbsp;/* &lt;br/&gt;
5551&nbsp;&nbsp;* Definition of the unix super block. &lt;br/&gt;
5552&nbsp;&nbsp;* The root super block is allocated and &lt;br/&gt;
5553&nbsp;&nbsp;* read in iinit/alloc.c. Subsequently &lt;br/&gt;
5554&nbsp;&nbsp;* a super block is allocated and read &lt;br/&gt;
5555&nbsp;&nbsp;* with each mount (smount/sys3.c) and &lt;br/&gt;
5556&nbsp;&nbsp;* released with umount (sumount/sys3.c). &lt;br/&gt;
5557&nbsp;&nbsp;* A disk block is ripped of for storage. &lt;br/&gt;
5558&nbsp;&nbsp;* See alloc.c for general alloc/free &lt;br/&gt;
5559&nbsp;&nbsp;* routines for free list and I list. &lt;br/&gt;
5560&nbsp;&nbsp;*/ &lt;br/&gt;
5561&nbsp;struct filsys &lt;br/&gt;
5562&nbsp;{ &lt;br/&gt;
5563&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int  s_isize;     /* size in blocks of I list */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*磁盘[[文件系统]]的INODE区的总长
&lt;/div&gt;
5564&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int  s_fsize;     /* size in blocks of entire volume */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*磁盘总盘块数
&lt;/div&gt;
5565&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int  s_nfree;     /* number of in core free blocks &lt;br/&gt;
5566&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(between 0 and 100) */ &lt;br/&gt;
5567&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int  s_free[100]; /* in core free blocks */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*s_free: 磁盘[[文件系统]]空闲块管理数组
*s_nfree: s_free有效元素的个数
&lt;/div&gt;
5568&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int  s_ninode;    /* number of in core I nodes (0-100) */ &lt;br/&gt;
5569&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int  s_inode[100];/* in core free I nodes */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*s_inode: 磁盘[[文件系统]]INODE块管理数组
*s_ninode: s_inode有效元素的个数
&lt;/div&gt;
5570&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char s_flock;     /* lock during free list manipulation */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*空闲块队列 s_free 的操作锁
&lt;/div&gt;
5571&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char s_ilock;     /* lock during I list manipulation */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*Inode队列 s_inode 的操作锁
&lt;/div&gt;
5572&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char s_fmod; /* super block modified flag */ &lt;br/&gt;
5573&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char s_ronly;     /* mounted read-only flag */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*只读标志
&lt;/div&gt;
5574&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int  s_time[2];   /* current date of last update */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*最后一次操作时间
&lt;/div&gt;
5575&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int  pad[50]; &lt;br/&gt;
5576&nbsp;}; &lt;br/&gt;
5577&nbsp;/* ------------------------- */ &lt;br/&gt;
5578 &lt;br/&gt;
5579 &lt;br/&gt;
5580 &lt;br/&gt;
5581 &lt;br/&gt;
5582 &lt;br/&gt;
5583 &lt;br/&gt;
5584 &lt;br/&gt;
5585 &lt;br/&gt;
5586 &lt;br/&gt;
5587 &lt;br/&gt;
5588 &lt;br/&gt;
5589 &lt;br/&gt;
5590 &lt;br/&gt;
5591 &lt;br/&gt;
5592 &lt;br/&gt;
5593 &lt;br/&gt;
5594 &lt;br/&gt;
5595 &lt;br/&gt;
5596 &lt;br/&gt;
5597 &lt;br/&gt;
5598 &lt;br/&gt;
5599 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:iinit]]
*[[code:alloc]]
*[[code:free]]
*[[code:badblock]]
*[[code:ialloc]]
*[[code:ifree]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct filsys by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct inode</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*磁盘INODE结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5600&nbsp;/* &lt;br/&gt;
5601&nbsp;&nbsp;* Inode structure as it appears on &lt;br/&gt;
5602&nbsp;&nbsp;* the disk. Not used by the system, &lt;br/&gt;
5603&nbsp;&nbsp;* but by things like check, df, dump. &lt;br/&gt;
5604&nbsp;&nbsp;*/ &lt;br/&gt;
5605&nbsp;struct     inode &lt;br/&gt;
5606&nbsp;{ &lt;br/&gt;
5607&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_mode; &lt;br/&gt;
5608&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_nlink; &lt;br/&gt;
5609&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_uid; &lt;br/&gt;
5610&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_gid; &lt;br/&gt;
5611&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_size0; &lt;br/&gt;
5612&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    *i_size1; &lt;br/&gt;
5613&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_addr[8]; &lt;br/&gt;
5614&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_atime[2]; &lt;br/&gt;
5615&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_mtime[2]; &lt;br/&gt;
5616&nbsp;}; &lt;br/&gt;
5617&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;div class="wikiheadnote"&gt;
*核心代码使用的INODE结构，作为磁盘INODE的内存缓存
*inode定义为磁盘INODE的内存缓存数组
*NINODE 定义在[[file:param.h|param.h]] 0131行，值为 100
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5650&nbsp;/* The I node is the focus of all &lt;br/&gt;
5651&nbsp;&nbsp;* file activity in unix. There is a unique &lt;br/&gt;
5652&nbsp;&nbsp;* inode allocated for each active file, &lt;br/&gt;
5653&nbsp;&nbsp;* each current directory, each mounted-on &lt;br/&gt;
5654&nbsp;&nbsp;* file, text file, and the root. An inode is ’named’ &lt;br/&gt;
5655&nbsp;&nbsp;* by its dev/inumber pair. (iget/iget.c) &lt;br/&gt;
5656&nbsp;&nbsp;* Data, from mode on, is read in &lt;br/&gt;
5657&nbsp;&nbsp;* from permanent inode on volume. &lt;br/&gt;
5658&nbsp;&nbsp;*/ &lt;br/&gt;
5659&nbsp;struct     inode &lt;br/&gt;
5660&nbsp;{ &lt;br/&gt;
5661&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_flag; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*标志位
**IACC : 该INODE已被存取
**IUPD : 该INODE已被修改
&lt;/div&gt;
5662&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_count;    /* reference count */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*系统 [[code:struct file|file结构]] 引用该INODE的引用数
*参考 [[文件系统#内存打开文件结构|文件系统之内存打开文件结构]]
&lt;/div&gt;
5663&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_dev;     /* device where inode resides */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*对应的设备的设备号
&lt;/div&gt;
5664&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_number;  /* i number, 1-to-1 with device &lt;br/&gt;
5665&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;address */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该INODE在设备INODE区的序号，从1开始
&lt;/div&gt;
5666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_mode; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该文件/目录的模式标志
*关于模式常量，参考[[file:inode.h|inode.h]]
*参看 [[文件系统#inode类型|文件系统之inode类型]]
&lt;/div&gt;
5667&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_nlink;  /* directory entries */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该INODE块的勾连数
*参看[[文件系统#勾连|文件系统之勾连]]
&lt;/div&gt;
5668&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_uid;    /* owner */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该文件/目录的拥有者
&lt;/div&gt;
5669&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_gid;    /* group of owner */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该文件/目录的拥有组
&lt;/div&gt;
5670&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    i_size0;  /* most significant of size */ &lt;br/&gt;
5671&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    *i_size1; /* least sig */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该文件/目录的大小
&lt;/div&gt;
5672&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_addr[8];/* device addresses constituting file */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该文件/目录的磁盘块索引数组，参见[[文件系统#文件索引结构|文件系统之文件索引结构]]
&lt;/div&gt;
5673&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     i_lastr;  /* last logical block read (for &lt;br/&gt;
5674&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read-ahead) */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*最后读取的块号
*用于预读([[code:breada|breada]])判断
&lt;/div&gt;
5675&nbsp;} inode[NINODE]; &lt;br/&gt;
5676&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:unlink]]
*[[code:chdir]]
*[[code:chmod]]
*[[code:chown]]
*[[code:smdate]]
*[[code:core]]
*[[code:open1]]
*[[code:link]]
*[[code:mknod]]
*[[code:stat]]
*[[code:stat1]]
*[[code:sumount]]
*[[code:getmdev]]
*[[code:readi]]
*[[code:writei]]
*[[code:bmap]]
*[[code:closef]]
*[[code:closei]]
*[[code:openi]]
*[[code:owner]]
*[[code:update]]
*[[code:iget]]
*[[code:iput]]
*[[code:maknode]]
*[[code:namei]]
*[[code:pipe]]
*[[code:readp]]
*[[code:writep]]
*[[code:plock]]
*[[code:prele]]
*[[code:sgtty]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct inode by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct map</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>

|source = 
&lt;div class="wikiheadnote"&gt;
*定义 管理内外存空闲块 的链表类型
*链表中每一项由两项参数: m_addr , m_size
*m_addr : 该空闲块的起始地址
*m_size : 该空闲块的大小
*末元素m_size = 0,用于表示链表结束
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2500 #&lt;br/&gt;
2501 /*&lt;br/&gt;
2502  */&lt;br/&gt;
2503&lt;br/&gt;
2504 /*&lt;br/&gt;
2505  * Structure of the coremap and swapmap&lt;br/&gt;
2506  * arrays. Consists of non-zero count&lt;br/&gt;
2507  * and base address of that many&lt;br/&gt;
2508  * contiguous units.&lt;br/&gt;
2509  * (The coremap unit is 64 bytes,&lt;br/&gt;
2510  * the swapmap unit is 512 bytes)&lt;br/&gt;
2511  * The addresses are increasing and&lt;br/&gt;
2512  * the list is terminated with the&lt;br/&gt;
2513  * first zero count.&lt;br/&gt;
2514  */&lt;br/&gt;
2515 struct map&lt;br/&gt;
2516 {&lt;br/&gt;
2517&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char *m_size;&lt;br/&gt;
2518&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char *m_addr;&lt;br/&gt;
2519 };&lt;br/&gt;
2520 /* ------------------------- */&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[空闲块管理]]

===Caller===
*[[code:malloc]]
*[[code:mfree]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct map by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct mount</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*描述 [[文件系统]] 的 数据结构
&lt;/div&gt;
&lt;div class="wikicode"&gt;
0267&lt;br/&gt;
0268 /* Mount structure: used to locate&lt;br/&gt;
0269 * the super block of a mounted file.&lt;br/&gt;
0270 */&lt;br/&gt;
0271&lt;br/&gt;
0272 struct mount&lt;br/&gt;
0273 {&lt;br/&gt;
0274 &nbsp;&nbsp;&nbsp;&nbsp;int m_dev;/* device mounted */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[文件系统]] 对应设备的设备号
&lt;/div&gt;
0275 &nbsp;&nbsp;&nbsp;&nbsp;int *m_bufp; /* pointer to superblock */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 超级块的 [[code:struct buf|struct buf]]结构
*关于 超级块 ，参考[[文件系统]]
&lt;/div&gt;
0276 &nbsp;&nbsp;&nbsp;&nbsp;int *m_inodp; /* pointer to mounted on inode */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 装载文件系统 的 [[code:struct inode|struct inode]]结构
*参考[[文件系统]]
&lt;/div&gt;
0277 } mount[NMOUNT];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*NMOUNT 定义在 [[file:param.h|param.h]] 0133行，值为5
&lt;/div&gt;
0278 /* -------------------------*/ &lt;br/&gt;
0279&lt;br/&gt;
0280&lt;br/&gt;
0281&lt;br/&gt;
0282&lt;br/&gt;
0283&lt;br/&gt;
0284&lt;br/&gt;
0285&lt;br/&gt;
0286&lt;br/&gt;
0287&lt;br/&gt;
0288&lt;br/&gt;
0289&lt;br/&gt;
0290&lt;br/&gt;
0291&lt;br/&gt;
0292&lt;br/&gt;
0293&lt;br/&gt;
0294&lt;br/&gt;
0295&lt;br/&gt;
0296&lt;br/&gt;
0297&lt;br/&gt;
0298&lt;br/&gt;
0299&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]

===Caller===
*[[code:smount]]
*[[code:sumount]]
*[[code:iinit]]
*[[code:getfs]]
*[[code:update]]
*[[code:iget]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct mount by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct proc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:proc|proc]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct proc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct text</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:text|text]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct text by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:struct tty</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
7915 &lt;br/&gt;
7916&nbsp;/* &lt;br/&gt;
7917&nbsp;&nbsp;* A tty structure is needed for &lt;br/&gt;
7918&nbsp;&nbsp;* each UNIX character device that &lt;br/&gt;
7919&nbsp;&nbsp;* is used for normal terminal IO. &lt;br/&gt;
7920&nbsp;&nbsp;* The routines in tty.c handle the &lt;br/&gt;
7921&nbsp;&nbsp;* common code associated with &lt;br/&gt;
7922&nbsp;&nbsp;* these structures. &lt;br/&gt;
7923&nbsp;&nbsp;* The definition and device dependent &lt;br/&gt;
7924&nbsp;&nbsp;* code is in each driver (kl.c dc.c dh.c) &lt;br/&gt;
7925&nbsp;&nbsp;*/ &lt;br/&gt;
7926&nbsp;struct tty &lt;br/&gt;
7927&nbsp;{ &lt;br/&gt;
7928&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct clist|struct clist]] t_rawq; /* input chars right off device */     &lt;br/&gt;
&lt;div class="wikinote"&gt;
*原始输入队列
&lt;/div&gt;
7929&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct clist|struct clist]] t_canq; /* input chars after erase and kill */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*非原始输入队列
&lt;/div&gt;
7930&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct clist|struct clist]] t_outq; /* output list to device */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*输出队列
&lt;/div&gt;
7931&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int    t_flags;   /* mode, settable by stty call */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*模式位，模式常量定义参看 [[file:tty.h|tty.h]]
&lt;/div&gt;
7932&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int    *t_addr;   /* device address (register or &lt;br/&gt;
7933&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startup fcn) */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 设备寄存器
*或 特殊启动函数(置SSTART标志)
&lt;/div&gt;
7934&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char   t_delct;   /* number of delimiters in raw q */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*原始队列中 的 定界符数
&lt;/div&gt;
7935&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char   t_col;     /* printing column of device */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前 列位置
&lt;/div&gt;
7936&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char   t_erase;   /* erase character */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*"擦除"字符
&lt;/div&gt;
7937&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char   t_kill;    /* kill character */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*"删除行"字符
&lt;/div&gt;
7938&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char   t_state;   /* internal state, not visible &lt;br/&gt;
7939&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;externally */ &lt;br/&gt;
7940&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char   t_char;    /* character temporary */ &lt;br/&gt;
7941&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int    t_speeds;  /* output+input line speed */ &lt;br/&gt;
7942&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int    t_dev;     /* device name */ &lt;br/&gt;
7943&nbsp;}; &lt;br/&gt;
7944&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:klclose]]
*[[code:klxint]]
*[[code:klrint]]
*[[code:klsgtty]]
*[[code:wflushtty]]
*[[code:flushtty]]
*[[code:canon]]
*[[code:ttyinput]]
*[[code:ttyoutput]]
*[[code:ttrstrt]]
*[[code:ttstart]]
*[[code:ttread]]
*[[code:ttwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:struct tty by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:stty</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*stty 的系统调用函数
*设置 tty参数
**t_speeds
**t_erase
**t_kill
**t_flags
*传入2个参数 fildes, arg
**fildes : 指定tty设备的字符设备装载文件的文件描述号，保存在[[skill:u.u_ar0|u.u_ar0]][R0](参看 [[文件系统]])&lt;br/&gt;(在 [[code:sgtty|sgtty]] 中处理)
**arg : 存放tty参数的地址，保存在[[code:user|u.u_arg[0]]]

&lt;/div&gt;
&lt;div class="wikicode"&gt;
8180&nbsp;/* The routine implementing the stty system call.&lt;br/&gt;
8181&nbsp;&nbsp;* Read in values and call lower level.&lt;br/&gt;
8182&nbsp;&nbsp;*/&lt;br/&gt;
8183&nbsp;stty()&lt;br/&gt;
8184&nbsp;{&lt;br/&gt;
8185&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int *up;&lt;br/&gt;
8186&lt;br/&gt;
8187&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;up = [[code:user|u.u_arg]][0];&lt;br/&gt;
8188&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][0] = [[code:fuword|fuword]](up);&lt;br/&gt;
8189&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][1] = [[code:fuword|fuword]](++up);&lt;br/&gt;
8190&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][2] = [[code:fuword|fuword]](++up);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:user|u.u_arg[]]] ← 欲设置的tty参数值
&lt;/div&gt;
8191&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sgtty|sgtty]](0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*根据[[code:user|u.u_arg[]]]设置tty参数
&lt;/div&gt;
8192&nbsp;}&lt;br/&gt;
8193&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Param===
:(stty = 31.)
:(file descriptor in r0)
:&lt;b&gt;sys stty; arg&lt;/b&gt;
:...
:arg:  .byte ispeed, ospeed; .byte erase, kill; mode
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:stty by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:subyte</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0806 ~ 0886]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:subyte by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:suibyte</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0806 ~ 0886]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:suibyte by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:suiword</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0806 ~ 0886]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:suiword by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sumount</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*实现系统调用umount的函数
*卸载当前的装载文件系统
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6140&lt;br/&gt;
6141&nbsp;/*&lt;br/&gt;
6142&nbsp;&nbsp;* the umount system call.&lt;br/&gt;
6143&nbsp;&nbsp;*/&lt;br/&gt;
6144&nbsp;sumount()&lt;br/&gt;
6145&nbsp;{&lt;br/&gt;
6146&nbsp;&nbsp;&nbsp;&nbsp;int d;&lt;br/&gt;
6147&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|struct inode]] *ip;&lt;br/&gt;
6148&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct mount|struct mount]] *mp;&lt;br/&gt;
6149&lt;br/&gt;
6150&nbsp;&nbsp;&nbsp;&nbsp;[[code:update|update]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将被修改过的超级块与INODE更新回磁盘
&lt;/div&gt;
6151&nbsp;&nbsp;&nbsp;&nbsp;d = [[code:getmdev|getmdev]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*获取当前 [[文件系统#装载文件系统|装载文件系统]] 的设备号 赋给d
&lt;/div&gt;
6152&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]])&lt;br/&gt;
6153&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若有错误,直接返回
&lt;/div&gt;
6154&nbsp;&nbsp;&nbsp;&nbsp;for(mp = &[[code:struct mount|mount]][0]; mp &lt; &[[code:struct mount|mount]][NMOUNT]; mp++)&lt;br/&gt;
6155&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(mp-&gt;m_bufp!=NULL && d==mp-&gt;m_dev)&lt;br/&gt;
6156&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto found;&lt;br/&gt;
6157&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EINVAL;&lt;br/&gt;
6158&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历装载块数组,寻找当前 [[文件系统#装载文件系统|装载文件系统]]对应的装载块
**若找到,跳转至6160行
**若没有找到,抛出错误EINVAL,参见[[错误代码]]
&lt;/div&gt;
6159&lt;br/&gt;
6160&nbsp;found:&lt;br/&gt;
6161&nbsp;&nbsp;&nbsp;&nbsp;for(ip = &[[code:struct inode|inode]][0]; ip &lt; &[[code:struct inode|inode]][NINODE]; ip++)&lt;br/&gt;
6162&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_number!=0 && d==ip-&gt;i_dev) {&lt;br/&gt;
6163&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EBUSY;&lt;br/&gt;
6164&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历内存INODE表
**若在表中能找到 对应于当前[[文件系统#装载文件系统|装载文件系统]]的inode
***抛出错误EBUSY,参见[[错误代码]]
***直接返回
&lt;/div&gt;
6165&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
6166&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][d.d_major].d_close)(d, 0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*关闭设备
&lt;/div&gt;
6167&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:struct mount|mp]]-&gt;m_inodp;&lt;br/&gt;
6168&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag =& ~IMOUNT;&lt;br/&gt;
6169&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*对于装载INODE,清IMOUNT标识
*勾连数减1
&lt;/div&gt;
6170&nbsp;&nbsp;&nbsp;&nbsp;ip = [[code:struct mount|mp]]-&gt;m_bufp;&lt;br/&gt;
6171&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct mount|mp]]-&gt;m_bufp = NULL;&lt;br/&gt;
6172&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]]([[code:struct buf|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*使 [[code:struct mount|装载块m_bufp]]指针 指向空
*释放 当前装载文件系统 超级块 对应的 缓存块
&lt;/div&gt;
6173&nbsp;}&lt;br/&gt;
6174&nbsp;/* -------------------------           */&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[系统调用]]
*[[文件系统]]

===Param===
:(umount = 22.)
:&lt;b&gt;sys  umount; special&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sumount by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sureg</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 相对地址映照表 加载为 地址映照表
*相对地址映照表 为 [[code:user|u.u_uisa]]/[[code:user|u.u_uisd]]
*加载到 UISA UISD 寄存器
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1732&nbsp;&lt;br/&gt;
1733&nbsp;/* &lt;br/&gt;
1734&nbsp;&nbsp;* Load the user hardware segmentation &lt;br/&gt;
1735&nbsp;&nbsp;* registers from the software prototype. &lt;br/&gt;
1736&nbsp;&nbsp;* The software registers must have &lt;br/&gt;
1737&nbsp;&nbsp;* been setup prior by estabur. &lt;br/&gt;
1738&nbsp;&nbsp;*/ &lt;br/&gt;
1739&nbsp;sureg() &lt;br/&gt;
1740&nbsp;{ &lt;br/&gt;
1741&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *up, *rp, a; &lt;br/&gt;
1742&nbsp;&lt;br/&gt;
1743&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = [[code:user|u.u_procp]]-&gt;p_addr; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*a 指向 PPDA区
&lt;/div&gt;
1744&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;up = &[[code:user|u.u_uisa]][16]; &lt;br/&gt;
1745&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = &UISA[[skill:r|-&gt;r]][16]; &lt;br/&gt;
1746&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(cputype == 40) { &lt;br/&gt;
1747&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;up =- 8; &lt;br/&gt;
1748&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp =- 8; &lt;br/&gt;
1749&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*up 指向 [[code:user|u.u_uisa[8]]]
*rp 指向 UISA[8]
*1746 的 判断 当前机器为pdp11/40时为真&lt;br/&gt;不为pdp11/40时不作讨论
&lt;/div&gt;
1750&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(rp &gt; &UISA[[skill:r|-&gt;r]][0]) &lt;br/&gt;
1751&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--rp = *--up + a; &lt;br/&gt;
&lt;div class="wikinote"&gt;
* UISA[i] ← [[code:user|u.u_uisa]][i] + a&lt;br/&gt;i = 0..7
&lt;/div&gt;
1752&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((up=[[code:user|u.u_procp]]-&gt;p_textp) != NULL) &lt;br/&gt;
1753&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a =- up-&gt;x_caddr; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若已加载正文段，则 a ← PPDA区首地址 - 正文段首地址
&lt;/div&gt;
1754&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;up = &[[code:user|u.u_uisd]][16]; &lt;br/&gt;
1755&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = &UISD[[skill:r|-&gt;r]][16]; &lt;br/&gt;
1756&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(cputype == 40) { &lt;br/&gt;
1757&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;up =- 8; &lt;br/&gt;
1758&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp =- 8; &lt;br/&gt;
1759&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*up 指向 [[code:user|u.u_uisd[8]]]
*rp 指向 UISD[8]
*1756 的 判断 当前机器为pdp11/40时为真&lt;br/&gt;不为pdp11/40时不作讨论
&lt;/div&gt;
1760&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(rp &gt; &UISD[[skill:r|-&gt;r]][0]) { &lt;br/&gt;
1761&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*--rp = *--up; &lt;br/&gt;
1762&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((*rp & WO) == 0) &lt;br/&gt;
1763&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp[(UISA-UISD)/2] =- a; &lt;br/&gt;
1764&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
* UISD[i] ← [[code:user|u.u_uisd[i]]]&lt;br/&gt;i = 0..7
* 若 [[code:user|u.u_uisd[i]]] 不含有写标志 (1762)(数据段和栈段含有写标志，只有正文段不含写标志)，则&lt;br/&gt;UISA[i] ← UISA[i] - a&lt;br/&gt;i = 0..7&lt;br/&gt;相当于UISA[i] ← [[code:user|u.u_uisa]][i] + 正文段起始地址
&lt;/div&gt;
1765&nbsp;} &lt;br/&gt;
1766&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存管理]]

===Caller===
*[[code:estabur]]
*[[code:swtch]]
*[[code:expand]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sureg by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:suser</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*判断当前用户是否有超级用户权限，参看[[权限管理]]
*若有超级用户权限，返回1
*若不是超级用户，则抛出 EPERM [[错误代码]]，返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6806&lt;br/&gt;
6807 /*&lt;br/&gt;
6808&nbsp;&nbsp;* Test if the current user is the&lt;br/&gt;
6809&nbsp;&nbsp;* super user.&lt;br/&gt;
6810&nbsp;&nbsp;*/&lt;br/&gt;
6811 suser()&lt;br/&gt;
6812 {&lt;br/&gt;
6813&lt;br/&gt;
6814&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_uid]] == 0)&lt;br/&gt;
6815&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(1); &lt;br/&gt;
6816&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u.u_error = EPERM;&lt;br/&gt;
6817&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0);&lt;br/&gt;
6818 }&lt;br/&gt;
6819 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Caller===
*[[code:stime]]
*[[code:setuid]]
*[[code:setgid]]
*[[code:nice]]
*[[code:unlink]]
*[[code:chown]]
*[[code:link]]
*[[code:mknod]]
*[[code:owner]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:suser by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:suword</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[code:0806 ~ 0886]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:suword by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:swap</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*负责进程图像在内存和盘交换区之间的传送
*传入4个参数:blkno,coreddr,count,rdflg
**blkno : 磁盘位置起始块号(256字/块)
**coreddr : 内存起始块号(32字/块)
**count : 需要传送的内存块数
**rdflg : 读/写 磁盘 交换区标志，标志常量定义在[[file:buf.h|buf.h]]
*返回值
**若错误，则返回B_ERROR
**否则，返回0
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5192&lt;br/&gt;
5193&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
5194&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* swap I/O&lt;br/&gt;
5195&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
5196&nbsp;&nbsp;swap(blkno, coreaddr, count, rdflg)&lt;br/&gt;
5197&nbsp;&nbsp;{&lt;br/&gt;
5198&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int *fp;&lt;br/&gt;
5199&lt;br/&gt;
5200&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp = &[[code:struct buf|swbuf]].b_flags;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将swbuf.b_flags的地址赋给fp,使得可以通过fp对swbuf.b_flags进行修改和访问
&lt;/div&gt;
5201&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]6();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
&lt;/div&gt;
5202&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (*fp&B_BUSY) {&lt;br/&gt;
5203&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*fp =&lt;nowiki&gt;|&lt;/nowiki&gt; B_WANTED;&lt;br/&gt;
5204&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](fp, PSWP);&lt;br/&gt;
5205&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断fp是否含B_BUSY
**若包含,表明swbuf正在被使用
***置B_WANTED标志
***以优先级PSWP在fp上睡眠,参看[[睡眠原因]]
**若不包含,表明swbuf当前空闲,可以使用
&lt;/div&gt;
5206&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*fp = B_BUSY &lt;nowiki&gt;|&lt;/nowiki&gt; B_PHYS &lt;nowiki&gt;|&lt;/nowiki&gt; rdflg;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*b_flags置为 B_BUSY(被占用),B_PHPS(传送的是进程图像),rdflg(进行读或写I/O标志)
&lt;/div&gt;
5207&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|swbuf]].b_dev = swapdev;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*b_dev置为磁盘盘交换区的设备号
&lt;/div&gt;
5208&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|swbuf]].b_wcount = - (count&lt;&lt;5);  /* 32 w/block */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*b_wcount存放将要进行传输的字数
**传入的参数count为将要进行传输的内存块数,内存每块有32个字,count左移五位(相当于乘以32)可得传输字数
&lt;/div&gt;
5209&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|swbuf]].b_blkno = blkno;&lt;br/&gt;
5210&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|swbuf]].b_addr = coreaddr&lt;&lt;6;     /* 64 b/block */&lt;br/&gt;
5211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct buf|swbuf]].b_xmem = (coreaddr&gt;&gt;10) & 077;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*b_blkno存放磁盘起始块号
*b_addr 缓存块内存起始地址的低16位(coreaddr为16位(int),左移6位即得低10位，在其拼接6个0 (每块大小为2^6字节))
*b_xmem 缓存块内存起始地址的高6位(coreaddr为16位(int),右移10位取最后六位,即得高6位,在pdp11/40中只有最后2位有效)
&lt;/div&gt;
5212&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:bdevsw|bdevsw]][swapdev&gt;&gt;8].d_strategy)(&[[code:struct buf|swbuf]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*启动磁盘盘交换区设备
*将I/O请求块放入该设备I/O请求队列
&lt;/div&gt;
5213&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]6();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
&lt;/div&gt;
5214&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while((*fp&B_DONE)==0)&lt;br/&gt;
5215&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](fp, PSWP);&lt;br/&gt;
5216&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (*fp&B_WANTED)&lt;br/&gt;
5217&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](fp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*判断本次I/O是否结束
**若没有结束则在fp上以优先级PSWP睡眠
**若已经结束,再判断是否含B_WANTED
***若有B_WANTED则唤醒所有等待使用该swbuf的进程
&lt;/div&gt;
5218&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl]]0();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
5219&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*fp =& ~(B_BUSY&lt;nowiki&gt;|&lt;/nowiki&gt;B_WANTED);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*在本次I/O完毕后去掉B_BUSY,B_WANTED标志,以供其他进程使用
&lt;/div&gt;
5220&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(*fp&B_ERROR);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*如果 I/O 出错，则返回B_ERROR
*否则，返回0
&lt;/div&gt;
5221&nbsp;&nbsp;}&lt;br/&gt;
5222&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程图像]]

===Caller===
*[[code:sched]]
*[[code:xswap]]
*[[code:xalloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:swap by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:swapdev</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[code:4695 ~ 4699]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:swapdev by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:swplo</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[code:4695 ~ 4699]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:swplo by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:swtch</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*[[进程调度]]主循环
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2170&lt;br/&gt;
2171&lt;br/&gt;
2172&nbsp;/*&lt;br/&gt;
2173&nbsp;&nbsp;* This routine is called to reschedule the CPU.&lt;br/&gt;
2174&nbsp;&nbsp;* if the calling process is not in RUN state,&lt;br/&gt;
2175&nbsp;&nbsp;* arrangements for it to restart must have&lt;br/&gt;
2176&nbsp;&nbsp;* been made elsewhere, usually by calling via sleep.&lt;br/&gt;
2177&nbsp;&nbsp;*/&lt;br/&gt;
2178&nbsp;swtch()&lt;br/&gt;
2179&nbsp;{&lt;br/&gt;
2180&nbsp;&nbsp;&nbsp;&nbsp;static [[code:proc|struct proc]] *p;&lt;br/&gt;
2181&nbsp;&nbsp;&nbsp;&nbsp;register i, n;&lt;br/&gt;
2182&nbsp;&nbsp;&nbsp;&nbsp;register [[code:proc|struct proc]] *rp;&lt;br/&gt;
2183&lt;br/&gt;
2184&nbsp;&nbsp;&nbsp;&nbsp;if([[code:proc|p]] == NULL)&lt;br/&gt;
2185&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]] = &[[code:proc|proc]][0];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若静态变量p为空,则使其指向0#进程
&lt;/div&gt;
2186&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
2187&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Remember stack of caller&lt;br/&gt;
2188&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
2189&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:savu|savu]]([[code:user|u]].u_rsav);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*保存当前函数的r5,r6
&lt;/div&gt;
2190&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
2191&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Switch to scheduler's stack&lt;br/&gt;
2192&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
2193&nbsp;&nbsp;&nbsp;&nbsp;[[code:retu|retu]]([[code:proc|proc]][0].p_addr);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*转入0#调度进程
&lt;/div&gt;
2194&lt;br/&gt;
2195&nbsp;&nbsp;loop:&lt;br/&gt;
2196&nbsp;&nbsp;&nbsp;&nbsp;runrun = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清runrun标志
&lt;/div&gt;
2197&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]] = [[code:proc|p]];&lt;br/&gt;
2198&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]] = NULL;&lt;br/&gt;
2199&nbsp;&nbsp;&nbsp;&nbsp;n = 128;&lt;br/&gt;
2200&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
2201&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Search for highest-priority runnable process&lt;br/&gt;
2202&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
2203&nbsp;&nbsp;&nbsp;&nbsp;i = NPROC;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*NPROC为[[code:proc|proc数组]]的大小,定义见[[file:param.h|param.h]]的144行,值为50
&lt;/div&gt;
2204&nbsp;&nbsp;&nbsp;&nbsp;do {&lt;br/&gt;
2205&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]]++;&lt;br/&gt;
2206&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:proc|rp]] &gt;= &proc[NPROC])&lt;br/&gt;
2207&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]] = &proc[0];&lt;br/&gt;
2208&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:proc|rp]]-&gt;p_stat==SRUN && ([[code:proc|rp]]-&gt;p_flag&SLOAD)!=0) {&lt;br/&gt;
2209&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:proc|rp]]-&gt;p_pri &lt; n) {&lt;br/&gt;
2210&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]] = [[code:proc|rp]];&lt;br/&gt;
2211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = [[code:proc|rp]]-&gt;p_pri;&lt;br/&gt;
2212&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2213&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2214&nbsp;&nbsp;&nbsp;&nbsp;} while(--i);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:proc|proc数组]],寻找处于就绪状态,进程图像在内存中,且优先级最高的进程
&lt;/div&gt;
2215&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
2216&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If no process is runnable, idle.&lt;br/&gt;
2217&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
2218&nbsp;&nbsp;&nbsp;&nbsp;if(p == NULL) {&lt;br/&gt;
2219&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]] = [[code:proc|rp]];&lt;br/&gt;
2220&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:idle|idle]]();&lt;br/&gt;
2221&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若没能搜到,进入闲置状态,等待中断
*中断时若有进程醒来,则选中
&lt;/div&gt;
2222&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2223&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|rp]] = [[code:proc|p]];&lt;br/&gt;
2224&nbsp;&nbsp;&nbsp;&nbsp;curpri = n;&lt;br/&gt;
2225&nbsp;&nbsp;&nbsp;&nbsp;/* Switch to stack of the new process and set up&lt;br/&gt;
2226&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* his segmentation registers.&lt;br/&gt;
2227&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
2228&nbsp;&nbsp;&nbsp;&nbsp;[[code:retu|retu]]([[code:proc|rp]]-&gt;p_addr);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若搜到
**则将当前优先级置为选中进程的优先级
**将KISA6指向其ppda区首址
**恢复被选中进程的r5,r6&lt;/div&gt;
2229&nbsp;&nbsp;&nbsp;&nbsp;[[code:sureg|sureg]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*为新选中进程设置用户态内存管理寄存器组
&lt;/div&gt;
2230&nbsp;&nbsp;&nbsp;&nbsp;/*&lt;br/&gt;
2231&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If the new process paused because it was&lt;br/&gt;
2232&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* swapped out, set the stack level to the last call&lt;br/&gt;
2233&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to savu(u_ssav). This means that the return&lt;br/&gt;
2235&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* actually returns from the last routine which did&lt;br/&gt;
2236&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the savu.&lt;br/&gt;
2237&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&lt;br/&gt;
2238&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* You are not expected to understand this.&lt;br/&gt;
2239&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
2240&nbsp;&nbsp;&nbsp;&nbsp;if([[code:proc|rp]]-&gt;p_flag&SSWAP) {&lt;br/&gt;
2241&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:proc|p]]-&gt;p_flag =& ~SSWAP;&lt;br/&gt;
2242&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:aretu|aretu]]([[code:user|u]].u_ssav);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若被选中进程带有SSWAP标志
**则清SSWAP标志
**调用[[code:aretu|aretu]]恢复r5,r6
&lt;/div&gt;
2243&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2244&nbsp;&nbsp;&nbsp;&nbsp;/* The value returned here has many subtle implications.&lt;br/&gt;
2245&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* See the newproc comments.&lt;br/&gt;
2246&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&lt;br/&gt;
2247&nbsp;&nbsp;&nbsp;&nbsp;return(1);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*该处的返回值1只有在[[进程调度#新建子进程|新建子进程]]后,子进程从swtch中直接返回时才有用,参见[[进程调度#创建子进程|进程调度之创建子进程]]
&lt;/div&gt;
2248&nbsp;}&lt;br/&gt;
2249&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程调度]]

===Caller===
*[[code:0751 ~ 0805]]
*[[code:sleep]]
*[[code:expand]]
*[[code:exit]]
*[[code:stop]]
*[[code:xalloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:swtch by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sync</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统调用函数,通过调用[[code:update|update]]函数来实现
*函数功能同[[code:update|update]]函数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3485&lt;br/&gt;
3486&nbsp;sync()&lt;br/&gt;
3487&nbsp;{&lt;br/&gt;
3488&lt;br/&gt;
3489&nbsp;&nbsp;&nbsp;&nbsp;[[code:update|update]]();&lt;br/&gt;
3490&nbsp;}&lt;br/&gt;
3491&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;

===Param===
:(sync = 36.; not in assembler)
:&lt;b&gt;sys  sync&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sync by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:sysent</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*系统调用入口表结构
*预定义在 [[file:sysent.c|sysent.c]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2663 &lt;br/&gt;
2664&nbsp;/* &lt;br/&gt;
2665&nbsp;&nbsp;* structure of the system entry table (sysent.c) &lt;br/&gt;
2666&nbsp;&nbsp;*/ &lt;br/&gt;
2667&nbsp;struct sysent { &lt;br/&gt;
2668&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     count; /* argument count */ &lt;br/&gt;
2669&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     (*call)(); /* name of handler */ &lt;br/&gt;
2670&nbsp;} sysent[64]; &lt;br/&gt;
2671&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[系统调用]]

===Caller===
*[[code:trap]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:sysent by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:text</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
4300&nbsp;/* &lt;br/&gt;
4301&nbsp;&nbsp;* Text structure. &lt;br/&gt;
4302&nbsp;&nbsp;* One allocated per pure &lt;br/&gt;
4303&nbsp;&nbsp;* procedure on swap device. &lt;br/&gt;
4304&nbsp;&nbsp;* Manipulated by text.c &lt;br/&gt;
4305&nbsp;&nbsp;*/ &lt;br/&gt;
4306&nbsp;struct text &lt;br/&gt;
4307&nbsp;{ &lt;br/&gt;
4308&nbsp;&nbsp;int x_daddr;  /* disk address of segment */     &lt;br/&gt;
4309&nbsp;&nbsp;int x_caddr;  /* core address, if loaded */     &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 [[共享正文段]]
*当 [[共享正文段]] 在内存中，由 x_caddr 指向
*当 [[共享正文段]] 在盘交换区中，由 x_daddr 指向
&lt;/div&gt;
4310&nbsp;&nbsp;int x_size; /* size (*64) */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[共享正文段]]长度 (块数)
&lt;/div&gt;
4311&nbsp;&nbsp;int *x_iptr; /* inode of prototype */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向此[[共享正文段]]的[[code:struct inode|INODE]]
&lt;/div&gt;
4312&nbsp;&nbsp;char x_count;  /* reference count */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*引用此[[共享正文段]] 的进程数
&lt;/div&gt;
4313&nbsp;&nbsp;char x_ccount; /* number of loaded references */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*引用此[[共享正文段]] ,且[[进程图像]]在内存中 的进程数
&lt;/div&gt;
4314&nbsp;} text[NTEXT]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*NTEXT 定义在 [[file:param.h|param.h]] 0145行，值为40
&lt;/div&gt;
4315&nbsp;/* ------------------------- */ &lt;br/&gt;
4316 &lt;br/&gt;
4317 &lt;br/&gt;
4318 &lt;br/&gt;
4319 &lt;br/&gt;
4320 &lt;br/&gt;
4321 &lt;br/&gt;
4322 &lt;br/&gt;
4323 &lt;br/&gt;
4324 &lt;br/&gt;
4325 &lt;br/&gt;
4326 &lt;br/&gt;
4327 &lt;br/&gt;
4328 &lt;br/&gt;
4329 &lt;br/&gt;
4330 &lt;br/&gt;
4331 &lt;br/&gt;
4332 &lt;br/&gt;
4333 &lt;br/&gt;
4334 &lt;br/&gt;
4335 &lt;br/&gt;
4336 &lt;br/&gt;
4337 &lt;br/&gt;
4338 &lt;br/&gt;
4339 &lt;br/&gt;
4340 &lt;br/&gt;
4341 &lt;br/&gt;
4342 &lt;br/&gt;
4343 &lt;br/&gt;
4344 &lt;br/&gt;
4345 &lt;br/&gt;
4346 &lt;br/&gt;
4347 &lt;br/&gt;
4348 &lt;br/&gt;
4349 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程图像]]

===Caller===
*[[code:xalloc]]
*[[code:xccdec]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:text by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:timeout</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*向 事件执行队列(参看[[code:clock|clock]]) 添加一个事件
*输入3个参数 fun , arg , tim
**fun : 事件函数
**arg : 事件参数
**tim : 事件延迟时间
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3833 &lt;br/&gt;
3834&nbsp;/* &lt;br/&gt;
3835&nbsp;&nbsp;* timeout is called to arrange that &lt;br/&gt;
3836&nbsp;&nbsp;* fun(arg) is called in tim/HZ seconds. &lt;br/&gt;
3837&nbsp;&nbsp;* An entry is sorted into the callout &lt;br/&gt;
3838&nbsp;&nbsp;* structure. The time in each structure &lt;br/&gt;
3839&nbsp;&nbsp;* entry is the number of HZ’s more &lt;br/&gt;
3840&nbsp;&nbsp;* than the previous entry. &lt;br/&gt;
3841&nbsp;&nbsp;* In this way, decrementing the &lt;br/&gt;
3842&nbsp;&nbsp;* first entry has the effect of &lt;br/&gt;
3843&nbsp;&nbsp;* updating all entries. &lt;br/&gt;
3844&nbsp;&nbsp;*/ &lt;br/&gt;
3845&nbsp;timeout(fun, arg, tim) &lt;br/&gt;
3846&nbsp;{ &lt;br/&gt;
3847&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct callo|struct callo]] *p1, *p2; &lt;br/&gt;
3848&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register t; &lt;br/&gt;
3849&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int s; &lt;br/&gt;
3850 &lt;br/&gt;
3851&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = tim; &lt;br/&gt;
3852&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = PS-&gt;integ; &lt;br/&gt;
3853&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1 = &[[code:callout|callout]][0]; &lt;br/&gt;
3854&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl7]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[关中断]]
*防止 时钟中断 处理 事件执行队列
&lt;/div&gt;
3855&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(p1-&gt;c_func != 0 && p1-&gt;c_time &lt;= t) { &lt;br/&gt;
3856&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t =- p1-&gt;c_time; &lt;br/&gt;
3857&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1++; &lt;br/&gt;
3858&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3859&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1-&gt;c_time =- t; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*在事件执行队列中，寻找 插入事件 的合适位置
&lt;/div&gt;
3860&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2 = p1; &lt;br/&gt;
3861&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(p2-&gt;c_func != 0) &lt;br/&gt;
3862&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2++; &lt;br/&gt;
3863&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(p2 &gt;= p1) { &lt;br/&gt;
3864&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(p2+1)-&gt;c_time = p2-&gt;c_time; &lt;br/&gt;
3865&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(p2+1)-&gt;c_func = p2-&gt;c_func; &lt;br/&gt;
3866&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(p2+1)-&gt;c_arg = p2-&gt;c_arg; &lt;br/&gt;
3867&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2--; &lt;br/&gt;
3868&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3869&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1-&gt;c_time = t; &lt;br/&gt;
3870&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1-&gt;c_func = fun; &lt;br/&gt;
3871&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1-&gt;c_arg = arg; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*插入事件
&lt;/div&gt;
3872&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS-&gt;integ = s; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*还原 PS
*相当于 [[开中断]]
&lt;/div&gt;
3873&nbsp;} &lt;br/&gt;
3874&nbsp;/* ------------------------- */ &lt;br/&gt;
3875 &lt;br/&gt;
3876 &lt;br/&gt;
3877 &lt;br/&gt;
3878 &lt;br/&gt;
3879 &lt;br/&gt;
3880 &lt;br/&gt;
3881 &lt;br/&gt;
3882 &lt;br/&gt;
3883 &lt;br/&gt;
3884 &lt;br/&gt;
3885 &lt;br/&gt;
3886 &lt;br/&gt;
3887 &lt;br/&gt;
3888 &lt;br/&gt;
3889 &lt;br/&gt;
3890 &lt;br/&gt;
3891 &lt;br/&gt;
3892 &lt;br/&gt;
3893 &lt;br/&gt;
3894 &lt;br/&gt;
3895 &lt;br/&gt;
3896 &lt;br/&gt;
3897 &lt;br/&gt;
3898 &lt;br/&gt;
3899 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[code:clock|clock]]

===Caller===
*[[code:ttstart]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:timeout by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:times</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*获取 当前进程 的时间参量
*输入1个参数 
**用于保存时间参量的空间的指针 : 保存在[[code:user|u.u_arg[0]]]
*返回参量按如下顺序
**u_utime
**u_stime
**u_cutime[2]
**u_cstime[2]
*参看 [[code:user|user]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3655 &lt;br/&gt;
3656&nbsp;times() &lt;br/&gt;
3657&nbsp;{ &lt;br/&gt;
3658&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *p; &lt;br/&gt;
3659 &lt;br/&gt;
3660&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(p = &[[code:user|u.u_utime]]; p &lt; &[[code:user|u.u_utime]]+6;) { &lt;br/&gt;
3661&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:suword|suword]]([[code:user|u.u_arg]][0], *p++); &lt;br/&gt;
3662&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][0] =+ 2; &lt;br/&gt;
3663&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3664&nbsp;} &lt;br/&gt;
3665&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Param===
:(times = 43.; not in assembler)
:&lt;b&gt;sys  times; buffer&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:times by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:trap</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*陷入处理函数
*共传入 7 个参数，对应 [[中断处理的现场保护]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2682&nbsp;&lt;br/&gt;
2683&nbsp;/* &lt;br/&gt;
2684&nbsp;&nbsp;* Called from l40.s or l45.s when a processor trap occurs. &lt;br/&gt;
2685&nbsp;&nbsp;* The arguments are the words saved on the system stack &lt;br/&gt;
2686&nbsp;&nbsp;* by the hardware and software during the trap processing. &lt;br/&gt;
2687&nbsp;&nbsp;* Their order is dictated by the hardware and the details &lt;br/&gt;
2688&nbsp;&nbsp;* of C’s calling sequence. They are peculiar in that &lt;br/&gt;
2689&nbsp;&nbsp;* this call is not ’by value’ and changed user registers &lt;br/&gt;
2690&nbsp;&nbsp;* get copied back on return. &lt;br/&gt;
2691&nbsp;&nbsp;* dev is the kind of trap that occurred. &lt;br/&gt;
2692&nbsp;&nbsp;*/ &lt;br/&gt;
2693&nbsp;trap(dev, sp, r1, nps, r0, pc, ps) &lt;br/&gt;
2694&nbsp;{ &lt;br/&gt;
2695&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register i, a; &lt;br/&gt;
2696&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:sysent|struct sysent]] *callp; &lt;br/&gt;
2697 &lt;br/&gt;
2698&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:savfp|savfp]](); &lt;br/&gt;
2699&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (([[PS|ps]]&UMODE) == UMODE) &lt;br/&gt;
2700&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dev =&lt;nowiki&gt;|&lt;/nowiki&gt; USER; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 陷入前为用户态，向dev追加USER标志
*UMODE 定义在 [[file:trap.c|trap.c]]
&lt;/div&gt;
2701&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]] = &r0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 r0 指针 赋予 u.u_ar0
*方便 使用[[skill:u.u_ar0|u.u_ar0的寻址方法]] 寻址其他参数
&lt;/div&gt;
2702&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(dev) { &lt;br/&gt;
2703 &lt;br/&gt;
2704&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
2705&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Trap not expected. &lt;br/&gt;
2706&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Usually a kernel mode bus error. &lt;br/&gt;
2707&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The numbers printed are used to &lt;br/&gt;
2708&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* find the hardware PS/PC as follows. &lt;br/&gt;
2709&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (all numbers in octal 18 bits) &lt;br/&gt;
2710&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* address_of_saved_ps = &lt;br/&gt;
2711&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* (ka6*0100) + aps - 0140000; &lt;br/&gt;
2712&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* address_of_saved_pc = &lt;br/&gt;
2713&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* address_of_saved_ps - 2; &lt;br/&gt;
2714&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
2715&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default: &lt;br/&gt;
2716&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("ka6 = %o<br/>\n", *ka6); &lt;br/&gt;
2717&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("aps = %o<br/>\n", &ps); &lt;br/&gt;
2718&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:printf|printf]]("trap type %o<br/>\n", dev); &lt;br/&gt;
2719&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("trap"); &lt;br/&gt;
2720 &lt;br/&gt;
2721&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 0+USER: /* bus error */ &lt;br/&gt;
2722&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = SIGBUS; &lt;br/&gt;
2723&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
2724 &lt;br/&gt;
2725&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
2726&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If illegal instructions are not &lt;br/&gt;
2727&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* being caught and the offending instruction &lt;br/&gt;
2728&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* is a SETD, the trap is ignored. &lt;br/&gt;
2729&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* This is because C produces a SETD at &lt;br/&gt;
2730&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the beginning of every program which &lt;br/&gt;
2731&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* will trap on CPUs without 11/45 FPU. &lt;br/&gt;
2732&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
2733&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1+USER: /* illegal instruction */ &lt;br/&gt;
2734&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:fuiword|fuiword]](pc-2)==SETD && [[code:user|u.u_signal]][SIGINS]==0)  &lt;br/&gt;
2735&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 当前指令为 SETD，并且用户不捕捉SIGINS信号，则跳过陷入（原因：参看 2725 - 2732）
&lt;/div&gt;
2736&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = SIGINS; &lt;br/&gt;
2737&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
2738 &lt;br/&gt;
2739&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 2+USER: /* bpt or trace */ &lt;br/&gt;
2740&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = SIGTRC; &lt;br/&gt;
2741&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
2742 &lt;br/&gt;
2743&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 3+USER: /* iot */ &lt;br/&gt;
2744&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = SIGIOT; &lt;br/&gt;
2745&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
2746 &lt;br/&gt;
2747&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 5+USER: /* emt */ &lt;br/&gt;
2748&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = SIGEMT; &lt;br/&gt;
2749&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
2750 &lt;br/&gt;
2751&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 6+USER: /* sys call */ &lt;br/&gt;
2752&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = 0; &lt;br/&gt;
2753&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[PS|ps]] =& ~EBIT; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清 错误状态/标志
**EBIT 定义在 [[file:trap.c|trap.c]]
&lt;/div&gt;
2754&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callp = &[[code:sysent|sysent]][ [[code:fuiword|fuiword]](pc-2)&077]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*callp ← 对应的系统调用入口
&lt;/div&gt;
2755&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callp == [[code:sysent|sysent]]) { /* indirect */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 callp 为0#系统调用入口(间接系统调用) (sysent[0] == sysent)，...
*参看 [[系统调用#直接/间接系统调用]]
*以下代码完成的工作
**读入 送给系统调用处理函数 的参数
*2759 - 2760 的说明
**约定 间接系统调用 的编码形式为 01044XX （SYS 定义在 [[File:trap.c|trap.c]]）
**若 违反约定，则将系统调用号 置为 63(实际该系统调用不存在)，将会抛出错误
&lt;/div&gt;
2756&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = [[code:fuiword|fuiword]](pc); &lt;br/&gt;
2757&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc =+ 2; &lt;br/&gt;
2758&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = [[code:fuword|fuword]](a); &lt;br/&gt;
2759&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((i & ~077) != SYS) &lt;br/&gt;
2760&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 077; /* illegal */&lt;br/&gt;
2761&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callp = &[[code:sysent|sysent]][i&077]; &lt;br/&gt;
2762&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i&lt;callp-&gt;count; i++) &lt;br/&gt;
2763&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][i] = [[code:fuword|fuword]](a =+ 2); &lt;br/&gt;
2764&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else { &lt;br/&gt;
2765&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0; i&lt;callp-&gt;count; i++) { &lt;br/&gt;
2766&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_arg]][i] = [[code:fuiword|fuiword]](pc); &lt;br/&gt;
2767&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc =+ 2; &lt;br/&gt;
2768&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2769&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2770&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_dirp]] = [[code:user|u.u_arg]][0]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此句意图很隐晦，需要联系具体系统调用进行解释
**在 使用系统调用 [[code:open|open]]时，第一个参数是文件路径
**[[code:open|open]] 中 调用 [[code:namei|namei]] 查找与路径对应的文件，其中[[code:namei|namei]] 的第一个参数为 [[code:uchar|uchar]]
**[[code:uchar|uchar]]是用来获取文件名的函数
**[[code:uchar|uchar]] 中通过[[code:user|u.u_dirp]]来获取文件名
**所以此处要将[[code:user|u.u_dirp]]指向第一个参数
&lt;/div&gt;
2771&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap1|trap1]](callp-&gt;call); &lt;br/&gt;
2772&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_intflg]]) &lt;br/&gt;
2773&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EINTR; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*此处构成 系统调用函数 的出错处理，详细参看[[code:trap1|trap1]] 2848 的说明
&lt;/div&gt;
2774&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_error]] &lt; 100) { &lt;br/&gt;
2775&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(u.u_error) { &lt;br/&gt;
2776&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[PS|ps]] =&lt;nowiki&gt;|&lt;/nowiki&gt; EBIT; &lt;br/&gt;
2777&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r0 = u.u_error; &lt;br/&gt;
2778&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2779&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
2780&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
2774 - 2780
*处理错误
*EBIT 定义在 [[file:trap.c|trap.c]]，对应 [[PS]] 的 C 位
&lt;/div&gt;
2781&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = SIGSYS; &lt;br/&gt;
2782&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
2783 &lt;br/&gt;
2784&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
2785&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Since the floating exception is an &lt;br/&gt;
2786&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* imprecise trap, a user generated &lt;br/&gt;
2787&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* trap may actually come from kernel &lt;br/&gt;
2788&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* mode. In this case, a signal is sent &lt;br/&gt;
2789&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to the current process to be picked &lt;br/&gt;
2790&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* up later. &lt;br/&gt;
2791&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
2792&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 8: /* floating exception */ &lt;br/&gt;
2793&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:psignal|psignal]](u.u_procp, SIGFPT); &lt;br/&gt;
2794&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
2795 &lt;br/&gt;
2796&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 8+USER: &lt;br/&gt;
2797&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = SIGFPT; &lt;br/&gt;
2798&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
2799 &lt;br/&gt;
2800&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* &lt;br/&gt;
2801&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If the user SP is below the stack segment, &lt;br/&gt;
2802&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* grow the stack automatically. &lt;br/&gt;
2803&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* This relies on the ability of the hardware &lt;br/&gt;
2804&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to restart a half executed instruction. &lt;br/&gt;
2805&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* On the 11/40 this is not the case and &lt;br/&gt;
2806&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the routine backup/l40.s may fail. &lt;br/&gt;
2807&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The classic example is on the instruction &lt;br/&gt;
2808&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* cmp     -(sp),-(sp) &lt;br/&gt;
2809&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
2810&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 9+USER: /* segmentation exception */ &lt;br/&gt;
2811&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = sp; &lt;br/&gt;
2812&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:backup|backup]]([[code:user|u.u_ar0]]) == 0) &lt;br/&gt;
2813&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:grow|grow]](a)) &lt;br/&gt;
2814&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
2815&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = SIGSEG; &lt;br/&gt;
2816&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
2817&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
2818&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:psignal|psignal]]([[code:user|u.u_procp]], i); &lt;br/&gt;
2819 &lt;br/&gt;
2820&nbsp;out: &lt;br/&gt;
2821&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:issig|issig]]()) &lt;br/&gt;
2822&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:psig|psig]](); &lt;br/&gt;
2823&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:setpri|setpri]]([[code:user|u.u_procp]]); &lt;br/&gt;
2824&nbsp;} &lt;br/&gt;
2825&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Extend===
=附图=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_trap.png"/></p>

===Ref===
*[[系统调用]]
*[[中断处理的现场保护]]
*[[中断]]

===Caller===
*[[code:0751 ~ 0805]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:trap by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:trap1</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*由 [[code:trap|trap]] 调用
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2826&lt;br/&gt;
2827&nbsp;/*&lt;br/&gt;
2828&nbsp;&nbsp;* Call the system-entry routine f (out of the&lt;br/&gt;
2829&nbsp;&nbsp;* sysent table). This is a subroutine for trap, and&lt;br/&gt;
2830&nbsp;&nbsp;* not in-line, because if a signal occurs&lt;br/&gt;
2831&nbsp;&nbsp;* during processing, an (abnormal) return is simulated from&lt;br/&gt;
2832&nbsp;&nbsp;* the last caller to savu(qsav); if this took place&lt;br/&gt;
2833&nbsp;&nbsp;* inside of trap, it wouldn’t have a chance to clean up.   &lt;br/&gt;
2834&nbsp;&nbsp;*&lt;br/&gt;
2835&nbsp;&nbsp;* If this occurs, the return takes place without&lt;br/&gt;
2836&nbsp;&nbsp;* clearing u_intflg; if it’s still set, trap&lt;br/&gt;
2837&nbsp;&nbsp;* marks an error which means that a system&lt;br/&gt;
2838&nbsp;&nbsp;* call (like read on a typewrite) got interrupted&lt;br/&gt;
2839&nbsp;&nbsp;* by a signal.&lt;br/&gt;
2840&nbsp;&nbsp;*/&lt;br/&gt;
2841&nbsp;trap1(f)&lt;br/&gt;
2842&nbsp;int (*f)();&lt;br/&gt;
2843&nbsp;{&lt;br/&gt;
2844&lt;br/&gt;
2845&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_intflg]] = 1;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 [[code:user|u.u_intflg]]（系统调用 出错标志）
*参看 后面的注释
&lt;/div&gt;
2846&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:savu|savu]]([[code:user|u.u_qsav]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*保存R5 R6到 [[code:user|u.u_qsav]]
&lt;/div&gt;
2847&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*f)();&lt;br/&gt;
2848&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_intflg]] = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*清 [[code:user|u.u_intflg]]（系统调用 出错标志）
&lt;/div&gt;
&lt;div class="wikinote"&gt;
关于此处的说明
*如果 系统调用处理函数 正常，则[[code:user|u.u_intflg]]=0
*若 系统调用处理函数 运行中 收到信号
**检测信号 时 直接从[[code:user|u.u_qsav]]恢复R5,R6([[code:sleep|sleep]] 2106)
**函数返回到[[code:trap|trap]]（SP已经恢复）
**此时，[[code:user|u.u_intflg]]=1
**在 [[code:trap|trap]] 2773 抛出错误
&lt;/div&gt;
2849&nbsp;}&lt;br/&gt;
2850&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[中断]]
===Caller===
*[[code:trap]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:trap1 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ttread</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*从 tty 读取字符
*传入1个参数 atp
**atp : 指定tty
*使用的隐式参数(传入字符的目标地址，字符个数，...)，参看[[code:passc|passc]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8530&nbsp;/* Called from device’s read routine after it has&lt;br/&gt;
8531&nbsp;&nbsp;* calculated the tty-structure given as argument.&lt;br/&gt;
8532&nbsp;&nbsp;* The pc is backed up for the duration of this call.&lt;br/&gt;
8533&nbsp;&nbsp;* In case of a caught interrupt, an RTI will re-execute.   &lt;br/&gt;
8534&nbsp;&nbsp;*/&lt;br/&gt;
8535&nbsp;ttread(atp)&lt;br/&gt;
8536&nbsp;[[code:struct tty|struct tty]] *atp;&lt;br/&gt;
8537&nbsp;{&lt;br/&gt;
8538&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp;&lt;br/&gt;
8539&lt;br/&gt;
8540&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = atp;&lt;br/&gt;
8541&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((tp-&gt;t_state&CARR_ON)==0)&lt;br/&gt;
8542&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 未打开，则直接返回
&lt;/div&gt;
8543&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tp-&gt;t_canq.c_cc &lt;nowiki&gt;||&lt;/nowiki&gt; [[code:canon|canon]](tp))&lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 非原始队列不为空&lt;br/&gt;或 有元素 能从 原始队列 传入 非原始队列&lt;br/&gt;则 ...
&lt;/div&gt;
8544&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (tp-&gt;t_canq.c_cc && [[code:passc|passc]]([[code:getc|getc]](&tp-&gt;t_canq))&gt;=0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*完成 读取 工作
&lt;/div&gt;
8545&nbsp;}&lt;br/&gt;
8546&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:klread]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ttread by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ttrstrt</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*由 [[code:ttstart|ttstart]] 8524 通过 [[code:timeout|timeout]] 送入事件处理队列 的延迟事件&lt;br/&gt;本函数为事件的处理函数
*重新启动tty进行输出
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8480&nbsp;/* ------------------------- */ &lt;br/&gt;
8481&nbsp;/* Restart typewriter output following a delay &lt;br/&gt;
8482&nbsp;&nbsp;* timeout. &lt;br/&gt;
8483&nbsp;&nbsp;* The name of the routine is passed to the timeout &lt;br/&gt;
8484&nbsp;&nbsp;* subroutine and it is called during a clock interrupt. &lt;br/&gt;
8485&nbsp;&nbsp;*/ &lt;br/&gt;
8486&nbsp;ttrstrt(atp) &lt;br/&gt;
8487&nbsp;{ &lt;br/&gt;
8488&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp; &lt;br/&gt;
8489 &lt;br/&gt;
8490&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = atp; &lt;br/&gt;
8491&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_state =& ~TIMEOUT; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清TIMEOUT标志
*参看[[code:ttstart|ttstart]]
&lt;/div&gt;
8492&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttstart|ttstart]](tp); &lt;br/&gt;
8493&nbsp;} &lt;br/&gt;
8494&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:ttstart]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ttrstrt by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ttstart</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*启动 tty 输出
*输入1个参数 atp
**atp : 指定 [[code:struct tty|tty]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8495&nbsp;/* Start output on the typewriter. It is used from the top &lt;br/&gt;
8496&nbsp;&nbsp;* half after some characters have been put on the output &lt;br/&gt;
8497&nbsp;&nbsp;* queue, from the interrupt routine to transmit the next &lt;br/&gt;
8498&nbsp;&nbsp;* character, and after a timeout has finished. &lt;br/&gt;
8499&nbsp;&nbsp;* If the SSTART bit is off for the tty the work is done &lt;br/&gt;
8500&nbsp;&nbsp;* here, using the protocol of the single-line interfaces    &lt;br/&gt;
8501&nbsp;&nbsp;* (kl, dl, dc); otherwise the address word of the tty &lt;br/&gt;
8502&nbsp;&nbsp;* structure is taken to be the name of the device-dependent &lt;br/&gt;
8503&nbsp;&nbsp;* start-up routine. &lt;br/&gt;
8504&nbsp;&nbsp;*/ &lt;br/&gt;
8505&nbsp;ttstart(atp) &lt;br/&gt;
8506&nbsp;[[code:struct tty|struct tty]] *atp; &lt;br/&gt;
8507&nbsp;{ &lt;br/&gt;
8508&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int *addr, c; &lt;br/&gt;
8509&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp; &lt;br/&gt;
8510&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct { int (*func)(); }; &lt;br/&gt;
8511 &lt;br/&gt;
8512&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = atp; &lt;br/&gt;
8513&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr = tp-&gt;t_addr; &lt;br/&gt;
8514&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tp-&gt;t_state&SSTART) { &lt;br/&gt;
8515&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*addr.func)(tp); &lt;br/&gt;
8516&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
8517&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 tty 有特殊启动函数，调用函数，并返回
&lt;/div&gt;
8518&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((addr-&gt;[[skill:tttcsr|tttcsr]]&DONE)==0 &lt;nowiki&gt;||&lt;/nowiki&gt; tp-&gt;t_state&TIMEOUT) &lt;br/&gt;
8519&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*接收器 作业未完成 或 TIMEOUT标志被置(参看后面的说明)，函数返回
&lt;/div&gt;
8520&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((c=[[code:getc|getc]](&tp-&gt;t_outq)) &gt;= 0) { &lt;br/&gt;
8521&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c&lt;=0177) &lt;br/&gt;
8522&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr-&gt;tttbuf = c &lt;nowiki&gt;|&lt;/nowiki&gt; (partab[c]&0200); &lt;br/&gt;
8523&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else { &lt;br/&gt;
8524&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:timeout|timeout]]([[code:ttrstrt|ttrstrt]], tp, c&0177); &lt;br/&gt;
8525&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_state &lt;nowiki&gt;=|&lt;/nowiki&gt; TIMEOUT; &lt;br/&gt;
8526&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
8527&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 输出队列不为空，则取出头元素c
**若 c 为普通字符，则
***c 送入 发送器数据缓存寄存器，用于向tty输出
***partab[c] & 200 用于置奇偶位 (引自LIONS代码)
**若 c 为延迟字符([[code:ttyoutput|ttyoutput]]置)，则插入延迟
***TIMEOUT标志 在 [[code:ttrstrt|ttrstrt]] 中清位&lt;br/&gt;该标志用于保证[[code:ttstart|ttstart]]两次连续的调用，第二次再不调用[[code:ttrstrt|ttrstrt]]，避免嵌套调用
&lt;/div&gt;
8528&nbsp;} &lt;br/&gt;
8529&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:klxint]]
*[[code:ttyinput]]
*[[code:ttrstrt]]
*[[code:ttwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ttstart by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ttwrite</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将指定内存地址空间的内容放入指定设备的输出队列中
*传入1个参数:
**atp:指定设备的[[code:struct tty|tty结构]]
*同时还传入一系列隐式参数:
**参看[[code:cpass|cpass]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8547&nbsp;/* Called from the device's write routine after it has&lt;br/&gt;
8548&nbsp;&nbsp;* calculated the tty-structure given as argument.&lt;br/&gt;
8549&nbsp;&nbsp;*/&lt;br/&gt;
8551&nbsp;struct tty *atp;&lt;br/&gt;
8553&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp;&lt;br/&gt;
8554&nbsp;&nbsp;&nbsp;&nbsp;register int c;&lt;br/&gt;
8555&nbsp;&nbsp;&nbsp;&nbsp;tp = atp;&lt;br/&gt;
8556&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:struct tty|tp-&gt;t_state]]&CARR_ON)==0)&lt;br/&gt;
8557&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若当前设备在逻辑上不存在,则直接返回
&lt;/div&gt;
8558&nbsp;&nbsp;&nbsp;&nbsp;while ((c=[[code:cpass|cpass]]())&gt;=0) {&lt;br/&gt;
8559&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl5]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级设为5,防止在该过程中有其他字符进入输出队列
&lt;/div&gt;
8560&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ([[code:struct tty|tp-&gt;t_outq.c_cc]] &gt; TTHIWAT) {&lt;br/&gt;
8561&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttstart|ttstart]](tp);&lt;br/&gt;
8562&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct tty|tp-&gt;t_state]] =&lt;nowiki&gt;|&lt;/nowiki&gt; ASLEEP;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*置ASLEEP标记,此语句无作用(源自LIONS源代码分析),参见[[遗留问题]]
&lt;/div&gt;
8563&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&tp-&gt;t_outq, TTOPRI);&lt;br/&gt;
8564&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
8565&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]]();&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
8566&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttyoutput|ttyoutput]](c, tp);&lt;br/&gt;
8567&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*8558 - 8567
*从指定的内存地址空间读入字符
*对于每个读入的字符
*若输出队列过长
**清输出队列直至缩短至一定长度为止,在此期间进程睡眠
*否则
**将读入的字符放入输出队列
*继续读入下一个字符,直到读完为止
&lt;/div&gt;
8568&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttstart|ttstart]](tp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*最后启动tty输出
&lt;/div&gt;
8569&nbsp;}&lt;br/&gt;
8570&nbsp;/* -------------------------   */&lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:klwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ttwrite by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ttyinput</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*向tty原始队列送入1个字符
*输入2个参数 ac , atp
**ac : 指定字符
**atp : 指定[[code:struct tty|tty]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8327&nbsp;/* Place a character on raw TTY input queue, putting in &lt;br/&gt;
8328&nbsp;&nbsp;* delimiters and waking up top half as needed. &lt;br/&gt;
8329&nbsp;&nbsp;* Also echo if required. &lt;br/&gt;
8330&nbsp;&nbsp;* The arguments are the character and the appropriate &lt;br/&gt;
8331&nbsp;&nbsp;* tty structure. &lt;br/&gt;
8332&nbsp;&nbsp;*/ &lt;br/&gt;
8333&nbsp;ttyinput(ac, atp) &lt;br/&gt;
8334&nbsp;[[code:struct tty|struct tty]] *atp; &lt;br/&gt;
8335&nbsp;{ &lt;br/&gt;
8336&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int t_flags, c; &lt;br/&gt;
8337&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp; &lt;br/&gt;
8338 &lt;br/&gt;
8339&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = atp; &lt;br/&gt;
8340&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = ac; &lt;br/&gt;
8341&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t_flags = tp-&gt;t_flags; &lt;br/&gt;
8342&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((c =& 0177) == ’\r’ && t_flags&CRMOD) &lt;br/&gt;
8343&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = ’<br/>\n’; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若tty 使用了CR换行，则
*\r → <br/>\n (输出([[code:ttyoutput|ttyoutput]])时 <br/>\n → \r<br/>\n)
&lt;/div&gt;
8344&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((t_flags&RAW)==0 && (c==CQUIT &lt;nowiki&gt;||&lt;/nowiki&gt; c==CINTR)) { &lt;br/&gt;
8345&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:signal|signal]](tp, c==CINTR? SIGINT:SIGQIT); &lt;br/&gt;
8346&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:flushtty|flushtty]](tp); &lt;br/&gt;
8347&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
8348&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty不是原始模式时
**CQUIT : 向该终端所有进程 发送SIGQIT 信号
**CINTR : 向该终端所有进程 发送SIGINT 信号　
&lt;/div&gt;
8349&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tp-&gt;t_rawq.c_cc&gt;=TTYHOG) { &lt;br/&gt;
8350&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:flushtty|flushtty]](tp); &lt;br/&gt;
8351&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
8352&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 tty原始队列 元素过多，则 清tty队列&lt;br/&gt; (处理过量输入，方式过于粗暴...)
&lt;/div&gt;
8353&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t_flags&LCASE && c&gt;=’A’ && c&lt;=’Z’) &lt;br/&gt;
8354&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c =+ ’a’-’A’; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 带 LCASE 标志(tty 只支持 64字符 ASCII 子集)
**A-Z → a-z
**输出([[code:ttyoutput|ttyoutput]])时 a-z → A-Z，折腾原因不明...列入[[遗留问题]]
&lt;/div&gt;
8355&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:putc|putc]](c, &tp-&gt;t_rawq); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*向 tty 原始队列送入 c
&lt;/div&gt;
8356&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t_flags&RAW &lt;nowiki&gt;||&lt;/nowiki&gt; c==’<br/>\n’ &lt;nowiki&gt;||&lt;/nowiki&gt; c==004) { &lt;br/&gt;
8357&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&tp-&gt;t_rawq); &lt;br/&gt;
8358&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:putc|putc]](0377, &tp-&gt;t_rawq)==0) &lt;br/&gt;
8359&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_delct++; &lt;br/&gt;
8360&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 为 原始模式，或c 为 换行符(<br/>\n) 或 传输结尾(EOT = 004)，则
**唤醒 等待 tty原始队列的进程
**向原始队列送入 定界符 (送入不一定成功，参看 LIONS源代码分析)
&lt;/div&gt;
8361&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (t_flags&ECHO) { &lt;br/&gt;
8362&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttyoutput|ttyoutput]](c, tp); &lt;br/&gt;
8363&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttstart|ttstart]](tp); &lt;br/&gt;
8364&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 为 全双工模式(输入字符需回显)，则回显字符
&lt;/div&gt;
8365&nbsp;} &lt;br/&gt;
8366&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:klrint]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ttyinput by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ttyoutput</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*向tty输出一个字符
*输入2个参数 ac , atp
**ac : 欲输出的字符
**atp : 指定[[code:struct tty|tty]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8367&nbsp;/* put character on TTY output queue, adding delays, &lt;br/&gt;
8368&nbsp;&nbsp;* expanding tabs, and handling the CR/NL bit. &lt;br/&gt;
8369&nbsp;&nbsp;* It is called both from the top half for output, and from &lt;br/&gt;
8370&nbsp;&nbsp;* interrupt level for echoing. &lt;br/&gt;
8371&nbsp;&nbsp;* The arguments are the character and the tty structure. &lt;br/&gt;
8372&nbsp;&nbsp;*/ &lt;br/&gt;
8373&nbsp;ttyoutput(ac, tp) &lt;br/&gt;
8374&nbsp;[[code:struct tty|struct tty]] *tp; &lt;br/&gt;
8375&nbsp;{ &lt;br/&gt;
8376&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register int c; &lt;br/&gt;
8377&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *rtp; &lt;br/&gt;
8378&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register char *colp; &lt;br/&gt;
8379&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int ctype; &lt;br/&gt;
8380 &lt;br/&gt;
8381&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rtp= tp; &lt;br/&gt;
8382&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = ac&0177; &lt;br/&gt;
8383&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Ignore EOT in normal mode to avoid hanging up &lt;br/&gt;
8384&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* certain terminals. &lt;br/&gt;
8385&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
8386&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c==004 && (rtp-&gt;t_flags&RAW)==0) &lt;br/&gt;
8387&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 c为EOF(文件结束字符)，且tty不是原始模式，则直接返回，不做处理
&lt;/div&gt;
8388&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Turn tabs to spaces as required &lt;br/&gt;
8389&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
8390&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c==’\t’ && rtp-&gt;t_flags&XTABS) { &lt;br/&gt;
8391&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do &lt;br/&gt;
8392&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttyoutput|ttyoutput]](’ ’, rtp); &lt;br/&gt;
8393&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (rtp-&gt;t_col&07); &lt;br/&gt;
8394&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
8395&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 c为制表符，且tty无法处理制表符，则将制表符换成若干空格(对其列 到8的倍数)
&lt;/div&gt;
8396&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* for upper-case-only terminals, &lt;br/&gt;
8397&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* generate escapes. &lt;br/&gt;
8398&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
8399&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (rtp-&gt;t_flags&LCASE) { &lt;br/&gt;
8400&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colp = "&lt;nowiki&gt;({)}!|^~’‘&lt;/nowiki&gt;"; &lt;br/&gt;
8401&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(*colp++) &lt;br/&gt;
8402&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c == *colp++) { &lt;br/&gt;
8403&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttyoutput|ttyoutput]](’\\’, rtp); &lt;br/&gt;
8404&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = colp[-2]; &lt;br/&gt;
8405&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
8406&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
8407&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (’a’&lt;=c && c&lt;=’z’) &lt;br/&gt;
8408&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c =+ ’A’ - ’a’; &lt;br/&gt;
8409&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
若 只支持 64字符 ASCII 子集，完成以下字符转义
**a - z → A - Z
**&lt;nowiki&gt;{ → \(&lt;/nowiki&gt;
**&lt;nowiki&gt;} → \)&lt;/nowiki&gt;
**&lt;nowiki&gt;| → \!&lt;/nowiki&gt;
**&lt;nowiki&gt;~ → \^&lt;/nowiki&gt;
**&lt;nowiki&gt;‘ → \’&lt;/nowiki&gt;
&lt;/div&gt;
8410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* turn &lt;nl&gt; to &lt;cr&gt;&lt;lf&gt; if desired. &lt;br/&gt;
8411&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
8412&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c==’<br/>\n’ && rtp-&gt;t_flags&CRMOD) &lt;br/&gt;
8413&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:ttyoutput|ttyoutput]](’\r’, rtp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若tty 使用了CR换行，则
**<br/>\n → \r<br/>\n
&lt;/div&gt;
8414&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:putc|putc]](c, &rtp-&gt;t_outq)) &lt;br/&gt;
8415&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 c 输出到tty输出队列失败，直接返回
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*以下开始计算 输出c 后的 设备延迟 (设备需要一定时间输出字符)
*详细说明参看 LIONS 源代码分析 25.4.5 (难得LIONS写得那么详细清楚...)
&lt;/div&gt;
8416&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Calculate delays. &lt;br/&gt;
8417&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The numbers here represent clock ticks &lt;br/&gt;
8418&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* and are not necessarily optimal for all terminals.    &lt;br/&gt;
8419&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The delays are indicated by characters above 0200,    &lt;br/&gt;
8420&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* thus (unfortunately) restricting the transmission &lt;br/&gt;
8421&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* path to 7 bits. &lt;br/&gt;
8422&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
8423&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colp = &rtp-&gt;t_col; &lt;br/&gt;
8424&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctype = [[file:tty.h|partab]][c]; &lt;br/&gt;
8425&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = 0; &lt;br/&gt;
8426&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(ctype&077) { &lt;br/&gt;
8427&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* ordinary */ &lt;br/&gt;
8428&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 0: &lt;br/&gt;
8429&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*colp)++; &lt;br/&gt;
8430&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* non-printing */ &lt;br/&gt;
8431&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1: &lt;br/&gt;
8432&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
8433&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* backspace */ &lt;br/&gt;
8434&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 2: &lt;br/&gt;
8435&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (*colp) &lt;br/&gt;
8436&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*colp)--; &lt;br/&gt;
8437&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
8438&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* newline */ &lt;br/&gt;
8439&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 3: &lt;br/&gt;
8440&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctype = (rtp-&gt;t_flags &gt;&gt; 8) & 03; &lt;br/&gt;
8441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ctype == 1) { /* tty 37 */ &lt;br/&gt;
8442&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (*colp) &lt;br/&gt;
8443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = max((*colp&gt;&gt;4) + 3, 6); &lt;br/&gt;
8444&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
8445&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ctype == 2) { /* vt05 */ &lt;br/&gt;
8446&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = 6; &lt;br/&gt;
8447&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
8448&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*colp = 0; &lt;br/&gt;
8449&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
8450&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* tab */ &lt;br/&gt;
8451&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 4: &lt;br/&gt;
8452&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctype = (rtp-&gt;t_flags &gt;&gt; 10) & 03; &lt;br/&gt;
8453&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ctype == 1) { /* tty 37 */ &lt;br/&gt;
8454&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = 1 - (*colp &lt;nowiki&gt;|&lt;/nowiki&gt; ~07); &lt;br/&gt;
8455&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c &lt; 5) &lt;br/&gt;
8456&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = 0; &lt;br/&gt;
8457&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
8458&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*colp &lt;nowiki&gt;=|&lt;/nowiki&gt; 07; &lt;br/&gt;
8459&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*colp)++; &lt;br/&gt;
8460&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
8461&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* vertical motion */ &lt;br/&gt;
8462&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 5: &lt;br/&gt;
8463&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rtp-&gt;t_flags & VTDELAY) /* tty 37 */ &lt;br/&gt;
8464&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = 0177; &lt;br/&gt;
8465&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; &lt;br/&gt;
8466&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* carriage return */ &lt;br/&gt;
8467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 6: &lt;br/&gt;
8468&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctype = (rtp-&gt;t_flags &gt;&gt; 12) & 03; &lt;br/&gt;
8469&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ctype == 1) { /* tn 300 */ &lt;br/&gt;
8470&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = 5; &lt;br/&gt;
8471&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
8472&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ctype == 2) { /* ti 700 */ &lt;br/&gt;
8473&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = 10; &lt;br/&gt;
8474&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
8475&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*colp = 0; &lt;br/&gt;
8476&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
8477&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c) &lt;br/&gt;
8478&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:putc|putc]](c&lt;nowiki&gt;|&lt;/nowiki&gt;0200, &rtp-&gt;t_outq); &lt;br/&gt;
8479&nbsp;} &lt;br/&gt;
8480&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:ttyinput]]
*[[code:ttwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ttyoutput by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ttystty</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*此函数 为 [[code:gtty|gtty]] 和 [[code:stty|stty]] 的"公共部分"(名不副实...)
*传入2个参数 atp , av
**atp : 指定 的 [[code:struct tty|struct tty]]
**av : 一个缓存区，用来交换tty状态
*对该函数作用说明如下
** av = 0 时，本函数由[[code:stty|stty]]调用&lt;br/&gt;[ [[code:stty|stty]] 调用 [[code:sgtty|sgtty(0)]] 调用 d_sgtty(0)(比如[[code:klsgtty|klsgtty(dev,0)]]) 调用 [[code:ttystty|ttystty(dev,0)]] ]，&lt;br/&gt;用于从[[code:user|u.u_arg[]]]传入tty参数
** av != 0 时，本函数由[[code:gtty|gtty]]调用&lt;br/&gt;[ [[code:gtty|gtty]] 调用 [[code:sgtty|sgtty(av)]] 调用 d_sgtty(av)(比如[[code:klsgtty|klsgtty(dev,av)]]) 调用 [[code:ttystty|ttystty(dev,av)]] ]，&lt;br/&gt;用于向av传送tty参数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8571&nbsp;/* Common code for gtty and stty functions on typewriters. &lt;br/&gt;
8572&nbsp;&nbsp;* If v is non-zero then gtty is being done and information &lt;br/&gt;
8573&nbsp;&nbsp;* is passed back therein; &lt;br/&gt;
8574&nbsp;&nbsp;* if it is zero stty is being done and the input inform- &lt;br/&gt;
8575&nbsp;&nbsp;* ation is in the u_arg array. &lt;br/&gt;
8576&nbsp;&nbsp;*/ &lt;br/&gt;
8577&nbsp;ttystty(atp, av) &lt;br/&gt;
8578&nbsp;int *atp, *av; &lt;br/&gt;
8579&nbsp;{ &lt;br/&gt;
8580&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *tp, *v; &lt;br/&gt;
8581&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = atp; &lt;br/&gt;
8582&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(v = av) { &lt;br/&gt;
8583&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*v++ = tp-&gt;t_speeds; &lt;br/&gt;
8584&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v-&gt;lobyte = tp-&gt;t_erase; &lt;br/&gt;
8585&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v-&gt;hibyte = tp-&gt;t_kill; &lt;br/&gt;
8586&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1] = tp-&gt;t_flags; &lt;br/&gt;
8587&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(1); &lt;br/&gt;
&lt;div class="wikinote"&gt;
[[code:gtty|gtty]]调用的部分
*向v中 传入 tty 参数
*返回1
&lt;/div&gt;
8588&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
8589&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wflushtty|wflushtty]](tp); &lt;br/&gt;
8590&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = [[code:user|u.u_arg]]; &lt;br/&gt;
8591&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_speeds = *v++; &lt;br/&gt;
8592&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_erase = v-&gt;lobyte; &lt;br/&gt;
8593&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_kill = v-&gt;hibyte; &lt;br/&gt;
8594&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_flags = v[1]; &lt;br/&gt;
8595&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
[[code:stty|stty]]调用的部分
*"清空" tp 的队列
*从v中 设置 tty 参数
*返回0
&lt;/div&gt;
8596&nbsp;} &lt;br/&gt;
8597&nbsp;/* ------------------------- */ &lt;br/&gt;
8598 &lt;br/&gt;
8599 &lt;br/&gt;
&lt;/div&gt;

===Caller===
*[[code:klsgtty]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ttystty by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:uchar</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*返回 [[用户态]] 地址空间内 由u.u_dirp指向的 字节
**若出错，则 抛出错误
***[[错误代码]] : EFAULT
*一般用于返回 [[code:user|u.u_dirp]] 指向的文件路径字符串 的下一个字符
*一般作为参数 由 [[code:namei|namei]] 调用
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7685&nbsp;&lt;br/&gt;
7686&nbsp;/* Return the next character from the &lt;br/&gt;
7687&nbsp;&nbsp;* user string pointed at by dirp. &lt;br/&gt;
7688&nbsp;&nbsp;*/ &lt;br/&gt;
7689&nbsp;uchar() &lt;br/&gt;
7690&nbsp;{ &lt;br/&gt;
7691&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register c; &lt;br/&gt;
7692 &lt;br/&gt;
7693&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = [[code:fubyte|fubyte]]([[code:user|u.u_dirp]]++); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*关于为什么[[code:user|u.u_dirp]] 能指向文件路径，参考[[code:trap|trap]] 2770
&lt;/div&gt;
7694&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c == -1) &lt;br/&gt;
7695&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EFAULT; &lt;br/&gt;
7696&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(c); &lt;br/&gt;
7697&nbsp;} &lt;br/&gt;
7698&nbsp;/* ------------------------- */ &lt;br/&gt;
7699 &lt;br/&gt;
&lt;/div&gt;
===Caller===
*[[code:exec]]
*[[code:unlink]]
*[[code:chdir]]
*[[code:open]]
*[[code:creat]]
*[[code:link]]
*[[code:mknod]]
*[[code:stat]]
*[[code:smount]]
*[[code:getmdev]]
*[[code:owner]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:uchar by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:ufalloc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*从进程[[code:user|user结构]]中的u_ofile数组中分配一空闲项u_ofile[i]
*返回值
**分配成功
***向用户态 返回 i
***返回i
**分配失败
***返回-1
&lt;/div&gt;
&lt;div class="wikicode"&gt;
6820&lt;br/&gt;
6821&nbsp;&nbsp;/*&lt;br/&gt;
6822&nbsp;&nbsp;* Allocate a user file descriptor.&lt;br/&gt;
6823&nbsp;&nbsp;*/&lt;br/&gt;
6824&nbsp;&nbsp;ufalloc()&lt;br/&gt;
6825&nbsp;&nbsp;{&lt;br/&gt;
6826&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register i;&lt;br/&gt;
6827&lt;br/&gt;
6828&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i=0; i&lt;[[File:param.h|NOFILE]]; i++)&lt;br/&gt;
6829&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:user|u]].u_ofile[i] == NULL) {&lt;br/&gt;
6830&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_ar0[R0] = i;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*向用户态返回 i，参看[[中断的参数传递]]
*LIONS源代码上 为 [[code:user|u]].u_ar0[R0] = 1，疑为笔误
&lt;/div&gt;
6831&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(i);&lt;br/&gt;
6832&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*从头遍历u_ofile数组,寻找空闲项u_ofile[i]
**若能找到空闲项,则将R0寄存器的值置为1(这里与Unix源代码不符,应该为i)
**返回i
&lt;/div&gt;
6833&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_error = EMFILE;&lt;br/&gt;
6834&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(-1);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若不能找到,抛出错误EMFILE,详见[[错误代码]]
*返回-1
&lt;/div&gt;
6835&nbsp;&nbsp;}&lt;br/&gt;
6836 /* -------------------------*/&lt;br/&gt;&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[内存打开文件结构]]

===Caller===
*[[code:dup]]
*[[code:falloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:ufalloc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:unlink</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*删除一个文件名(解除一个文件勾连)
*若文件勾连数为0,则彻底删除该文件
*从用户态传入一个参数name
**name:要删除的文件路径名
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3505&lt;br/&gt;
3506&nbsp;/*&lt;br/&gt;
3507&nbsp;&nbsp;* Unlink system call.&lt;br/&gt;
3508&nbsp;&nbsp;* panic: unlink -- "cannot happen"&lt;br/&gt;
3509&nbsp;&nbsp;*/&lt;br/&gt;
3510&nbsp;unlink()&lt;br/&gt;
3511&nbsp;{&lt;br/&gt;
3512&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *ip, *pp;&lt;br/&gt;
3513&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extern [[code:uchar|uchar]];&lt;br/&gt;
3514&lt;br/&gt;
3515&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|pp]] = [[code:namei|namei]](&[[code:uchar|uchar]], 2);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*获取 待删除文件所在目录的INODE指针(即该文件父目录的INODE指针) ,将其赋给pp&lt;br/&gt;
&lt;/div&gt;&lt;br/&gt;
3516&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|pp]] == NULL)&lt;br/&gt;
3517&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若pp为空(找不到父目录),则直接返回
&lt;/div&gt;&lt;br/&gt;
3518&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]]([[code:struct inode|pp]]);&lt;br/&gt;
3519&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]] = [[code:iget|iget]]([[code:struct inode|pp]]-&gt;i_dev, [[code:user|u.u_dent.u_ino]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若能找到其父目录INODE(pp不为空)&lt;br/&gt;
**解锁其父目录INODE
**获取待删除文件的INODE,将其赋给ip
&lt;/div&gt;&lt;br/&gt;
3520&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct inode|ip]] == NULL)&lt;br/&gt;
3521&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("unlink -- iget");&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若ip为空(不能找到待删除文件)
**提示出错
&lt;/div&gt;
3522&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct inode|ip]]-&gt;i_mode&IFMT)==IFDIR && ![[code:suser|suser]]())&lt;br/&gt;
3523&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若待删文件为目录文件,且当前用户非超级用户
**则不对待删除文件做任何操作,直接转到3532行(即非超级用户无法对目录文件做改动)
*用法参看 [[文件系统#inode类型]]
&lt;/div&gt;
3524&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] =- DIRSIZ+2;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将u_offset - 16,使得其指向待删除文件所在目录中的位置,原因参看[[code:namei#标志位说明|namei函数之标志位说明]]
&lt;/div&gt;
3525&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] = &u.u_dent;&lt;br/&gt;
3526&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = DIRSIZ+2;&lt;br/&gt;
3527&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_dent.u_ino]] = 0;&lt;br/&gt;
3528&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:writei|writei]]([[code:struct inode|pp]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*将待删除文件所占的目录项的u_ino置位空,表明该目录项现为空闲状态
&lt;/div&gt;
3529&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_nlink--;&lt;br/&gt;
3530&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag =&lt;nowiki&gt;|&lt;/nowiki&gt; IUPD;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*待删除文件INODE勾连数 -1
*待删除文件置 IUPD(被修改过标志)
&lt;/div&gt;
3531&lt;br/&gt;
3532&nbsp;&nbsp;out:&lt;br/&gt;
3533&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|pp]]);&lt;br/&gt;
3534&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:struct inode|ip]]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*以上两句调用原因有2
**1.将pp,ip的i_count 减1,因为3515行与3519行都间接或直接调用了iget函数,使得i_count +1,此处需要将其恢复
**2.若被删除的文件勾连数为0了,则释放其磁盘上的INODE
&lt;/div&gt;
3535&nbsp;}&lt;br/&gt;
3536 /* -------------------------       */&lt;br/&gt;
&lt;/div&gt;
===Ref===
[[文件系统]]

===Param===
:(unlink = 10.)
:&lt;b&gt;sys  unlink; name&lt;/b&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:unlink by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:update</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将各 [[文件系统#装载文件系统|装载文件系统]] 中被修改过的超级块更新回磁盘&lt;br/&gt;
*将所有内存[[code:struct inode|INODE]]更新回磁盘&lt;br/&gt;
&lt;/div&gt;&lt;br/&gt;
&lt;div class="wikicode"&gt;
7188&lt;br/&gt;
7189&nbsp;/*&lt;br/&gt;
7190&nbsp;&nbsp;* update is the internal name of&lt;br/&gt;
7191&nbsp;&nbsp;* 'sync'. It goes through the disk&lt;br/&gt;
7192&nbsp;&nbsp;* queues to initiate sandbagged IO;&lt;br/&gt;
7193&nbsp;&nbsp;* goes through the I nodes to write&lt;br/&gt;
7194&nbsp;&nbsp;* modified nodes; and it goes through&lt;br/&gt;
7195&nbsp;&nbsp;* the mount table to initiate modified&lt;br/&gt;
7196&nbsp;&nbsp;* super blocks.&lt;br/&gt;
7197&nbsp;&nbsp;*/&lt;br/&gt;
7198&lt;br/&gt;
7199&lt;br/&gt;
7200&lt;br/&gt;
7201&nbsp;update()&lt;br/&gt;
7202&nbsp;{&lt;br/&gt;
7203&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|struct inode]] *ip;&lt;br/&gt;
7204&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct mount|struct mount]] *mp;&lt;br/&gt;
7205&nbsp;&nbsp;&nbsp;&nbsp;register *bp;&lt;br/&gt;
7206&lt;br/&gt;
7207&nbsp;&nbsp;&nbsp;&nbsp;if(updlock)&lt;br/&gt;
7208&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
&lt;div class="wikinote"&gt;&lt;br/&gt;
*若updlock被置,表明update函数当前被锁,直接返回&lt;br/&gt;
*updlock定义在[[File:systm.h|systm.h]]的第234行&lt;br/&gt;
&lt;/div&gt;&lt;br/&gt;
7209&nbsp;&nbsp;&nbsp;&nbsp;updlock++;&lt;br/&gt;
&lt;div class="wikinote"&gt;&lt;br/&gt;
*若updlock未被置,则置该标识,给update函数上锁&lt;br/&gt;
&lt;/div&gt;&lt;br/&gt;
7210&nbsp;&nbsp;&nbsp;&nbsp;for(mp = &[[code:struct mount|mount]][0]; mp &lt; &[[code:struct mount|mount]][NMOUNT]; mp++)&lt;br/&gt;
7211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(mp-&gt;m_bufp != NULL) {&lt;br/&gt;
7212&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|ip]] = [[code:struct mount|mp]]-&gt;m_bufp-&gt;b_addr;&lt;br/&gt;
7213&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:struct filsys|ip]]-&gt;s_fmod==0 &lt;nowiki&gt;||&lt;/nowiki&gt; [[code:struct filsys|ip]]-&gt;s_ilock!=0 &lt;nowiki&gt;||&lt;/nowiki&gt;&lt;br/&gt;
7214&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct filsys|ip]]-&gt;s_flock!=0 &lt;nowiki&gt;||&lt;/nowiki&gt; [[code:struct filsys|ip]]-&gt;s_ronly!=0)&lt;br/&gt;
7215&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;&lt;br/&gt;
7216&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:getblk|getblk]](mp-&gt;m_dev, 1);&lt;br/&gt;
7217&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;s_fmod = 0;&lt;br/&gt;
7218&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;s_time[0] = time[0];&lt;br/&gt;
7219&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;s_time[1] = time[1];&lt;br/&gt;
7220&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bcopy|bcopy]](ip, bp-&gt;b_addr, 256);&lt;br/&gt;
7221&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bwrite|bwrite]](bp);&lt;br/&gt;
7222&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;&lt;br/&gt;
*遍历[[code:struct mount|mount]]数组,寻找[[文件系统#装载文件系统|装载文件系统]]&lt;br/&gt;
*对于找到的[[文件系统#装载文件系统|装载文件系统]],若其超级块被修改过(s_fmod != 0),同时inode队列与s_free队列未被锁,且其不为只读的&lt;br/&gt;
*则清其s_fmod标识,将内存中的[[code:struct filsys|超级块]]更新到磁盘上&lt;br/&gt;
&lt;/div&gt;&lt;br/&gt;
7223&nbsp;&nbsp;&nbsp;&nbsp;for(ip = &[[code:struct inode|inode]][0]; ip &lt; &[[code:struct inode|inode]][NINODE]; ip++)&lt;br/&gt;
7224&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ip-&gt;i_flag&ILOCK) == 0) {&lt;br/&gt;
7225&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_flag =&lt;nowiki&gt;|&lt;/nowiki&gt; ILOCK;&lt;br/&gt;
7226&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iupdat|iupdat]](ip, time);&lt;br/&gt;
7227&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](ip);&lt;br/&gt;
7228&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;&lt;br/&gt;
*遍历[[code:struct inode|inode数组]],对于没有被锁定的[[code:struct inode|inode]]&lt;br/&gt;
**上锁&lt;br/&gt;
**更新磁盘中对应[[code:struct inode|inode]]&lt;br/&gt;
**解锁&lt;br/&gt;
*NINODE定义在[[file:param.h|param.h]]第131行,其值为100&lt;br/&gt;
&lt;/div&gt;&lt;br/&gt;
7229&nbsp;&nbsp;&nbsp;&nbsp;updlock = 0;&lt;br/&gt;
&lt;div class="wikinote"&gt;&lt;br/&gt;
*解锁update函数&lt;br/&gt;
&lt;/div&gt;&lt;br/&gt;
7230&nbsp;&nbsp;&nbsp;&nbsp;[[code:bflush|bflush]](NODEV);&lt;br/&gt;
&lt;div class="wikinote"&gt;&lt;br/&gt;
*处理所有与NODEV有关的缓存块&lt;br/&gt;
&lt;/div&gt;&lt;br/&gt;
7231&nbsp;}&lt;br/&gt;
7232 /* -------------------------                  */&lt;br/&gt;
7233 /* -------------------------                  */&lt;br/&gt;
7234&lt;br/&gt;
7235&lt;br/&gt;
7236&lt;br/&gt;
7237&lt;br/&gt;
7238&lt;br/&gt;
7239&lt;br/&gt;
7240&lt;br/&gt;
7241&lt;br/&gt;
7242&lt;br/&gt;
7243&lt;br/&gt;
7244&lt;br/&gt;
7245&lt;br/&gt;
7246&lt;br/&gt;
7247&lt;br/&gt;
7248&lt;br/&gt;
7249&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

===Caller===
*[[code:panic]]
*[[code:sync]]
*[[code:sumount]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:update by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:user</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0400 /*&lt;br/&gt;
0401&nbsp;&nbsp;* The user structure.&lt;br/&gt;
0402&nbsp;&nbsp;* One allocated per process.&lt;br/&gt;
0403&nbsp;&nbsp;* Contains all per process data&lt;br/&gt;
0404&nbsp;&nbsp;* that doesn’t need to be referenced&lt;br/&gt;
0405&nbsp;&nbsp;* while the process is swapped.&lt;br/&gt;
0406&nbsp;&nbsp;* The user block is USIZE*64 bytes&lt;br/&gt;
0407&nbsp;&nbsp;* long; resides at virtual kernel&lt;br/&gt;
0408&nbsp;&nbsp;* loc 140000; contains the system&lt;br/&gt;
0409&nbsp;&nbsp;* stack per user; is cross referenced&lt;br/&gt;
0410&nbsp;&nbsp;* with the proc structure for the&lt;br/&gt;
0411&nbsp;&nbsp;* same process.&lt;br/&gt;
0412&nbsp;&nbsp;*/&lt;br/&gt;
0413 struct user&lt;br/&gt;
0414 {&lt;br/&gt;
0415&nbsp;&nbsp;int u_rsav[2];&nbsp;&nbsp;/* save r5,r6 when exchanging stacks */   &lt;br/&gt;
0416&nbsp;&nbsp;int u_fsav[25];&nbsp;/* save fp registers */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:procxmt|procxmt]]中 使用 u_fsav
&lt;/div&gt;
0417&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* rsav and fsav must be first in structure */     &lt;br/&gt;
0418&nbsp;&nbsp;char u_segflg;    /* flag for IO; user or kernel space */   &lt;br/&gt;
&lt;div class="wikinote"&gt;
*用于 声明 当前I/O 所使用的地址空间
** 0 : [[用户态]]地址空间
** 1 : [[核心态]]地址空间
&lt;/div&gt;
0419&nbsp;&nbsp;char u_error;     /* return error code */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*用于返回[[错误代码]]
*参看[[错误代码]]
&lt;/div&gt;
0420&nbsp;&nbsp;char u_uid; /* effective user id */ &lt;br/&gt;
0421&nbsp;&nbsp;char u_gid; /* effective group id */ &lt;br/&gt;
0422&nbsp;&nbsp;char u_ruid; /* real user id */ &lt;br/&gt;
0423&nbsp;&nbsp;char u_rgid; /* real group id */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*分别为 
**有效用户ID
**有效组ID
**真实用户ID
**真实组ID
*参看[[权限管理]]
&lt;/div&gt;
0424&nbsp;&nbsp;int u_procp; /* pointer to proc structure */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 对应的 [[code:struct proc|proc 结构]]
*参看[[进程图像]]
&lt;/div&gt;
0425&nbsp;&nbsp;char *u_base;     /* base address for IO */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前 I/O 的基地址
&lt;/div&gt;
0426&nbsp;&nbsp;char *u_count;    /* bytes remaining for IO */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前 I/O 的 剩余字节数
&lt;/div&gt;
0427&nbsp;&nbsp;char *u_offset[2]; /* offset in file for IO */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前 I/O 的 文件偏移量
&lt;/div&gt;
0428&nbsp;&nbsp;int *u_cdir; /* pointer to inode for current directory */   &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 当前目录 的[[code:struct inode|inode块]]
&lt;/div&gt;
0429&nbsp;&nbsp;char u_dbuf[DIRSIZ]; /* current pathname component */   &lt;br/&gt;
0430&nbsp;&nbsp;char *u_dirp;     /* current pointer to inode */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*在 [[code:namei|namei]] 调用时， 指向 文件路径字符串
&lt;/div&gt;
0431&nbsp;&nbsp;struct     { /* current directory entry */      &lt;br/&gt;
0432&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int u_ino; &lt;br/&gt;
0433&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char     u_name[DIRSIZ];&lt;br/&gt;
0434&nbsp;&nbsp;} u_dent;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前目录项 的 信息
**u_ino : 目录项对应的 INODE 号
**u_name : 目录项的文件名
&lt;/div&gt;
0435&nbsp;&nbsp;int *u_pdir; /* inode of parent directory of dirp */    &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 目录的父目录的INODE
&lt;/div&gt;
0436&nbsp;&nbsp;int u_uisa[16];   /* prototype segmentation addresses */    &lt;br/&gt;
0437&nbsp;&nbsp;int u_uisd[16];   /* prototype segmentation descriptors */  &lt;br/&gt;
&lt;div class="wikinote"&gt;
*与 UISA UISD 对应的相对地址映照表
*参看 [[内存管理]]
&lt;/div&gt;
0438&nbsp;&nbsp;int u_ofile[NOFILE]; /* pointers to file structures of&lt;br/&gt;
0439&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open files */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程打开文件表
*参看[[内存打开文件结构]]
&lt;/div&gt;
0440&nbsp;&nbsp;int u_arg[5];     /* arguments to current system call */    &lt;br/&gt;
&lt;div class="wikinote"&gt;
*参与 系统调用的参数传递
*参看[[系统调用]]
&lt;/div&gt;
0441&nbsp;&nbsp;int u_tsize; /* text size (*64) */ &lt;br/&gt;
0442&nbsp;&nbsp;int u_dsize; /* data size (*64) */ &lt;br/&gt;
0443&nbsp;&nbsp;int u_ssize; /* stack size (*64) */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*分别是进程的
**共享正文段 大小
**数据段 大小
**用户栈 大小
*都以 内存块 为单位(64字节/块)
*参看 [[进程图像]]
&lt;/div&gt;
0444&nbsp;&nbsp;int u_sep; /* flag for I and D separation */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指令空间 和 数据空间 的 分离标志
*对于 pdp11/40 始终为0
&lt;/div&gt;
0445&nbsp;&nbsp;int u_qsav[2];  /* label variable for quits & interrupts */ &lt;br/&gt;
0446&nbsp;&nbsp;int u_ssav[2];    /* label variable for swapping */&lt;br/&gt;
0447&nbsp;&nbsp;int u_signal[NSIG]; /* disposition of signals */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*信号处理函数 入口表
&lt;/div&gt;
0448&nbsp;&nbsp;int u_utime; /* this process user time */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程 [[用户态]] 运行时间
&lt;/div&gt;
0449&nbsp;&nbsp;int u_stime; /* this process system time */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程 [[核心态]] 运行时间
&lt;/div&gt;
0450&nbsp;&nbsp;int u_cutime[2];  /* sum of childs’ utimes */&lt;br/&gt;
0451&nbsp;&nbsp;int u_cstime[2];  /* sum of childs’ stimes */&lt;br/&gt;
&lt;div class="wikinote"&gt;
分别是
*子进程 [[用户态]] 总运行时间
*子进程 [[核心态]] 总运行时间
&lt;/div&gt;
0452&nbsp;&nbsp;int *u_ar0; /* address of users saved R0 */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
关于u_ar0的使用，参考[[skill:u.u_ar0|关于u_ar0的使用]]
&lt;/div&gt;
0453&nbsp;&nbsp;int u_prof[4];    /* profile arguments */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[程序统计直方图]] 的参数
&lt;/div&gt;
0454&nbsp;&nbsp;char u_intflg;    /* catch intr from sys */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*系统调用 出错标志
&lt;/div&gt;
0455&nbsp;&nbsp;/* kernel stack per user &lt;br/&gt;
0456&nbsp;&nbsp;&nbsp;* extends from u + USIZE*64 &lt;br/&gt;
0457&nbsp;&nbsp;&nbsp;* backward not to reach here &lt;br/&gt;
0458&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
0459 } u;&lt;br/&gt;
0460 /* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程图像]]

===Caller===
*[[code:main]]
*[[code:estabur]]
*[[code:newproc]]
*[[code:sleep]]
*[[code:swtch]]
*[[code:expand]]
*[[code:trap]]
*[[code:trap1]]
*[[code:nosys]]
*[[code:exec]]
*[[code:rexit]]
*[[code:exit]]
*[[code:wait]]
*[[code:fork]]
*[[code:sbreak]]
*[[code:getswit]]
*[[code:gtime]]
*[[code:stime]]
*[[code:setuid]]
*[[code:getuid]]
*[[code:setgid]]
*[[code:getgid]]
*[[code:getpid]]
*[[code:nice]]
*[[code:unlink]]
*[[code:chdir]]
*[[code:chmod]]
*[[code:chown]]
*[[code:smdate]]
*[[code:ssig]]
*[[code:kill]]
*[[code:times]]
*[[code:profil]]
*[[code:clock]]
*[[code:issig]]
*[[code:stop]]
*[[code:psig]]
*[[code:core]]
*[[code:grow]]
*[[code:ptrace]]
*[[code:procxmt]]
*[[code:xfree]]
*[[code:xalloc]]
*[[code:physio]]
*[[code:geterror]]
*[[code:rdwr]]
*[[code:open]]
*[[code:creat]]
*[[code:open1]]
*[[code:close]]
*[[code:seek]]
*[[code:link]]
*[[code:mknod]]
*[[code:sslep]]
*[[code:fstat]]
*[[code:stat]]
*[[code:dup]]
*[[code:smount]]
*[[code:sumount]]
*[[code:getmdev]]
*[[code:readi]]
*[[code:writei]]
*[[code:iomove]]
*[[code:bmap]]
*[[code:passc]]
*[[code:cpass]]
*[[code:nodev]]
*[[code:getf]]
*[[code:openi]]
*[[code:access]]
*[[code:suser]]
*[[code:ufalloc]]
*[[code:falloc]]
*[[code:iinit]]
*[[code:alloc]]
*[[code:ialloc]]
*[[code:iget]]
*[[code:maknode]]
*[[code:wdir]]
*[[code:namei]]
*[[code:schar]]
*[[code:uchar]]
*[[code:pipe]]
*[[code:writep]]
*[[code:klopen]]
*[[code:gtty]]
*[[code:stty]]
*[[code:sgtty]]
*[[code:ttystty]]
*[[code:mmread]]
*[[code:mmwrite]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:user by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:wait</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*wait 的系统调用函数
*等待 当前进程的(某)子进程 结束(SZOMB)
*对于 子程序 暂停(SSTOP)的情况，也做了处理(列入[[遗留问题]])
*返回值
**找到 结束的子进程，返回子进程号
&lt;/div&gt;
&lt;div class="wikicode"&gt;
3263 &lt;br/&gt;
3264&nbsp;/* Wait system call. &lt;br/&gt;
3265&nbsp;&nbsp;* Search for a terminated (zombie) child, &lt;br/&gt;
3266&nbsp;&nbsp;* finally lay it to rest, and collect its status. &lt;br/&gt;
3267&nbsp;&nbsp;* Look also for stopped (traced) children, &lt;br/&gt;
3268&nbsp;&nbsp;* and pass back status from them. &lt;br/&gt;
3269&nbsp;&nbsp;*/ &lt;br/&gt;
3270&nbsp;wait() &lt;br/&gt;
3271&nbsp;{ &lt;br/&gt;
3272&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register f, *bp; &lt;br/&gt;
3273&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct proc|struct proc]] *p; &lt;br/&gt;
3274 &lt;br/&gt;
3275&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f = 0; &lt;br/&gt;
3276&nbsp;loop: &lt;br/&gt;
3277&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(p = &[[code:proc|proc]][0]; p &lt; &[[code:proc|proc]][NPROC]; p++) &lt;br/&gt;
3278&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p-&gt;p_ppid == [[code:user|u.u_procp]]-&gt;p_pid) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历 [[code:proc|proc]]，查找 当前进程 的子进程 p
*f 为 子进程数
&lt;/div&gt;
3279&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f++; &lt;br/&gt;
3280&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p-&gt;p_stat == SZOMB) { &lt;br/&gt;
&lt;div class="wikinote"&gt;
*找到 结束(SZOMB)的子进程
*以下完成 子进程的扫尾工作
&lt;/div&gt;
3281&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0] = p-&gt;p_pid; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*返回 子进程号
&lt;/div&gt;
3282&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]]([[code:swapdev|swapdev]], f=p-&gt;p_addr); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从盘交换区 读取 子进程结束时写入的残留信息块
*关于 残留信息块，参看[[code:exit|exit]]
&lt;/div&gt;
3283&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]](swapmap, 1, f); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放 盘交换区上的残留信息块
&lt;/div&gt;
3284&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_stat = NULL; &lt;br/&gt;
3285&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_pid = 0; &lt;br/&gt;
3286&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_ppid = 0; &lt;br/&gt;
3287&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_sig = 0; &lt;br/&gt;
3288&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_ttyp = 0; &lt;br/&gt;
3289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_flag = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 子进程 的 [[code:proc|proc]]结构 清零(初始化)
&lt;/div&gt;
3290&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = bp-&gt;b_addr; &lt;br/&gt;
3291&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cstime]][0] =+ p-&gt;u_cstime[0]; &lt;br/&gt;
3292&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]]([[code:user|u.u_cstime]], p-&gt;u_cstime[1]); &lt;br/&gt;
3293&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]]([[code:user|u.u_cstime]], p-&gt;u_stime); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*结算 当前进程 的 子进程核心态时间
&lt;/div&gt;
3294&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cutime]][0] =+ p-&gt;u_cutime[0]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
LIONS源代码为
&lt;div class="wikiheadcode"&gt;
3294&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_cstime]][0] =+ p-&gt;u_cutime[0];
&lt;/div&gt;
疑为笔误
&lt;/div&gt;
3295&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]]([[code:user|u.u_cutime]], p-&gt;u_cutime[1]); &lt;br/&gt;
3296&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:dpadd|dpadd]]([[code:user|u.u_cutime]], p-&gt;u_utime); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*结算 当前进程 的 子进程用户态时间
&lt;/div&gt;
3297&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R1] = p-&gt;u_arg[0]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*保存 子进程 u_arg[0]，方便父进程使用 (引自 LIONS 代码分析)
&lt;/div&gt;
3298&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); &lt;br/&gt;
3299&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
3300&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3301&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p-&gt;p_stat == SSTOP) { &lt;br/&gt;
3302&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((p-&gt;p_flag&SWTED) == 0) { &lt;br/&gt;
3303&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; SWTED; &lt;br/&gt;
3304&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R0] = p-&gt;p_pid; &lt;br/&gt;
3305&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[skill:u.u_ar0|u.u_ar0]][R1] = (p-&gt;p_sig&lt;&lt;8) &lt;nowiki&gt;|&lt;/nowiki&gt;  &lt;br/&gt;
3306&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0177; &lt;br/&gt;
3307&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
3308&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3309&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;p_flag =& ~(STRC&lt;nowiki&gt;|&lt;/nowiki&gt;SWTED); &lt;br/&gt;
3310&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:setrun|setrun]](p); &lt;br/&gt;
3311&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
3301 - 3311
*参看 LIONS源代码分析 13.19,或13.20,关于wait的章节
*SWTED 标志 在[[code:ptrace|ptrace]]  处理
&lt;/div&gt;
3312&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
3313&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(f) { &lt;br/&gt;
3314&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]]([[code:user|u.u_procp]], PWAIT); &lt;br/&gt;
3315&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
3316&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 存在子进程，但子进程未结束，则睡眠等待
**[[睡眠原因]] : [[code:struct proc|struct proc]]
**[[睡眠优先级]] : PWAIT
&lt;/div&gt;
3317&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = ECHILD; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若不存在子进程，则抛出错误
**[[错误代码]] : ECHILD
&lt;/div&gt;
3318&nbsp;} &lt;br/&gt;
3319&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Param===
:(wait = 7.)
:&lt;b&gt;sys  wait&lt;/b&gt;
:(process ID in r0)
:(status in r1)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:wait by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:wakeup</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*唤醒所有因某原因睡眠的进程
*传入一个参数chan
**chan:进程睡眠原因
&lt;/div&gt;
&lt;div class="wikicode"&gt;
2109&lt;br/&gt;
2110&nbsp;/*&lt;br/&gt;
2111&nbsp;* Wake up all processes sleeping on chan.&lt;br/&gt;
2112&nbsp;*/&lt;br/&gt;
2113&nbsp;wakeup(chan)&lt;br/&gt;
2114&nbsp;{&lt;br/&gt;
2115&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:proc|struct proc]] *p;&lt;br/&gt;
2116&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register c, i;&lt;br/&gt;
2117&lt;br/&gt;
2118&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = chan;&lt;br/&gt;
2119&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = &[[code:proc|proc]][0];&lt;br/&gt;
2120&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = NPROC;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*NPROC为[[code:proc|proc数组]]的大小,值为50,定义见[[file:param.h|param.h]] 的0144行
&lt;/div&gt;
2121&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {&lt;br/&gt;
2122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(p-&gt;p_wchan == c) {&lt;br/&gt;
2123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:setrun|setrun]](p);&lt;br/&gt;
2124&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
2125&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p++;&lt;br/&gt;
2126&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while(--i);&lt;br/&gt;
2127&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*遍历[[code:proc|proc数组]],遇到因为chan而睡眠的进程时将其置为就绪状态
&lt;/div&gt;
2128&nbsp;/* -------------------------*/&lt;br/&gt;
&lt;/div&gt;


===Ref===
*[[睡眠原因]]
*[[睡眠优先级]]

===Caller===
*[[code:sleep]]
*[[code:setrun]]
*[[code:exec]]
*[[code:exit]]
*[[code:stime]]
*[[code:clock]]
*[[code:stop]]
*[[code:ptrace]]
*[[code:procxmt]]
*[[code:xswap]]
*[[code:brelse]]
*[[code:iodone]]
*[[code:swap]]
*[[code:physio]]
*[[code:closef]]
*[[code:alloc]]
*[[code:free]]
*[[code:ialloc]]
*[[code:readp]]
*[[code:writep]]
*[[code:prele]]
*[[code:klxint]]
*[[code:flushtty]]
*[[code:ttyinput]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:wakeup by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:wdir</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*根据 将指定的INODE块，链入相应的目录项，形成目录结构
*共传入1个参数 : [[code:struct inode|ip]]
**[[code:struct inode|ip]] : 指向 指定INODE块
*使用了2个隐式参数 : u.u_dbuf[] ， u.u_pdir
**u.u_dbuf[] 保存INODE对应的文件名，由[[code:namei|namei]]设置
**u.u_pdir 指向目录项，由[[code:namei|namei]]设置
*总体是将 [[code:struct inode|ip]]的INODE块号 和 u.u_dbuf保存的文件名，写入 u.u_pdir指向的目录项
&lt;/div&gt;
&lt;div class="wikicode"&gt;
7471 &lt;br/&gt;
7472&nbsp;/* &lt;br/&gt;
7473&nbsp;&nbsp;* Write a directory entry with &lt;br/&gt;
7474&nbsp;&nbsp;* parameters left as side effects &lt;br/&gt;
7475&nbsp;&nbsp;* to a call to namei. &lt;br/&gt;
7476&nbsp;&nbsp;*/ &lt;br/&gt;
7477&nbsp;wdir([[code:struct inode|ip]]) &lt;br/&gt;
7478&nbsp;int *[[code:struct inode|ip]]; &lt;br/&gt;
7479&nbsp;{ &lt;br/&gt;
7480&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register char *cp1, *cp2; &lt;br/&gt;
7481 &lt;br/&gt;
7482&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_dent.u_ino]] = [[code:struct inode|ip]]-&gt;i_number; &lt;br/&gt;
7483&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp1 = &[[code:user|u.u_dent.u_name]][0]; &lt;br/&gt;
7484&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(cp2 = &[[code:user|u.u_dbuf]][0]; cp2 &lt; &[[code:user|u.u_dbuf]][DIRSIZ];) &lt;br/&gt;
7485&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*cp1++ = *cp2++; &lt;br/&gt;
&lt;div class="wikinote"&gt;
7482 - 7485
*设置 [[code:user|u.u_dent]] 参数
&lt;/div&gt;
7486&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = DIRSIZ+2; &lt;br/&gt;
7487&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_segflg]] = 1; &lt;br/&gt;
7488&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] = &[[code:user|u.u_dent]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*置 [[code:writei|writei]] 使用的相关参数
&lt;/div&gt;
7489&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:writei|writei]]([[code:user|u.u_pdir]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*写目录项的INODE块，将[[code:struct inode|ip]]的信息写入目录
&lt;/div&gt;
7490&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]]([[code:user|u.u_pdir]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放 INODE
&lt;/div&gt;
7491 } &lt;br/&gt;
7492 /* ------------------------- */ &lt;br/&gt;
7493 &lt;br/&gt;
7494 &lt;br/&gt;
7495 &lt;br/&gt;
7496 &lt;br/&gt;
7497 &lt;br/&gt;
7498 &lt;br/&gt;
7499 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[文件系统]]
*[[设备缓存管理]]

===Caller===
*[[code:link]]
*[[code:maknode]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:wdir by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:wflushtty</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*等待 指定tty输出队列元素 全部输出
*清空 指定tty 的队列
&lt;/div&gt;
&lt;div class="wikicode"&gt;
8216&nbsp;/* Wait for output to drain, then flush output waiting. */   &lt;br/&gt;
8217&nbsp;wflushtty(atp) &lt;br/&gt;
8218&nbsp;[[code:struct tty|struct tty]] *atp; &lt;br/&gt;
8219&nbsp;{ &lt;br/&gt;
8220&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct tty|struct tty]] *tp; &lt;br/&gt;
8221&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp = atp; &lt;br/&gt;
8222&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl5]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理机优先级设为5
*防止 有新的输出字符 进入
&lt;/div&gt;
8223&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (tp-&gt;t_outq.c_cc) { &lt;br/&gt;
8224&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp-&gt;t_state &lt;nowiki&gt;=|&lt;/nowiki&gt; ASLEEP; &lt;br/&gt;
8225&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](&tp-&gt;t_outq, TTOPRI); &lt;br/&gt;
8226&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*等待 输出队列元素 全部输出
*等待时睡眠
**[[睡眠原因]] : [[code:struct clist|struct clist]]
**[[睡眠优先级]] : TTOPRI
&lt;/div&gt;
8227&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:flushtty|flushtty]](tp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*清空 tty 队列
&lt;/div&gt;
8228&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:spl|spl0]](); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[开中断]]
&lt;/div&gt;
8229&nbsp;} &lt;br/&gt;
8230&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[字符设备管理]]

===Caller===
*[[code:klclose]]
*[[code:ttystty]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:wflushtty by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:write</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*写文件 的 系统调用函数
*由 用户态 传入3个参数 fildes, buffer, nbytes
**fildes : 文件打开标志, u.u_ofile[fildes] 指向对应的文件打开结构，参看[[内存打开文件结构]]
**buffer : 写入的起始偏移位
**nbytes : 写入的字节数
&lt;/div&gt;
&lt;div class="wikicode"&gt;
5716&lt;br/&gt;
5717&nbsp;/*&lt;br/&gt;
5718&nbsp;&nbsp;* write system call&lt;br/&gt;
5719&nbsp;&nbsp;*/&lt;br/&gt;
5720&nbsp;write()&lt;br/&gt;
5721&nbsp;{&lt;br/&gt;
5722&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:rdwr|rdwr]](FWRITE);&lt;br/&gt;
5723&nbsp;}&lt;br/&gt;
5724&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;
===Param===
:(write = 4.)
:(file descriptor in r0)
:&lt;b&gt;sys write; buffer; nbytes&lt;/b&gt;
:(byte count in r0)
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:write by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:writei</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*写入(修改)文件
*输入参数 
**aip : 文件对应的[[code:struct inode|INODE结构]]
**[[code:user|u_segflg]] : 目标地址的地址空间
**[[code:user|u_base]] : 目标地址
**[[code:user|u_offset]] : 文件偏移量(字节)
**[[code:user|u_count]] : 欲读取的字节数
*运行时修正以下参数
**[[code:user|u.u_base]]
**[[code:user|u.u_offset]]
**[[code:user|u.u_count]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
&lt;div class="wikinote"&gt;
*该函数处理了两种情况，普通INODE 和 块设备装载INODE(参看[[文件系统#装载文件系统]])
**普通INODE，对块的处理：将 逻辑块号 转化为 物理块号
**块设备装载INODE，对块的处理：对于块设备来说，逻辑块号=物理块号，不需转换
&lt;/div&gt;
6265&nbsp;&lt;br/&gt;
6266&nbsp;&nbsp;/*&lt;br/&gt;
6267&nbsp;&nbsp;* Write the file corresponding to&lt;br/&gt;
6268&nbsp;&nbsp;* the inode pointed at by the argument.&lt;br/&gt;
6269&nbsp;&nbsp;* the actual read arguments are found&lt;br/&gt;
6270&nbsp;&nbsp;* in the variables:core address for source&lt;br/&gt;
6271&nbsp;&nbsp;* u_base&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;core address for source&lt;br/&gt;
6272&nbsp;&nbsp;* u_offset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;byte offset in file&lt;br/&gt;
6273&nbsp;&nbsp;* u_count&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number of bytes to write&lt;br/&gt;
6274&nbsp;&nbsp;* u_segflg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;write to kernel/user&lt;br/&gt;
6275&nbsp;&nbsp;*/&lt;br/&gt;
6276&nbsp;&nbsp;writei(aip)&lt;br/&gt;
6277&nbsp;&nbsp;struct inode *aip;&lt;br/&gt;
6278&nbsp;&nbsp;{&lt;br/&gt;
6279&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int *bp;&lt;br/&gt;
6280&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int lbn, bn, on;&lt;br/&gt;
6281&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register dn, n;&lt;br/&gt;
6282&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct inode|struct inode]] *ip;&lt;br/&gt;
6283&lt;br/&gt;
6284&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]=aip;&lt;br/&gt;
6285&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag =&lt;nowiki&gt;| IACC|&lt;/nowiki&gt;IUPD;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*标志 该INODE块已被修改与存取
&lt;/div&gt;
6286&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct inode|ip]]-&gt;i_mode&IFMT) == IFCHR) {&lt;br/&gt;
6287&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*[[code:cdevsw|cdevsw]][ [[code:struct inode|ip]]-&gt;i_addr[0][[skill:.d_major|.d_major]] ].d_write)([[code:struct inode|ip]]-&gt;i_addr[0]);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理 字符文件
&lt;/div&gt;
6288&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
6289 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
6290&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ([[code:user|u]].u_count == 0)&lt;br/&gt;
6291&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
6292&lt;br/&gt;
6293&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do{&lt;br/&gt;
6294&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bn = [[code:lshift|lshift]]([[code:user|u]].u_offset, -9);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*u.u_offset右移9位，相当于u.u_offset/512，计算需要读取的逻辑块号
*u.u_offset值 不改变
*bn 赋值为逻辑块号
&lt;/div&gt;
6295&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on = [[code:user|u]].u_offset[1] & 0777;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*on 赋值为 块内偏移量
&lt;/div&gt;
6296&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = [[code:min|min]](512-on, [[code:user|u]].u_count);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*n 置为 该块内需写入的字节数 (= 512-块内偏移量 与 需读取字节 的最小值)
&lt;/div&gt;
6297&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(([[code:struct inode|ip]]-&gt;i_mode&IFMT) != IFBLK) {&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 INODE 不为 特殊块文件,...
&lt;/div&gt;
6298&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((bn = [[code:bmap|bmap]]([[code:struct inode|ip]], bn)) == 0)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*bn 置为 需写入块在物理设备对应的块号
&lt;/div&gt;
6299&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;&lt;br/&gt;
6300&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dn = [[code:struct inode|ip]]-&gt;i_dev;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*dn 置为 需写入块的对应物理设备号
&lt;/div&gt;
6301&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else&lt;br/&gt;
6302&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dn = [[code:struct inode|ip]]-&gt;i_addr[0];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 ip 为 块设备装载INODE，则
**获取 设备号dn (参看文件系统#装载文件系统)&lt;br/&gt;bn直接作为物理块号(对于设备，逻辑块号=物理块号，不需转换)
&lt;/div&gt;
6303&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n == 512)&lt;br/&gt;
6304&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:getblk|getblk]](dn, bn); else&lt;br/&gt;
6305&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bp = [[code:bread|bread]](dn, bn);&lt;br/&gt;
6306&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iomove|iomove]](bp, on, n, B_WRITE);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若需写入的字节数为512(即整个块都要写入)
**直接分配一个缓存块,从 指定地址空间 将一整块读入该缓存块
*若欲写入的字节数不到一整块
**则将磁盘上该块文件的内容读入一个缓存块
**然后从 指定地址空间 读入相应字节的内容 到该缓存块的相应位置(即只更新部分内容)
&lt;/div&gt;
6307&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u]].u_error != 0)&lt;br/&gt;
6308&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:brelse|brelse]](bp); else&lt;br/&gt;
6309&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (([[code:user|u]].u_offset[1]&0777)==0)&lt;br/&gt;
6310&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bawrite|bawrite]](bp); else&lt;br/&gt;
6311&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:bdwrite|bdwrite]](bp);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若文件块已经被全部改写
**直接将缓存块异步写回磁盘
*若文件块没有被全部改写
**采用延迟写策略
&lt;/div&gt;
6312&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:dpcmp|dpcmp]]([[code:struct inode|ip]]-&gt;i_size0&0377, [[code:struct inode|ip]]-&gt;i_size1,&lt;br/&gt;
6313&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u]].u_offset[0], [[code:user|u]].u_offset[1]) &lt; 0 &&&lt;br/&gt;
6314&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;([[code:struct inode|ip]]-&gt;i_mode&(IFBLK&IFCHR)) == 0) {&lt;br/&gt;
6315&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_size0 = u.u_offset[0];&lt;br/&gt;
6316&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_size1 = u.u_offset[1];&lt;br/&gt;
6317&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;br/&gt;
&lt;div class="wikinote"&gt;
*若文件小于当前偏移量,表明文件需要扩充,将文件大小改为当前偏移量的值
&lt;/div&gt;
6318&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:struct inode|ip]]-&gt;i_flag =&lt;nowiki&gt;|&lt;/nowiki&gt; IUPD;&lt;br/&gt;
&lt;div class="wikinote"&gt;
*标志 该INODE块已被存取
&lt;/div&gt;
6319&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while([[code:user|u]].u_error==0 && [[code:user|u]].u_count!=0);&lt;br/&gt;
&lt;div class="wikinote"&gt;
*每次循环判断是否出错或者是否写完
*若没有写完则继续循环,直到写完为止
&lt;/div&gt;
6320&nbsp;&nbsp;}&lt;br/&gt;
6321 /* -------------------------*/&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[文件系统]]
===Caller===
*[[code:unlink]]
*[[code:core]]
*[[code:rdwr]]
*[[code:wdir]]
*[[code:writep]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:writei by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:writep</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
7802&nbsp;&lt;br/&gt;
7803&nbsp;/* Write call directed to a pipe. &lt;br/&gt;
7804&nbsp;&nbsp;*/ &lt;br/&gt;
7805&nbsp;writep(fp) &lt;br/&gt;
7806&nbsp;{ &lt;br/&gt;
7807&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp, *ip, c; &lt;br/&gt;
7808 &lt;br/&gt;
7809&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = fp; &lt;br/&gt;
7810&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = rp-&gt;f_inode; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*rp 指向 管道的[[code:struct file|file 结构]]
*ip 指向 对应的[[code:struct inode|INODE]]
&lt;/div&gt;
7811&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = [[code:user|u.u_count]]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
* c ← 需要写的剩余字节数
&lt;/div&gt;
7812&nbsp;loop: &lt;br/&gt;
7813&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* If all done, return. &lt;br/&gt;
7814&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7815&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:plock|plock]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip 置锁
&lt;/div&gt;
7816&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(c == 0) { &lt;br/&gt;
7817&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](ip); &lt;br/&gt;
7818&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = 0; &lt;br/&gt;
7819&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
7820&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 写任务已经完成 (c == 0)
**ip解锁
**[[code:user|u.u_count]]置0
**函数返回
&lt;/div&gt;
7821&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* If there are not both read and &lt;br/&gt;
7822&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* write sides of the pipe active, &lt;br/&gt;
7823&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* return error and signal too. &lt;br/&gt;
7824&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7825&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_count &lt; 2) { &lt;br/&gt;
7826&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prele(ip); &lt;br/&gt;
7827&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_error]] = EPIPE; &lt;br/&gt;
7828&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:psignal|psignal]](u.u_procp, SIGPIPE); &lt;br/&gt;
7829&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return; &lt;br/&gt;
7830&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 读管道/写管道 不存在
**ip解锁
**抛出错误，[[错误代码]] : EPIPE
**发送[[信号系统|信号]]，SIGPIPE
**函数返回
&lt;/div&gt;
7831&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* If the pipe is full, &lt;br/&gt;
7832&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* wait for reads to delete &lt;br/&gt;
7833&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* and truncate it. &lt;br/&gt;
7834&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7835&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_size1 == PIPSIZ) { &lt;br/&gt;
7836&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_mode &lt;nowiki&gt;=|&lt;/nowiki&gt; IWRITE; &lt;br/&gt;
7837&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](ip); &lt;br/&gt;
7838&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:sleep|sleep]](ip+1, PPIPE); &lt;br/&gt;
7839&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
7840&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若已写满(写足4096字节)
**解锁ip
**进程睡眠
***[[睡眠原因]] : (struct inode)+1
***[[睡眠优先级]] : PPIPE
**被唤醒后继续进行写(7812)
&lt;/div&gt;
7841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Write what is possible and &lt;br/&gt;
7842&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* loop back. &lt;br/&gt;
7843&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ &lt;br/&gt;
7844&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][0] = 0; &lt;br/&gt;
7845&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] = ip-&gt;i_size1; &lt;br/&gt;
7846&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = [[code:min|min]](c, PIPSIZ-[[code:user|u.u_offset]][1]); &lt;br/&gt;
7847&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c =- [[code:user|u.u_count]]; &lt;br/&gt;
7848&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:writei|writei]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*填写[[code:writei|writei]]所必须的参数，参看[[管道]]
*调用[[code:writei|writei]]写管道
&lt;/div&gt;
7849&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:prele|prele]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*解锁ip
&lt;/div&gt;
7850&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip-&gt;i_mode&IREAD) { &lt;br/&gt;
7851&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_mode =& ~IREAD; &lt;br/&gt;
7852&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](ip+2); &lt;br/&gt;
7853&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若有进程在等待 读管道，则唤醒该进程
**[[睡眠原因]] : (struct inode)+2
&lt;/div&gt;
7854&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto loop; &lt;br/&gt;
7855&nbsp;} &lt;br/&gt;
7856&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[管道]]

===Caller===
*[[code:rdwr]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:writep by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:xalloc</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*由[[code:exec|exec]]调用
*为当前进程 分配共享正文区
*传入1个参数 ip
**ip : 程序代码 正文文件inode
*使用1个隐式参数
**正文文件字节数 : [[code:user|u.u_arg[1]]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4417 &lt;br/&gt;
4418&nbsp;/* Attach to a shared text segment. &lt;br/&gt;
4419&nbsp;&nbsp;* If there is no shared text, just return. &lt;br/&gt;
4420&nbsp;&nbsp;* If there is, hook up to it: &lt;br/&gt;
4421&nbsp;&nbsp;* if it is not currently being used, it has to be read &lt;br/&gt;
4422&nbsp;&nbsp;* in from the inode (ip) and established in the swap space. &lt;br/&gt;
4423&nbsp;&nbsp;* If it is being used, but not currently in core, &lt;br/&gt;
4424&nbsp;&nbsp;* a swap has to be done to get it back. &lt;br/&gt;
4425&nbsp;&nbsp;* The full coroutine glory has to be invoked-- &lt;br/&gt;
4426&nbsp;&nbsp;* see slp.c-- because if the calling process &lt;br/&gt;
4427&nbsp;&nbsp;* is misplaced in core the text image might not fit. &lt;br/&gt;
4428&nbsp;&nbsp;* Quite possibly the code after "out:" could check to &lt;br/&gt;
4429&nbsp;&nbsp;* see if the text does fit and simply swap it in. &lt;br/&gt;
4430&nbsp;&nbsp;* &lt;br/&gt;
4431&nbsp;&nbsp;* panic: out of swap space &lt;br/&gt;
4432&nbsp;&nbsp;*/ &lt;br/&gt;
4433&nbsp;xalloc(ip) &lt;br/&gt;
&lt;div class="wikinote"&gt;
*警告 ：本函数相当含蓄
*本函数并不符合函数规范，其造成的影响要由[[code:exec|exec]]来扫尾
*只可视为从[[code:exec|exec]]抽取的代码段
&lt;/div&gt;
4434&nbsp;int *ip; &lt;br/&gt;
4435&nbsp;{ &lt;br/&gt;
4436&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register [[code:struct text|struct text]] *xp; &lt;br/&gt;
4437&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp, ts; &lt;br/&gt;
4438 &lt;br/&gt;
4439&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:user|u.u_arg]][1] == 0) return; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 正文大小为0，函数直接返回
&lt;/div&gt;
4440&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = NULL; &lt;br/&gt;
4441&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(xp = &[[code:text|text]][0]; xp &lt; &[[code:text|text]][NTEXT]; xp++) &lt;br/&gt;
4442&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(xp-&gt;x_iptr == NULL) { &lt;br/&gt;
4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rp == NULL) &lt;br/&gt;
4444&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = xp; &lt;br/&gt;
4445&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else &lt;br/&gt;
4446&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(xp-&gt;x_iptr == ip) { &lt;br/&gt;
4447&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp-&gt;x_count++; &lt;br/&gt;
4448&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_textp = xp; &lt;br/&gt;
4449&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out; &lt;br/&gt;
4450&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*找到[[code:text|text]]数组中 与ip对应的元素xp
*若找到，则
**增加 xp 的引用数
**当前进程 正文控制块指针 指向xp
**转向4475，进行善后
&lt;/div&gt;
&lt;div class="wikinote"&gt;
*以下开始创建正文块/正文控制块
&lt;/div&gt;
4451&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((xp=rp) == NULL) [[code:panic|panic]]("out of text"); &lt;br/&gt;
4452&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp-&gt;x_count = 1; &lt;br/&gt;
4453&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp-&gt;x_ccount = 0; &lt;br/&gt;
4454&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp-&gt;x_iptr = ip; &lt;br/&gt;
4455&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ts = (([[code:user|u.u_arg]][1]+63)&gt;&gt;6) & 01777; &lt;br/&gt;
4456&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp-&gt;x_size = ts; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置xp的参数
*ts ← 正文段 占用 的内存块数(64字节/块)
&lt;/div&gt;
4457&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((xp-&gt;x_daddr = [[code:malloc|malloc]](swapmap, (ts+7)/8)) == NULL) &lt;br/&gt;
4458&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("out of swap space");  &lt;br/&gt;
&lt;div class="wikinote"&gt;
*分配 交换区空间
&lt;/div&gt;
4459&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:expand|expand]](USIZE+ts);  &lt;br/&gt;
&lt;div class="wikinote"&gt;
*扩展 进程图像 = PPDA区 + 正文大小的临时区
*分配的临时区，用来读取代码文件中的代码
*在4473释放分配的临时区
&lt;/div&gt;
4460&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:estabur|estabur]](0, ts, 0, 0); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*UISA/UISD 地址管理 设置为 数据区大小为ts，其他区为0
*即 数据区大小从 虚拟地址0开始，大小为ts
*这里对 UISA/UISD 的修改 需要在[[code:exec|exec]]消除影响，十分不符合函数规范...
&lt;/div&gt;
4461&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_count]] = [[code:user|u.u_arg]][1]; &lt;br/&gt;
4462&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_offset]][1] = 020; &lt;br/&gt;
4463&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_base]] = 0; &lt;br/&gt;
4464&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:readi|readi]](ip); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从 ip 读取正文到 虚拟地址0
*文件偏移量 为 020 ，文件正文段从020偏移开始&lt;br/&gt;参考 man a.out
&lt;/div&gt;
4465&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = [[code:user|u.u_procp]]; &lt;br/&gt;
4466&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; SLOCK; &lt;br/&gt;
4467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:swap|swap]](xp-&gt;x_daddr, rp-&gt;p_addr+USIZE, ts, 0); &lt;br/&gt;
4468&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_flag =& ~SLOCK; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*将 刚读入的正文 交换到 盘交换区
*进程置锁 防止 写盘交换区中 该进程被切换上台
&lt;/div&gt;
4469&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_textp = xp; &lt;br/&gt;
4470&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = ip; &lt;br/&gt;
4471&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; ITEXT; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*ip 置 ITEXT，防止被写
&lt;/div&gt;
4472&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;i_count++;  &lt;br/&gt;
4473&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:expand|expand]](USIZE); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放 4459 分配的临时区
&lt;/div&gt;
4474&nbsp;out: &lt;br/&gt;
4475&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(xp-&gt;x_ccount == 0) { &lt;br/&gt;
4476&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:savu|savu]]([[code:user|u.u_rsav]]); &lt;br/&gt;
4477&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:savu|savu]]([[code:user|u.u_ssav]]); &lt;br/&gt;
4478&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:xswap|xswap]]([[code:user|u.u_procp]], 1, 0); &lt;br/&gt;
4479&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; SSWAP; &lt;br/&gt;
4480&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:swtch|swtch]](); &lt;br/&gt;
4481&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* no return */ &lt;br/&gt;
4482&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 正文段 不被 图像在内存中的进程 引用，则将进程交换到盘交换区(诡异的做法，参看[[code:xalloc#说明|说明]])
&lt;/div&gt;
4483&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp-&gt;x_ccount++; &lt;br/&gt;
4484&nbsp;} &lt;br/&gt;
4485&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Extend===
=说明=
该函数相当诡异，以下做以说明
*在4449产生分支
**若 已存在对应的正文控制块，则跳转到4474
**否则，开始创建 正文块/正文控制块
*诡异的问题
**创建的 正文控制块 创建在盘交换区上
**然后，将现行进程 交换到盘交换区上
**这个操作看似没有效率，而且很诡异，原因如下
***进程调度切换程序([[code:sched|sched]])上台时 总是先将 正文段交换到内存，再将图像交换到内存
***若 图像在内存，正文段在交换区，且满足条件rp-&gt;x_ccount == 0 (2033)，则会引起错误
***所以需要将 图像交换到盘交换区
**从4449转过来的情况，也会出现如此情况

===Ref===
*[[进程图像]]

===Caller===
*[[code:exec]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:xalloc by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:xccdec</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*释放指定[[共享正文段]]的内存引用
**指定[[共享正文段]]控制块的 [[code:text|x_ccount]] 减1
***x_ccount为 引用该[[共享正文段]]且[[进程图像]]在内存中 的进程的数目
**若x_ccount为0,释放[[共享正文段]]占用的内存空间
*共传入一个参数xp
*xp : 指向 指定[[共享正文段]] 的控制块
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4486&nbsp;&lt;br/&gt;
4487&nbsp;/* Decrement the in-core usage count of a shared text &lt;br/&gt;
4488&nbsp;&nbsp;* segment. When it drops to zero, free the core space. &lt;br/&gt;
4489&nbsp;&nbsp;*/ &lt;br/&gt;
4490&nbsp;xccdec(xp) &lt;br/&gt;
4491&nbsp;int *xp; &lt;br/&gt;
4492&nbsp;{ &lt;br/&gt;
4493&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register *rp; &lt;br/&gt;
4494&nbsp;&lt;br/&gt;
4495&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((rp=xp)!=NULL && [[code:text|rp-&gt;x_ccount]]!=0) &lt;br/&gt;
4496&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(--[[code:text|rp-&gt;x_ccount]] == 0) &lt;br/&gt;
4497&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]](coremap, [[code:text|rp-&gt;x_size]], [[code:text|rp-&gt;x_caddr]]); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*x_ccount - 1
*若x_ccount 为0,释放对应内存空间
&lt;/div&gt;
4498&nbsp;} &lt;br/&gt;
4499&lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程图像]]
*[[共享正文段]]

===Caller===
*[[code:xswap]]
*[[code:xfree]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:xccdec by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:xfree</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*释放 当前进程 的[[共享正文段]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4393 &lt;br/&gt;
4394&nbsp;/* &lt;br/&gt;
4395&nbsp;&nbsp;* relinquish use of the shared text segment &lt;br/&gt;
4396&nbsp;&nbsp;* of a process. &lt;br/&gt;
4397&nbsp;&nbsp;*/ &lt;br/&gt;
4398&nbsp;xfree() &lt;br/&gt;
4399&nbsp;{  register *xp, *ip; &lt;br/&gt;
4400 &lt;br/&gt;
4401&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((xp=[[code:user|u.u_procp]]-&gt;p_textp) != NULL) { &lt;br/&gt;
4402&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:user|u.u_procp]]-&gt;p_textp == NULL; &lt;br/&gt;
4403&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:xccdec|xccdec]](xp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放 当前内存 [[共享正文段]] 的内存引用
&lt;/div&gt;
4404&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(--xp-&gt;x_count == 0) { &lt;br/&gt;
4405&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = xp-&gt;x_iptr; &lt;br/&gt;
4406&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((ip-&gt;i_mode&ISVTX) == 0) { &lt;br/&gt;
4407&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp-&gt;x_iptr = NULL; &lt;br/&gt;
4408&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]](swapmap, (xp-&gt;x_size+7)/8,   &lt;br/&gt;
4409&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xp-&gt;x_daddr);      &lt;br/&gt;
4410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;i_flag =& ~ITEXT; &lt;br/&gt;
4411&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:iput|iput]](ip); &lt;br/&gt;
4412&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4413&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*释放 [[共享正文段]] 的引用
*若 释放引用后 引用数为0，且未置ISVTX([[file:inode.h|inode.h]])
**释放 盘交换区空间
**释放 INODE
&lt;/div&gt;
4414&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4415&nbsp;} &lt;br/&gt;
4416&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程图像]]

===Caller===
*[[code:exec]]
*[[code:exit]]
|</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:xfree by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>code:xswap</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*将 指定进程的图像 交换到盘交换区
*共输入3个参数
**p : 指向 指定进程 的[[code:proc|proc 结构]]
**ff : 图像清理 标志位
***若置位，交换后 清理内存图像
***否则，交换后 不清理内存图像
**os : 进程交换图像的大小(块数，64字节/块)
***若为0，直接使用 os = [[code:proc|proc.p_size]]
&lt;/div&gt;
&lt;div class="wikicode"&gt;
4357&nbsp;&lt;br/&gt;
4358&nbsp;/* Swap out process p. &lt;br/&gt;
4359&nbsp;&nbsp;* The ff flag causes its core to be freed-- &lt;br/&gt;
4360&nbsp;&nbsp;* it may be off when called to create an image for a &lt;br/&gt;
4361&nbsp;&nbsp;* child process in newproc. &lt;br/&gt;
4362&nbsp;&nbsp;* Os is the old size of the data area of the process, &lt;br/&gt;
4363&nbsp;&nbsp;* and is supplied during core expansion swaps. &lt;br/&gt;
4364&nbsp;&nbsp;* &lt;br/&gt;
4365&nbsp;&nbsp;* panic: out of swap space &lt;br/&gt;
4366&nbsp;&nbsp;* panic: swap error -- IO error &lt;br/&gt;
4367&nbsp;&nbsp;*/ &lt;br/&gt;
4368&nbsp;xswap(p, ff, os) &lt;br/&gt;
4369&nbsp;int *p; &lt;br/&gt;
4370&nbsp;{  register *rp, a; &lt;br/&gt;
4371 &lt;br/&gt;
4372&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp = p; &lt;br/&gt;
4373&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(os == 0) &lt;br/&gt;
4374&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;os = rp-&gt;p_size; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*修正 os 值
&lt;/div&gt;
4375&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = [[code:malloc|malloc]](swapmap, (rp-&gt;p_size+7)/8); &lt;br/&gt;
4376&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a == NULL) &lt;br/&gt;
4377&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("out of swap space"); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*从 盘交换区 分配空间
**空间大小为 (rp-&gt;p_size+7)/8 块 (512字节/块)
*若分配失败，则进入错误处理
&lt;/div&gt;
4378&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:xccdec|xccdec]](rp-&gt;p_textp); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*处理 共享正文段 ，参看 [[code:xccdec|xccdec]]
&lt;/div&gt;
4379&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_flag &lt;nowiki&gt;=|&lt;/nowiki&gt; SLOCK; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:proc|proc]]置锁
&lt;/div&gt;
4380&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if([[code:swap|swap]](a, rp-&gt;p_addr, os, 0)) &lt;br/&gt;
4381&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:panic|panic]]("swap error"); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*进行 写盘交换区的操作
**[[code:swap|swap]]第四个参数 为 B_WRITE=0 ([[file:buf.h|buf.h]])
*若I/O操作出错，进行错误处理
&lt;/div&gt;
4382&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ff) &lt;br/&gt;
4383&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:mfree|mfree]](coremap, os, rp-&gt;p_addr); &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若ff标志位被置，则清理内存图像
&lt;/div&gt;
4384&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_addr = a; &lt;br/&gt;
4385&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_flag =& ~(SLOAD&lt;nowiki&gt;|&lt;/nowiki&gt;SLOCK); &lt;br/&gt;
4386&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rp-&gt;p_time = 0; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*设置相关参数
**p_addr 指针指向 盘交换区上的图像
**清SLOAD ,解锁[[code:proc|proc结构]]
**清 进程驻留时间
&lt;/div&gt;
4387&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(runout) { &lt;br/&gt;
4388&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;runout = 0; &lt;br/&gt;
4389&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:wakeup|wakeup]](&runout); &lt;br/&gt;
4390&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &lt;br/&gt;
4391&nbsp;} &lt;br/&gt;
&lt;div class="wikinote"&gt;
*若 有进程睡眠在runout上，则唤醒该进程
**[[睡眠原因]] : runout
&lt;/div&gt;
4392&nbsp;/* ------------------------- */ &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[进程图像]]

===Caller===
*[[code:newproc]]
*[[code:sched]]
*[[code:expand]]
*[[code:xalloc]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page code:xswap by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:alloc.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
6900 #&lt;br/&gt;
6901 /*&lt;br/&gt;
6902  */&lt;br/&gt;
6903&lt;br/&gt;
6904 #include "../param.h"&lt;br/&gt;
6905 #include "../systm.h"&lt;br/&gt;
6906 #include "../filsys.h"&lt;br/&gt;
6907 #include "../conf.h"&lt;br/&gt;
6908 #include "../buf.h"&lt;br/&gt;
6909 #include "../inode.h"&lt;br/&gt;
6910 #include "../user.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:alloc.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:bio.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
4700&nbsp;# &lt;br/&gt;
4701&nbsp;/* &lt;br/&gt;
4702&nbsp;&nbsp;*/ &lt;br/&gt;
4703 &lt;br/&gt;
4704&nbsp;#include "../param.h" &lt;br/&gt;
4705&nbsp;#include "../user.h" &lt;br/&gt;
4706&nbsp;#include "../buf.h" &lt;br/&gt;
4707&nbsp;#include "../conf.h" &lt;br/&gt;
4708&nbsp;#include "../systm.h" &lt;br/&gt;
4709&nbsp;#include "../proc.h" &lt;br/&gt;
4710&nbsp;#include "../seg.h" &lt;br/&gt;
4711 &lt;br/&gt;
4712&nbsp;/* &lt;br/&gt;
4713&nbsp;&nbsp;* This is the set of buffres proper, whose heads &lt;br/&gt;
4714&nbsp;&nbsp;* were declared in buf.h.  There can exist buffer &lt;br/&gt;
4715&nbsp;&nbsp;* headers not pointing here that are used purely &lt;br/&gt;
4716&nbsp;&nbsp;* as arguments to the I/O routines to describe &lt;br/&gt;
4717&nbsp;&nbsp;* I/O to be done-- e.g. swbuf, just below, for &lt;br/&gt;
4718&nbsp;&nbsp;* swapping. &lt;br/&gt;
4719&nbsp;&nbsp;*/ &lt;br/&gt;
4720&nbsp;char buffers[NBUF][514]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*设备缓存数组,参见 [[设备缓存管理]]
&lt;/div&gt;
4721&nbsp;struct     buf     swbuf; &lt;br/&gt;
4722 &lt;br/&gt;
4723&nbsp;/* &lt;br/&gt;
4724&nbsp;&nbsp;* Declarations of the tables for the magtape devices; &lt;br/&gt;
4725&nbsp;&nbsp;* see bdwrite. &lt;br/&gt;
4726&nbsp;&nbsp;*/ &lt;br/&gt;
4727&nbsp;int tmtab; &lt;br/&gt;
4728&nbsp;int httab; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 磁带设备 的指针
*类型为 [[code:struct devtab|struct devtab]]
*参见 [[code:bdwrite|bdwrite]]
&lt;/div&gt;
4729 &lt;br/&gt;
4730&nbsp;/* &lt;br/&gt;
4731&nbsp;&nbsp;* The following several routines allocate and free &lt;br/&gt;
4732&nbsp;&nbsp;* buffers with various side effects.  In general the &lt;br/&gt;
4733&nbsp;&nbsp;* arguments to an allocate routine are a device and &lt;br/&gt;
4734&nbsp;&nbsp;* a block number, and the value is a pointer to &lt;br/&gt;
4735&nbsp;&nbsp;* the buffer header; the buffer is marked "busy" &lt;br/&gt;
4736&nbsp;&nbsp;* so that no one else can touch it.  If the block was &lt;br/&gt;
4737&nbsp;&nbsp;* already in core, no I/O need be done; if it is &lt;br/&gt;
4738&nbsp;&nbsp;* already busy, the process waits until it becomes free.     &lt;br/&gt;
4739&nbsp;&nbsp;* The following routines allocate a buffer: &lt;br/&gt;
4740&nbsp;&nbsp;* getblk &lt;br/&gt;
4741&nbsp;&nbsp;* bread &lt;br/&gt;
4742&nbsp;&nbsp;* breada &lt;br/&gt;
4743&nbsp;&nbsp;* Eventually the buffer must be released, possibly with the  &lt;br/&gt;
4744&nbsp;&nbsp;* side effect of writing it out, by using one of &lt;br/&gt;
4745&nbsp;&nbsp;* bwrite &lt;br/&gt;
4746&nbsp;&nbsp;* bdwrite &lt;br/&gt;
4747&nbsp;&nbsp;* bawrite &lt;br/&gt;
4748&nbsp;&nbsp;* brelse &lt;br/&gt;
4749&nbsp;&nbsp;*/ &lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:bio.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:buf.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
4561 &lt;br/&gt;
4562&nbsp;/* &lt;br/&gt;
4563&nbsp;&nbsp;* This is the head of the queue of available &lt;br/&gt;
4564&nbsp;&nbsp;* buffers-- all unused except for the 2 list heads. &lt;br/&gt;
4565&nbsp;&nbsp;*/ &lt;br/&gt;
4566 &lt;br/&gt;
4567&nbsp;[[code:struct buf|struct buf]] bfreelist; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[自由队列]]
&lt;/div&gt;
4568 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下是[[code:struct buf|struct buf]]结构中 b_flags 使用的定义常量
&lt;/div&gt;
4569&nbsp;/* &lt;br/&gt;
4570&nbsp;&nbsp;* These flags are kept in b_flags. &lt;br/&gt;
4571&nbsp;&nbsp;*/ &lt;br/&gt;
4572&nbsp;#define  B_WRITE   0 /* non-read pseudo-flag */ &lt;br/&gt;
4573&nbsp;#define  B_READ    01 /* read when I/O occurs */ &lt;br/&gt;
4574&nbsp;#define  B_DONE    02 /* transaction finished */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该缓存块读/写设备完成
&lt;/div&gt;
4575&nbsp;#define  B_ERROR   04 /* transaction aborted */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该缓存块读/写设备出错
&lt;/div&gt;
4576&nbsp;#define  B_BUSY    010     /* not on av_forw/back list */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该缓存块正在读/写设备，设备忙
&lt;/div&gt;
4577&nbsp;#define  B_PHYS    020     /* Physical IO potentially &lt;br/&gt;
4578&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using the Unibus map */ &lt;br/&gt;
4579&nbsp;#define  B_MAP     040     /* This block has the UNIBUS &lt;br/&gt;
4580&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map allocated */ &lt;br/&gt;
4581 #define  B_WANTED  0100    /* issue wakeup when &lt;br/&gt;
4582&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BUSY goes off */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*有进程正在请求该缓存块
&lt;/div&gt;
4583 #define  B_RELOC   0200    /* no longer used */ &lt;br/&gt;
4584 #define  B_ASYNC   0400    /* don’t wait wait for I/O &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该缓存块 进行异步写
&lt;/div&gt;
4585&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completion */ &lt;br/&gt;
4586 #define  B_DELWRI  01000   /* don’t write till block &lt;br/&gt;
4587&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leaves available list */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*该缓存块 进行延迟写
&lt;/div&gt;
4588 &lt;br/&gt;
4589 &lt;br/&gt;
4590 &lt;br/&gt;
4591 &lt;br/&gt;
4592 &lt;br/&gt;
4593 &lt;br/&gt;
4594 &lt;br/&gt;
4595 &lt;br/&gt;
4596 &lt;br/&gt;
4597 &lt;br/&gt;
4598 &lt;br/&gt;
4599 &lt;br/&gt;
&lt;/div&gt;

===Ref===
*[[设备缓存管理]]

</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:buf.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:clock.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
3700 #&lt;br/&gt;
3701 #include "../param.h"&lt;br/&gt;
3702 #include "../systm.h"&lt;br/&gt;
3703 #include "../user.h"&lt;br/&gt;
3704 #include "../proc.h"&lt;br/&gt;
3705&lt;br/&gt;
3706 #define    UMODE   0170000&lt;br/&gt;
3707 #define    SCHMAG  10&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:clock.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:conf.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
4600&nbsp;/* Used to dissect integer device code &lt;br/&gt;
4601&nbsp;&nbsp;* into major (driver designation) and &lt;br/&gt;
4602&nbsp;&nbsp;* minor (driver parameter) parts. &lt;br/&gt;
4603&nbsp;&nbsp;*/ &lt;br/&gt;
4604&nbsp;struct     { &lt;br/&gt;
4605&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    d_minor; &lt;br/&gt;
4606&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char    d_major; &lt;br/&gt;
4607&nbsp;}; &lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:conf.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:file.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
5515&lt;br/&gt;
5516 /* flags */&lt;br/&gt;
5517 #define    FREAD   01&lt;br/&gt;
5518 #define    FWRITE  02&lt;br/&gt;
5519 #define    FPIPE   04&lt;br/&gt;
5520&lt;br/&gt;
5521&lt;br/&gt;
5522&lt;br/&gt;
5523&lt;br/&gt;
5524&lt;br/&gt;
5525&lt;br/&gt;
5526&lt;br/&gt;
5527&lt;br/&gt;
5528&lt;br/&gt;
5529&lt;br/&gt;
5530&lt;br/&gt;
5531&lt;br/&gt;
5532&lt;br/&gt;
5533&lt;br/&gt;
5534&lt;br/&gt;
5535&lt;br/&gt;
5536&lt;br/&gt;
5537&lt;br/&gt;
5538&lt;br/&gt;
5539&lt;br/&gt;
5540&lt;br/&gt;
5541&lt;br/&gt;
5542&lt;br/&gt;
5543&lt;br/&gt;
5544&lt;br/&gt;
5545&lt;br/&gt;
5546&lt;br/&gt;
5547&lt;br/&gt;
5548&lt;br/&gt;
5549&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:file.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:fio.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
6600 #&lt;br/&gt;
6601&nbsp;/*&lt;br/&gt;
6602&nbsp;&nbsp;*/&lt;br/&gt;
6603&lt;br/&gt;
6604 #include "../param.h"&lt;br/&gt;
6605 #include "../user.h"&lt;br/&gt;
6606 #include "../filsys.h"&lt;br/&gt;
6607 #include "../file.h"&lt;br/&gt;
6608 #include "../conf.h"&lt;br/&gt;
6609 #include "../inode.h"&lt;br/&gt;
6610 #include "../reg.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:fio.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:iget.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
7250 #&lt;br/&gt;
7251 #include "../param.h"&lt;br/&gt;
7252 #include "../systm.h"&lt;br/&gt;
7253 #include "../user.h"&lt;br/&gt;
7254 #include "../inode.h"&lt;br/&gt;
7255 #include "../filsys.h"&lt;br/&gt;
7256 #include "../conf.h"&lt;br/&gt;
7257 #include "../buf.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:iget.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:ino.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
5618&lt;br/&gt;
5619 /* modes */&lt;br/&gt;
5620 #define    IALLOC  0100000&lt;br/&gt;
5621 #define    IFMT    060000&lt;br/&gt;
5622 #define    IFDIR   040000&lt;br/&gt;
5623 #define    IFCHR   020000&lt;br/&gt;
5624 #define    IFBLK   060000&lt;br/&gt;
5625 #define    ILARG   010000&lt;br/&gt;
5626 #define    ISUID   04000&lt;br/&gt;
5627 #define    ISGID   02000&lt;br/&gt;
5628 #define    ISVTX   01000&lt;br/&gt;
5629 #define    IREAD   0400&lt;br/&gt;
5630 #define    IWRITE  0200&lt;br/&gt;
5631 #define    IEXEC   0100&lt;br/&gt;
&lt;div class="wikinote"&gt;
关于模式常量的描述，参看[[file:inode.h|inode.h]]
&lt;/div&gt;
5632&lt;br/&gt;
5633&lt;br/&gt;
5634&lt;br/&gt;
5635&lt;br/&gt;
5636&lt;br/&gt;
5637&lt;br/&gt;
5638&lt;br/&gt;
5639&lt;br/&gt;
5640&lt;br/&gt;
5641&lt;br/&gt;
5642&lt;br/&gt;
5643&lt;br/&gt;
5644&lt;br/&gt;
5645&lt;br/&gt;
5646&lt;br/&gt;
5647&lt;br/&gt;
5648&lt;br/&gt;
5649&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:ino.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:inode.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
5677&lt;br/&gt;
5678 /* flags */&lt;br/&gt;
5679 #define ILOCK  01  /* inode is locked */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*INODE块锁标志
&lt;/div&gt;
5680 #define IUPD   02  /* inode has been modified */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*INODE块被修改标志
&lt;/div&gt;
5681 #define IACC   04  /* inode access time to be updated */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*INODE块被读取标志
&lt;/div&gt;
5682 #define IMOUNT 010 /* inode is mounted on */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*该INODE块 装载 子文件系统 
&lt;/div&gt;
5683 #define IWANT  020 /* some process waiting on lock */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*有进程在等待使用该INODE块
&lt;/div&gt;
5684 #define ITEXT  040 /* inode is pure text prototype */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*该文件是某程序的正文
&lt;/div&gt;
5685&lt;br/&gt;
5686 /* modes */&lt;br/&gt;
5687 #define IALLOC 0100000 /* file is used */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*该 INODE 块已被分配使用
&lt;/div&gt;
5688 #define IFMT   060000  /* type of file */&lt;br/&gt;
5689 #define IFDIR  040000  /* directory */&lt;br/&gt;
5690 #define IFCHR  020000  /* character special */&lt;br/&gt;
5691 #define IFBLK  060000  /* block special, 0 is regular */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*参看 [[文件系统#inode类型|文件系统之inode类型]]
&lt;/div&gt;
5692 #define ILARG  010000  /* large addressing algorithm */&lt;br/&gt;
5693 #define ISUID  04000   /* set user id on execution */&lt;br/&gt;
5694 #define ISGID  02000   /* set group id on execution */&lt;br/&gt;
5695 #define ISVTX  01000   /* save swapped text even after use */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*该 INODE 块 为[[共享正文段]]的INODE，且不可被释放
&lt;/div&gt;
5696 #define IREAD  0400    /* read, write, execute permissions */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*读权限
&lt;/div&gt;
5697 #define IWRITE 0200&lt;br/&gt;
&lt;div class="wikinote"&gt;
*写权限
&lt;/div&gt;
5698 #define IEXEC  0100&lt;br/&gt;
&lt;div class="wikinote"&gt;
*执行权限
&lt;/div&gt;
5699&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:inode.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:kl.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
8000&nbsp;#&lt;br/&gt;
8001&nbsp;/*   KL/DL-11 driver */&lt;br/&gt;
8002&nbsp;#include "../param.h"&lt;br/&gt;
8003&nbsp;#include "../conf.h"&lt;br/&gt;
8004&nbsp;#include "../user.h"&lt;br/&gt;
8005&nbsp;#include "../tty.h"&lt;br/&gt;
8006&nbsp;#include "../proc.h"&lt;br/&gt;
8007&nbsp;/* base address */&lt;br/&gt;
8008&nbsp;#define    KLADDR  0177560 /* console */&lt;br/&gt;
8009&nbsp;#define    KLBASE  0176500 /* kl and dl11-a */&lt;br/&gt;
8010&nbsp;#define    DLBASE  0175610 /* dl-e */&lt;br/&gt;
8011&nbsp;#define    NKL11   1&lt;br/&gt;
8012&nbsp;#define    NDL11   0&lt;br/&gt;
8013&nbsp;#define    DSRDY   02&lt;br/&gt;
8014&nbsp;#define    RDRENB  01&lt;br/&gt;
8015&nbsp;struct     [[code:struct tty|tty]] [[code:kl11|kl11]][NKL11+NDL11];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*kl11/DL11接口设备表
&lt;/div&gt;
8016&nbsp;struct klregs {&lt;br/&gt;
8017&nbsp;&nbsp;&nbsp;&nbsp;int klrcsr;&lt;br/&gt;
8018&nbsp;&nbsp;&nbsp;&nbsp;int klrbuf;&lt;br/&gt;
8019&nbsp;&nbsp;&nbsp;&nbsp;int kltcsr;&lt;br/&gt;
8020&nbsp;&nbsp;&nbsp;&nbsp;int kltbuf;&lt;br/&gt;
8021&nbsp;}&lt;br/&gt;
8022 /* -------------------------     */
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:kl.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:low.s</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikiheadnote"&gt;
*用于 设置 内存低地址空间
*设置情况如图
&lt;/div&gt;
&lt;div class="wikicode"&gt;
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/File_low_s.png|frame|right"/></p>
0500&nbsp;/ low core &lt;br/&gt;
0501 &lt;br/&gt;
0502&nbsp;br4 = 200 &lt;br/&gt;
0503&nbsp;br5 = 240 &lt;br/&gt;
0504&nbsp;br6 = 300 &lt;br/&gt;
0505&nbsp;br7 = 340 &lt;br/&gt;
0506 &lt;br/&gt;
0507&nbsp;. = 0^. &lt;br/&gt;
0508&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:BR|br]] 1f &lt;br/&gt;
0509&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4 &lt;br/&gt;
0510 &lt;br/&gt;
0511&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/ trap vectors &lt;br/&gt;
0512&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+0. / bus error &lt;br/&gt;
0513&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+1. / illegal instruction &lt;br/&gt;
0514&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+2. / bpt-trace trap &lt;br/&gt;
0515&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+3. / iot trap &lt;br/&gt;
0516&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+4. / power fail &lt;br/&gt;
0517&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+5. / emulator trap &lt;br/&gt;
0518&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+6. / system entry &lt;br/&gt;
0519 &lt;br/&gt;
0520&nbsp;. = 40^. &lt;br/&gt;
0521&nbsp;.globl     start, dump &lt;br/&gt;
0522&nbsp;1: [[pdp11:JMP|jmp]]     start &lt;br/&gt;
0523&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:JMP|jmp]]     dump &lt;br/&gt;
0524 &lt;br/&gt;
0525&nbsp;. = 60^. &lt;br/&gt;
0526&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;klin; br4 &lt;br/&gt;
0527&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;klou; br4 &lt;br/&gt;
0528 &lt;br/&gt;
0529&nbsp;. = 70^. &lt;br/&gt;
0530&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pcin; br4 &lt;br/&gt;
0531&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pcou; br4 &lt;br/&gt;
0532 &lt;br/&gt;
0533&nbsp;. = 100^. &lt;br/&gt;
0534&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kwlp; br6 &lt;br/&gt;
0535&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kwlp; br6 &lt;br/&gt;
0536 &lt;br/&gt;
0537&nbsp;. = 114^. &lt;br/&gt;
0538&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+7. / 11/70 parity &lt;br/&gt;
0539 &lt;br/&gt;
0540&nbsp;. = 200^. &lt;br/&gt;
0541&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lpou; br4 &lt;br/&gt;
0542 &lt;br/&gt;
0543&nbsp;. = 220^. &lt;br/&gt;
0544&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rkio; br5 &lt;br/&gt;
0545 &lt;br/&gt;
0546&nbsp;. = 240^. &lt;br/&gt;
0547&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+7. / programmed interrupt &lt;br/&gt;
0548&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+8. / flotaing point &lt;br/&gt;
0549&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[code:trap|trap]]; br7+9. / segmentation violation &lt;br/&gt;
0550 &lt;br/&gt;
0551 ///////////////////////////////////////////////////////// &lt;br/&gt;
0552 / interface code to C &lt;br/&gt;
0553 ///////////////////////////////////////////////////////// &lt;br/&gt;
0554 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下为设备中断入口
*使用了 技巧 [[skill:r0传递函数|r0传递函数]]
&lt;/div&gt;
0555&nbsp;.globl     call, trap &lt;br/&gt;
0556 &lt;br/&gt;
0557&nbsp;.globl     _klrint &lt;br/&gt;
0558&nbsp;klin: [[pdp11:JSR|jsr]]     r0,[[code:call|call]]; _klrint &lt;br/&gt;
0559 &lt;br/&gt;
0560&nbsp;.globl     _klxint &lt;br/&gt;
0561&nbsp;klou: [[pdp11:JSR|jsr]]     r0,[[code:call|call]]; _klxint &lt;br/&gt;
0562 &lt;br/&gt;
0563&nbsp;.globl     _pcrint &lt;br/&gt;
0564&nbsp;pcin: [[pdp11:JSR|jsr]]     r0,[[code:call|call]]; _pcrint &lt;br/&gt;
0565 &lt;br/&gt;
0566&nbsp;.globl     _pcpint &lt;br/&gt;
0567&nbsp;pcou: [[pdp11:JSR|jsr]]     r0,[[code:call|call]]; _pcpint &lt;br/&gt;
0568 &lt;br/&gt;
0569&nbsp;.globl     _clock &lt;br/&gt;
0570&nbsp;kwlp: [[pdp11:JSR|jsr]]     r0,[[code:call|call]]; _clock &lt;br/&gt;
0571 &lt;br/&gt;
0572 &lt;br/&gt;
0573&nbsp;.globl     _lpint &lt;br/&gt;
0574&nbsp;lpou: [[pdp11:JSR|jsr]]     r0,[[code:call|call]]; _lpint &lt;br/&gt;
0575 &lt;br/&gt;
0576&nbsp;.globl     _rkintr &lt;br/&gt;
0577&nbsp;rkio: [[pdp11:JSR|jsr]]     r0,[[code:call|call]]; _rkintr &lt;br/&gt;
0578 &lt;br/&gt;
0579 &lt;br/&gt;
0580 &lt;br/&gt;
0581 &lt;br/&gt;
0582 &lt;br/&gt;
0583 &lt;br/&gt;
0584 &lt;br/&gt;
0585 &lt;br/&gt;
0586 &lt;br/&gt;
0587 &lt;br/&gt;
0588 &lt;br/&gt;
0589 &lt;br/&gt;
0590 &lt;br/&gt;
0591 &lt;br/&gt;
0592 &lt;br/&gt;
0593 &lt;br/&gt;
0594 &lt;br/&gt;
0595 &lt;br/&gt;
0596 &lt;br/&gt;
0597 &lt;br/&gt;
0598 &lt;br/&gt;
0599 &lt;br/&gt;

===Ref===
*[[中断]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:low.s by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:lp.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*LP 设备 的 驱动函数
*不做详细说明</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:lp.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:m40.s</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0600 / machine language assist&lt;br/&gt;
0601 / for 11/40&lt;br/&gt;
0602&lt;br/&gt;
0603 / non-UNIX instructions&lt;br/&gt;
0604 mfpi = 6500^tst &lt;br/&gt;
0605 mtpi = 6600^tst &lt;br/&gt;
0606 wait = 1 &lt;br/&gt;
0607 rtt = 6 &lt;br/&gt;
0608 reset = 5 &lt;br/&gt;
0609&lt;br/&gt;
&lt;/div&gt;
&lt;div class="wikicode"&gt;
1439 /* ------------------------- */ &lt;br/&gt;
1440 .globl     _u&lt;br/&gt;
1441 _u = 140000&lt;br/&gt;
&lt;div class="wikinote"&gt;
*参看 [[KISA6寻址]]
&lt;/div&gt;
1442 USIZE = 16. &lt;br/&gt;
1443&lt;br/&gt;
1444 PS = 177776 &lt;br/&gt;
1445 SSR0 = 177572 &lt;br/&gt;
1446 SSR2 = 177576 &lt;br/&gt;
1447 KISA0 = 172340 &lt;br/&gt;
1448 KISA6 = 172354 &lt;br/&gt;
1449 KISD0 = 172300 &lt;br/&gt;
1450 MTC = 172522 &lt;br/&gt;
1451 UISA0 = 177640 &lt;br/&gt;
1452 UISA1 = 177642 &lt;br/&gt;
1453 UISD0 = 177600 &lt;br/&gt;
1454 UISD1 = 177602 &lt;br/&gt;
1455 IO = 7600&lt;br/&gt;
1456&lt;br/&gt;
1457 .data&lt;br/&gt;
1458 /* ------------------------- */ &lt;br/&gt;
1459 .globl     _ka6, _cputype&lt;br/&gt;
1460 _ka6: KISA6 &lt;br/&gt;
1461 _cputype:40. &lt;br/&gt;
1462&lt;br/&gt;
1463 .bss &lt;br/&gt;
1464 /* ------------------------- */ &lt;br/&gt;
1465 .globl     nofault, ssr, badtrap &lt;br/&gt;
1466 nofault: .=.+2 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*用于 保存 出错处理函数的地址
&lt;/div&gt;
1467 ssr: .=.+6 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*用来保存 [[code:SSR|SSR]]值 的空间
&lt;/div&gt;
1468 badtrap: .=.+2 &lt;br/&gt;
&lt;div class="wikinote"&gt;
*.bss 区的说明 参看 [[.bss]]
&lt;/div&gt;
1469 &lt;br/&gt;
1470 &lt;br/&gt;
1471 &lt;br/&gt;
1472 &lt;br/&gt;
1473 &lt;br/&gt;
1474 &lt;br/&gt;
1475 &lt;br/&gt;
1476 &lt;br/&gt;
1477 &lt;br/&gt;
1478 &lt;br/&gt;
1479 &lt;br/&gt;
1480 &lt;br/&gt;
1481 &lt;br/&gt;
1482 &lt;br/&gt;
1483 &lt;br/&gt;
1484 &lt;br/&gt;
1485 &lt;br/&gt;
1486 &lt;br/&gt;
1487 &lt;br/&gt;
1488 &lt;br/&gt;
1489 &lt;br/&gt;
1490 &lt;br/&gt;
1491 &lt;br/&gt;
1492 &lt;br/&gt;
1493 &lt;br/&gt;
1494 &lt;br/&gt;
1495 &lt;br/&gt;
1496 &lt;br/&gt;
1497 &lt;br/&gt;
1498 &lt;br/&gt;
1499 &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[.bss]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:m40.s by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:main.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
1500&nbsp;#&lt;br/&gt;
1501&nbsp;#include "../param.h"&lt;br/&gt;
1502&nbsp;#include "../user.h"&lt;br/&gt;
1503&nbsp;#include "../systm.h"&lt;br/&gt;
1504&nbsp;#include "../proc.h"&lt;br/&gt;
1505&nbsp;#include "../text.h"&lt;br/&gt;
1506&nbsp;#include "../inode.h"&lt;br/&gt;
1507&nbsp;#include "../seg.h"&lt;br/&gt;
1508&lt;br/&gt;
1509&nbsp;#define    CLOCK1  0177546&lt;br/&gt;
1510&nbsp;#define    CLOCK2  0172540&lt;br/&gt;
1511&nbsp;/*&lt;br/&gt;
1512&nbsp;&nbsp;* Icode is the octal bootstrap&lt;br/&gt;
1513&nbsp;&nbsp;* program executed in user mode&lt;br/&gt;
1514&nbsp;&nbsp;* to bring up the system.&lt;br/&gt;
1515&nbsp;&nbsp;*/&lt;br/&gt;
1516&nbsp;int             icode[]&lt;br/&gt;
1517&nbsp;{&lt;br/&gt;
1518&nbsp;&nbsp;&nbsp;&nbsp;0104413,               /* sys exec; init; initp */&lt;br/&gt;
1519&nbsp;&nbsp;&nbsp;&nbsp;0000014,&lt;br/&gt;
1520&nbsp;&nbsp;&nbsp;&nbsp;0000010,               /* br . */&lt;br/&gt;
1521&nbsp;&nbsp;&nbsp;&nbsp;0000777,               /* initp: init; 0 */&lt;br/&gt;
1522&nbsp;&nbsp;&nbsp;&nbsp;0000014,&lt;br/&gt;
1523&nbsp;&nbsp;&nbsp;&nbsp;0000000,&lt;br/&gt;
1524&nbsp;&nbsp;&nbsp;&nbsp;0062457,               /* init: &lt;/etc/init\0&gt; */&lt;br/&gt;
1525&nbsp;&nbsp;&nbsp;&nbsp;0061564,&lt;br/&gt;
1526&nbsp;&nbsp;&nbsp;&nbsp;0064457,&lt;br/&gt;
1527&nbsp;&nbsp;&nbsp;&nbsp;0064556,&lt;br/&gt;
1528&nbsp;&nbsp;&nbsp;&nbsp;0000164,&lt;br/&gt;
1529&nbsp;};&lt;br/&gt;
&lt;div class="wikinote"&gt;
*参看 LIONS 代码分析
&lt;/div&gt;
1530&nbsp;/* -------------------------     */&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:main.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:mem.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
9000&nbsp;#&lt;br/&gt;
9001&nbsp;/*&lt;br/&gt;
9002&nbsp;&nbsp;*/&lt;br/&gt;
9003&lt;br/&gt;
9004&nbsp;/*&lt;br/&gt;
9005&nbsp;&nbsp;* Memory special file&lt;br/&gt;
9006&nbsp;&nbsp;* minor device 0 is physical memory&lt;br/&gt;
9007&nbsp;&nbsp;* minor device 1 is kernel memory&lt;br/&gt;
9008&nbsp;&nbsp;* minor device 2 is EOF/RATHOLE&lt;br/&gt;
9009&nbsp;&nbsp;*/&lt;br/&gt;
9010&lt;br/&gt;
9011&nbsp;#include "../param.h"&lt;br/&gt;
9012&nbsp;#include "../user.h"&lt;br/&gt;
9013&nbsp;#include "../conf.h"&lt;br/&gt;
9014&nbsp;#include "../seg.h"&lt;br/&gt;
9015&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:mem.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:nami.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
7500 #&lt;br/&gt;
7501 #include "../param.h"&lt;br/&gt;
7502 #include "../inode.h"&lt;br/&gt;
7503 #include "../user.h"&lt;br/&gt;
7504 #include "../systm.h"&lt;br/&gt;
7505 #include "../buf.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:nami.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:param.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0100 /* fundamental constants: do not change */&lt;br/&gt;
0101&lt;br/&gt;
0102&lt;br/&gt;
0103 #define USIZE 16 /* size of user block (*64) */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*PPDA区的大小（块数），参考[[内存管理]]
&lt;/div&gt;
0104 #define NULL 0&lt;br/&gt;
0105 #define NODEV (-1)&lt;br/&gt;
0106 #define ROOTINO 1 /* i number of all roots */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*超级块 的 INODE号
&lt;/div&gt;
0107 #define DIRSIZ 14 /* max characters per directory */&lt;br/&gt;
0108&lt;br/&gt;
0109&lt;br/&gt;
0110 /* signals: do not change */&lt;br/&gt;
0111&lt;br/&gt;
0112&lt;br/&gt;
0113 #define NSIG 20&lt;br/&gt;
&lt;div class="wikinote"&gt;
*信号总数，参看[[信号系统]]
&lt;/div&gt;
0114 #define SIGHUP 1 /* hangup */ &lt;br/&gt;
0115 #define SIGINT 2 /* interrupt (rubout) */ &lt;br/&gt;
0116 #define SIGQIT 3 /* quit (FS) */ &lt;br/&gt;
0117 #define SIGINS 4 /* illegal instruction */ &lt;br/&gt;
0118 #define SIGTRC 5 /* trace or breakpoint */ &lt;br/&gt;
0119 #define SIGIOT 6 /* iot */ &lt;br/&gt;
0120 #define SIGEMT 7 /* emt */&lt;br/&gt;
0121 #define SIGFPT 8 /* floating point exception */ &lt;br/&gt;
0122 #define SIGKIL 9 /* kill */ &lt;br/&gt;
0123 #define SIGBUS 10 /* bus error */ &lt;br/&gt;
0124 #define SIGSEG 11 /* segmentation violation */ &lt;br/&gt;
0125 #define SIGSYS 12 /* sys */ &lt;br/&gt;
0126 #define SIGPIPE 13 /* end of pipe */ &lt;br/&gt;
0127&lt;br/&gt;
0128 /* tunable variables */&lt;br/&gt;
0129&lt;br/&gt;
0130 #define NBUF 15 /* size of buffer cache */&lt;br/&gt;
0131 #define NINODE 100 /* number of in core inodes */&lt;br/&gt;
0132 #define NFILE 100 /* number of in core file structures */ &lt;br/&gt;
0133 #define NMOUNT 5 /* number of mountable file systems */ &lt;br/&gt;
0134 #define NEXEC 3 /* number of simultaneous exec’s */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*调用[[code:exec|exec]] 生成进程的 最大进程数
&lt;/div&gt;
0135 #define MAXMEM (64*32) /* max core per process;&lt;br/&gt;
0136 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first number is kw */ &lt;br/&gt;
0137 #define SSIZE 20 /* initial stack size (*64 bytes) */&lt;br/&gt;
0138 #define SINCR 20 /* increment of stack (*64 bytes) */&lt;br/&gt;
0139 #define NOFILE 15 /* max open files per process */&lt;br/&gt;
0140 #define CANBSIZ 256 /* max size of typewriter line */ &lt;br/&gt;
0141 #define CMAPSIZ 100 /* size of core allocation area */ &lt;br/&gt;
0142 #define SMAPSIZ 100 /* size of swap allocation area */ &lt;br/&gt;
0143 #define NCALL 20 /* max simultaneous time callouts */&lt;br/&gt;
0144 #define NPROC 50 /* max number of processes */&lt;br/&gt;
0145 #define NTEXT 40 /* max number of pure texts */&lt;br/&gt;
0146 #define NCLIST 100 /* max total clist size */&lt;br/&gt;
0147 #define HZ 60/* Ticks/second of the clock */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*60 滴答数/秒
&lt;/div&gt;
0148&lt;br/&gt;
0149&lt;br/&gt;
0150&lt;br/&gt;
0151 /* priorities: do not alter much */&lt;br/&gt;
0152&lt;br/&gt;
0153&lt;br/&gt;
0154 #define PSWP -100 &lt;br/&gt;
0155 #define PINOD -90 &lt;br/&gt;
0156 #define PRIBIO -50&lt;br/&gt;
0157 #define PPIPE 1 &lt;br/&gt;
0158 #define PWAIT 40 &lt;br/&gt;
0159 #define PSLEP 90 &lt;br/&gt;
0160 #define PUSER 100 &lt;br/&gt;
0161&lt;br/&gt;
0162 /* Certain processor registers */&lt;br/&gt;
0163&lt;br/&gt;
0164 #define PS 0177776&lt;br/&gt;
0165 #define KL 0177560&lt;br/&gt;
0166 #define SW 0177570&lt;br/&gt;
0167&lt;br/&gt;
0168 /* ------------------------- */ &lt;br/&gt;
0169&lt;br/&gt;
0170 /* structures to access integers : */&lt;br/&gt;
0171&lt;br/&gt;
0172&lt;br/&gt;
0173 /* single integer */&lt;br/&gt;
0174&lt;br/&gt;
0175 struct { int integ; };&lt;br/&gt;
0176&lt;br/&gt;
0177&lt;br/&gt;
0178 /* in bytes */&lt;br/&gt;
0179&lt;br/&gt;
0180 struct { char lobyte; char hibyte; };&lt;br/&gt;
0181&lt;br/&gt;
0182&lt;br/&gt;
0183 /* as a sequence */&lt;br/&gt;
0184&lt;br/&gt;
0185 struct { int r[];}; &lt;br/&gt;
0186&lt;br/&gt;
0187&lt;br/&gt;
0188 /* -------------------------*/ &lt;br/&gt;
0189&lt;br/&gt;
0190&lt;br/&gt;
0191&lt;br/&gt;
0192&lt;br/&gt;
0193&lt;br/&gt;
0194&lt;br/&gt;
0195&lt;br/&gt;
0196&lt;br/&gt;
0197&lt;br/&gt;
0198&lt;br/&gt;
0199&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:param.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:pc.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*PC设备 的 驱动函数
*不做详细说明</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:pc.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:pipe.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
7700&nbsp;#include "../param.h"&lt;br/&gt;
7701&nbsp;#include "../systm.h"&lt;br/&gt;
7702&nbsp;#include "../user.h"&lt;br/&gt;
7703&nbsp;#include "../inode.h"&lt;br/&gt;
7704&nbsp;#include "../file.h"&lt;br/&gt;
7705&nbsp;#include "../reg.h"&lt;br/&gt;
7706&lt;br/&gt;
7707&nbsp;/* Max allowable buffering per pipe.&lt;br/&gt;
7708&nbsp;&nbsp;* This is also the max size of the&lt;br/&gt;
7709&nbsp;&nbsp;* file created to implement the pipe.&lt;br/&gt;
7710&nbsp;&nbsp;* If this size is bigger than 4096,&lt;br/&gt;
7711&nbsp;&nbsp;* pipes will be implemented in LARGe&lt;br/&gt;
7712&nbsp;&nbsp;* files, which is probably not good.&lt;br/&gt;
7713&nbsp;&nbsp;*/&lt;br/&gt;
7714&lt;br/&gt;
7715&nbsp;#define    PIPSIZ  4096&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:pipe.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:prf.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
2300&nbsp;#&lt;br/&gt;
2301&nbsp;/*&lt;br/&gt;
2302&nbsp;&nbsp;*/&lt;br/&gt;
2303&lt;br/&gt;
2304&nbsp;#include "../param.h"&lt;br/&gt;
2305&nbsp;#include "../seg.h"&lt;br/&gt;
2306&nbsp;#include "../buf.h"&lt;br/&gt;
2307&nbsp;#include "../conf.h"&lt;br/&gt;
2308&lt;br/&gt;
2309&nbsp;/*&lt;br/&gt;
2310&nbsp;&nbsp;* Address and structure of the&lt;br/&gt;
2311&nbsp;&nbsp;* KL-11 console device registers.&lt;br/&gt;
2312&nbsp;&nbsp;*/&lt;br/&gt;
2313&nbsp;struct&lt;br/&gt;
2314&nbsp;{&lt;br/&gt;
2315&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     rsr;&lt;br/&gt;
2316&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     rbr;&lt;br/&gt;
2317&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     xsr;&lt;br/&gt;
2318&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int     xbr;&lt;br/&gt;
2319&nbsp;};&lt;br/&gt;
2320&nbsp;/* ------------------------- */ &lt;br/&gt;
2321&lt;br/&gt;
2322&nbsp;/*&lt;br/&gt;
2323&nbsp;&nbsp;* In case console is off,&lt;br/&gt;
2324&nbsp;&nbsp;* panicstr contains argument to last&lt;br/&gt;
2325&nbsp;&nbsp;* call to panic.&lt;br/&gt;
2326&nbsp;&nbsp;*/&lt;br/&gt;
2327&lt;br/&gt;
2328&nbsp;char *panicstr; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[code:panic|panic]] 置 panicstr
*保存调用[[code:panic|panic]]的错误信息
&lt;/div&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:prf.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:proc.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0378&lt;br/&gt;
0379&nbsp;/* stat codes */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下是 进程状态 常量
*参看[[进程状态]]
&lt;/div&gt;
0380&lt;br/&gt;
0381&nbsp;/* null 0 not assigned */&lt;br/&gt;
0382&nbsp;#define SSLEEP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1  /* sleeping on high priority */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*高优先级睡眠
&lt;/div&gt;
0383&nbsp;#define SWAIT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2  /* sleeping on low priority */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*低优先级睡眠
&lt;/div&gt;
0384&nbsp;#define SRUN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3  /* running */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*运行/就绪
&lt;/div&gt;
0385&nbsp;#define SIDL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4  /* process being created */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程创建态，参看[[code:newproc|newproc]]
&lt;/div&gt;
0386&nbsp;#define SZOMB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5  /* process being terminated */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程终结态，参看[[code:exit|exit]]
&lt;/div&gt;
0387&nbsp;#define SSTOP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6  /* process being traced */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程暂停态，参看[[跟踪]]
&lt;/div&gt;
0388&lt;br/&gt;
0389&nbsp;/* flag codes */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*以下为进程标志
&lt;/div&gt;
0390&lt;br/&gt;
0391&nbsp;#define SLOAD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;01   /* in core */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[进程图像]] 在内存中
&lt;/div&gt;
0392&nbsp;#define SSYS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;02   /* scheduling process */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*系统进程，不参与[[进程调度]]
&lt;/div&gt;
0393&nbsp;#define SLOCK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;04   /* process cannot be swapped */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程调度锁，该进程不参与[[进程调度]]
&lt;/div&gt;
0394&nbsp;#define SSWAP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;010  /* process is being swapped out */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程图像 在盘交换区，一般用于子进程创建，参看[[进程调度]]
&lt;/div&gt;
0395&nbsp;#define STRC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;020  /* process is being traced */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*进程跟踪标志，参看[[跟踪]]
&lt;/div&gt;
0396&nbsp;#define SWTED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;040  /* another tracing flag */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[跟踪]]子进程 暂停 标志，参看[[跟踪]]
&lt;/div&gt;
0397 &lt;br/&gt;
0398 &lt;br/&gt;
0399 &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[进程图像]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:proc.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:rdwri.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
6200&nbsp;#&lt;br/&gt;
6201&nbsp;/*&lt;br/&gt;
6202&nbsp;&nbsp;*/&lt;br/&gt;
6203&lt;br/&gt;
6204&nbsp;#include "../param.h"&lt;br/&gt;
6205&nbsp;#include "../inode.h"&lt;br/&gt;
6206&nbsp;#include "../user.h"&lt;br/&gt;
6207&nbsp;#include "../buf.h"&lt;br/&gt;
6208&nbsp;#include "../conf.h"&lt;br/&gt;
6209&nbsp;#include "../systm.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:rdwri.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:reg.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
2600&nbsp;/*&lt;br/&gt;
2601&nbsp;&nbsp;* Location of the users’ stored&lt;br/&gt;
2602&nbsp;&nbsp;* registers relative to R0.&lt;br/&gt;
2603&nbsp;&nbsp;* Usage is u.u_ar0[XX].&lt;br/&gt;
2604&nbsp;&nbsp;*/&lt;br/&gt;
2605 #define R0 (0) &lt;br/&gt;
2606 #define R1 (-2) &lt;br/&gt;
2607 #define R2 (-9) &lt;br/&gt;
2608 #define R3 (-8) &lt;br/&gt;
2609 #define R4 (-7) &lt;br/&gt;
2610 #define R5 (-6) &lt;br/&gt;
2611 #define R6 (-3) &lt;br/&gt;
2612 #define R7 (1) &lt;br/&gt;
2613 #define RPS (2)&lt;br/&gt;
2614&lt;br/&gt;
2615 #define TBIT 020 /* PS trace bit */&lt;br/&gt;
2616&lt;br/&gt;
2617&lt;br/&gt;
2618&lt;br/&gt;
2619&lt;br/&gt;
2620&lt;br/&gt;
2621&lt;br/&gt;
2622&lt;br/&gt;
2623&lt;br/&gt;
2624&lt;br/&gt;
2625&lt;br/&gt;
2626&lt;br/&gt;
2627&lt;br/&gt;
2628&lt;br/&gt;
2629&lt;br/&gt;
2630&lt;br/&gt;
2631&lt;br/&gt;
2632&lt;br/&gt;
2633&lt;br/&gt;
2634&lt;br/&gt;
2635&lt;br/&gt;
2636&lt;br/&gt;
2637&lt;br/&gt;
2638&lt;br/&gt;
2639&lt;br/&gt;
2640&lt;br/&gt;
2641&lt;br/&gt;
2642&lt;br/&gt;
2643&lt;br/&gt;
2644&lt;br/&gt;
2645&lt;br/&gt;
2646&lt;br/&gt;
2647&lt;br/&gt;
2648&lt;br/&gt;
2649&lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[skill:u.u_ar0|u.u_ar0]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:reg.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:rk.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
5350 #&lt;br/&gt;
5351&nbsp;/*&lt;br/&gt;
5352&nbsp;&nbsp;*/&lt;br/&gt;
5353&lt;br/&gt;
5354&nbsp;/*&lt;br/&gt;
5355&nbsp;&nbsp;* RK disk driver&lt;br/&gt;
5356&nbsp;&nbsp;*/&lt;br/&gt;
5357&lt;br/&gt;
5358&nbsp;#include "../param.h"&lt;br/&gt;
5359&nbsp;#include "../buf.h"&lt;br/&gt;
5360&nbsp;#include "../conf.h"&lt;br/&gt;
5361&nbsp;#include "../user.h"&lt;br/&gt;
5362&lt;br/&gt;
5363&nbsp;#define    RKADDR  0177400&lt;br/&gt;
5364&nbsp;#define    NRK     4&lt;br/&gt;
5365&nbsp;#define    NRKBLK  4872&lt;br/&gt;
5366&lt;br/&gt;
5367&nbsp;#define    RESET   0&lt;br/&gt;
5368&nbsp;#define    GO 01 &lt;br/&gt;
5369&nbsp;#define    DRESET  014&lt;br/&gt;
5370&nbsp;#define    IENABLE 0100&lt;br/&gt;
5371&nbsp;#define    DRY     0200&lt;br/&gt;
5372&nbsp;#define    ARDY    0100&lt;br/&gt;
5373&nbsp;#define    WLO     020000&lt;br/&gt;
5374&nbsp;#define    CTLRDY  0200&lt;br/&gt;
5375&lt;br/&gt;
5376&nbsp;struct {&lt;br/&gt;
5377&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkds;&lt;br/&gt;
5378&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rker;&lt;br/&gt;
5379&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkcs;&lt;br/&gt;
5380&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkwc;&lt;br/&gt;
5381&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkba;&lt;br/&gt;
5382&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkda;&lt;br/&gt;
5383&nbsp;};&lt;br/&gt;
5384&nbsp;/* ------------------------- */ &lt;br/&gt;
5385&lt;br/&gt;
5386&nbsp;[[code:struct devtab|struct devtab]]  rktab;&lt;br/&gt;
5387&nbsp;[[code:struct buf|struct buf]]     rrkbuf;&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:rk.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:seg.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0300 &lt;br/&gt;
0301&nbsp;/* kt-11 addresses and bits */ &lt;br/&gt;
0302 &lt;br/&gt;
0303 &lt;br/&gt;
0304&nbsp;#define UISD  0177600 /* first user I-space descriptor &lt;br/&gt;
0305&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register */ &lt;br/&gt;
0306&nbsp;#define UISA  0177640 /* first user I-space address &lt;br/&gt;
&lt;div class="wikinote"&gt;
*UISA 和 UISD 寄存器地址
&lt;/div&gt;
0307&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register */ &lt;br/&gt;
0308&nbsp;#define UDSA  0177660 /* first user D-space address &lt;br/&gt;
0309&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register */ &lt;br/&gt;
0310 &lt;br/&gt;
0311&nbsp;#define UBMAP 0170200 /* access to 11/70 unibus map */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*pdp11/40 不使用 UDSA UBMAP ，不作讨论
&lt;/div&gt;
0312 &lt;br/&gt;
0313 &lt;br/&gt;
0314 &lt;br/&gt;
0315&nbsp;#define RO 02 /* access abilities */ &lt;br/&gt;
0316&nbsp;#define WO 04 &lt;br/&gt;
0317&nbsp;#define RW 06 &lt;br/&gt;
0318&nbsp;#define ED 010     /* expand segment downwards */ &lt;br/&gt;
0319 &lt;br/&gt;
0320&nbsp;/* ------------------------- */ &lt;br/&gt;
0321 &lt;br/&gt;
0322&nbsp;int *ka6;   /* 11/40 KISA6; 11/45 KDSA6 */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 KISA6
**初始化在 [[file:m40.s|m40.s]] 1460
&lt;/div&gt;
0323 &lt;br/&gt;
0324 &lt;br/&gt;
0325 &lt;br/&gt;
0326 &lt;br/&gt;
0327 &lt;br/&gt;
0328 &lt;br/&gt;
0329 &lt;br/&gt;
0330 &lt;br/&gt;
0331 &lt;br/&gt;
0332 &lt;br/&gt;
0333 &lt;br/&gt;
0334 &lt;br/&gt;
0335 &lt;br/&gt;
0336 &lt;br/&gt;
0337 &lt;br/&gt;
0338 &lt;br/&gt;
0339 &lt;br/&gt;
0340 &lt;br/&gt;
0341 &lt;br/&gt;
0342 &lt;br/&gt;
0343 &lt;br/&gt;
0344 &lt;br/&gt;
0345 &lt;br/&gt;
0346 &lt;br/&gt;
0347 &lt;br/&gt;
0348 &lt;br/&gt;
0349 &lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:seg.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:sig.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
3900&nbsp;#&lt;br/&gt;
3901&nbsp;/*&lt;br/&gt;
3902&nbsp;&nbsp;*/&lt;br/&gt;
3903&lt;br/&gt;
3904&nbsp;#include "../param.h"&lt;br/&gt;
3905&nbsp;#include "../systm.h"&lt;br/&gt;
3906&nbsp;#include "../user.h"&lt;br/&gt;
3907&nbsp;#include "../proc.h"&lt;br/&gt;
3908&nbsp;#include "../inode.h"&lt;br/&gt;
3909&nbsp;#include "../reg.h"&lt;br/&gt;
3910&lt;br/&gt;
3911&nbsp;/*&lt;br/&gt;
3912&nbsp;&nbsp;* Priority for tracing&lt;br/&gt;
3913&nbsp;&nbsp;*/&lt;br/&gt;
3914&nbsp;#define    IPCPRI  (-1)&lt;br/&gt;
3915&lt;br/&gt;
3916&nbsp;/*&lt;br/&gt;
3917&nbsp;&nbsp;* Structure to access an array of integers.&lt;br/&gt;
3918&nbsp;&nbsp;*/&lt;br/&gt;
3919&nbsp;struct&lt;br/&gt;
3920&nbsp;{&lt;br/&gt;
3921&nbsp;&nbsp;&nbsp;&nbsp;int     inta[];&lt;br/&gt;
3922&nbsp;};&lt;br/&gt;
3923&nbsp;/* -------------------------   */&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:sig.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:subr.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
6400 #&lt;br/&gt;
6401 #include "../param.h"&lt;br/&gt;
6402 #include "../conf.h"&lt;br/&gt;
6403 #include "../inode.h"&lt;br/&gt;
6404 #include "../user.h"&lt;br/&gt;
6405 #include "../buf.h"&lt;br/&gt;
6406 #include "../systm.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:subr.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:sys1.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
3000 #&lt;br/&gt;
3001 #include "../param.h"&lt;br/&gt;
3002 #include "../systm.h"&lt;br/&gt;
3003 #include "../user.h"&lt;br/&gt;
3004 #include "../proc.h"&lt;br/&gt;
3005 #include "../buf.h"&lt;br/&gt;
3006 #include "../reg.h"&lt;br/&gt;
3007 #include "../inode.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:sys1.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:sys2.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
5700 #&lt;br/&gt;
5701 #include "../param.h"&lt;br/&gt;
5702 #include "../systm.h"&lt;br/&gt;
5703 #include "../user.h"&lt;br/&gt;
5704 #include "../reg.h"&lt;br/&gt;
5705 #include "../file.h"&lt;br/&gt;
5706 #include "../inode.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:sys2.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:sys3.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
6000 #&lt;br/&gt;
6001 #include "../param.h"&lt;br/&gt;
6002 #include "../systm.h"&lt;br/&gt;
6003 #include "../reg.h"&lt;br/&gt;
6004 #include "../buf.h"&lt;br/&gt;
6005 #include "../filsys.h"&lt;br/&gt;
6006 #include "../user.h"&lt;br/&gt;
6007 #include "../inode.h"&lt;br/&gt;
6008 #include "../file.h"&lt;br/&gt;
6009 #include "../conf.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:sys3.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:sys4.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class = "wikicode"&gt;
3400 #&lt;br/&gt;
3401 /*&lt;br/&gt;
3402  * Everything in this file is&lt;br/&gt;
3403  * a routine implementing a system call.&lt;br/&gt;
3404  */&lt;br/&gt;
3405&lt;br/&gt;
3406 #include "../param.h"&lt;br/&gt;
3407 #include "../user.h"&lt;br/&gt;
3408 #include "../reg.h"&lt;br/&gt;
3409 #include "../inode.h"&lt;br/&gt;
3410 #include "../systm.h"&lt;br/&gt;
3411 #include "../proc.h"&lt;br/&gt;
3412&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:sys4.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:sysent.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
2900&nbsp;#  &lt;br/&gt;
2901&nbsp;/*  &lt;br/&gt;
2902&nbsp;&nbsp;*/  &lt;br/&gt;
2903  &lt;br/&gt;
2904&nbsp;/*  &lt;br/&gt;
2905&nbsp;&nbsp;* This table is the switch used to transfer  &lt;br/&gt;
2906&nbsp;&nbsp;* to the appropriate routine for processing a system call.   &lt;br/&gt;
2907&nbsp;&nbsp;* Each row contains the number of arguments expected  &lt;br/&gt;
2908&nbsp;&nbsp;* and a pointer to the routine.  &lt;br/&gt;
2909&nbsp;&nbsp;*/  &lt;br/&gt;
2910&nbsp;int sysent[]  &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[系统调用|系统调用函数]]入口
*每项包括 函数参数个数 和 函数地址
&lt;/div&gt;
2911&nbsp;{  &lt;br/&gt;
2912&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nullsys|nullsys]], /*  0 = indir */  &lt;br/&gt;
2913&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:rexit|rexit]], /*  1 = exit */  &lt;br/&gt;
2914&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:fork|fork]], /*  2 = fork */  &lt;br/&gt;
2915&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:read|read]], /*  3 = read */  &lt;br/&gt;
2916&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:write|write]], /*  4 = write */  &lt;br/&gt;
2917&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:open|open]], /*  5 = open */  &lt;br/&gt;
2918&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:close|close]], /*  6 = close */  &lt;br/&gt;
2919&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:wait|wait]], /*  7 = wait */  &lt;br/&gt;
2920&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:creat|creat]], /*  8 = creat */  &lt;br/&gt;
2921&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:link|link]], /*  9 = link */  &lt;br/&gt;
2922&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:unlink|unlink]], /* 10 = ulink */  &lt;br/&gt;
2923&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:exec|exec]], /* 11 = exec */  &lt;br/&gt;
2924&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:chdir|chdir]], /* 12 = chdir */  &lt;br/&gt;
2925&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:gtime|gtime]], /* 13 = time */  &lt;br/&gt;
2926&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3, &[[code:mknod|mknod]], /* 14 = mknod */  &lt;br/&gt;
2927&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:chmod|chmod]], /* 15 = chmod */  &lt;br/&gt;
2928&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:chown|chown]], /* 16 = chown */  &lt;br/&gt;
2929&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:sbreak|sbreak]], /* 17 = break */  &lt;br/&gt;
2930&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:stat|stat]], /* 18 = stat */  &lt;br/&gt;
2931&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:seek|seek]], /* 19 = seek */  &lt;br/&gt;
2932&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:getpid|getpid]], /* 20 = getpid */  &lt;br/&gt;
2933&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3, &[[code:smount|smount]], /* 21 = mount */  &lt;br/&gt;
2934&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:sumount|sumount]], /* 22 = unmount */  &lt;br/&gt;
2935&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:setuid|setuid]], /* 23 = setuid */  &lt;br/&gt;
2936&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:getuid|getuid]], /* 24 = getuid */  &lt;br/&gt;
2937&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:stime|stime]], /* 25 = stime */  &lt;br/&gt;
2938&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3, &[[code:ptrace|ptrace]], /* 26 = ptrace */  &lt;br/&gt;
2939&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 27 = x */  &lt;br/&gt;
2940&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:fstat|fstat]], /* 28 = fstat */  &lt;br/&gt;
2941&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 29 = x */  &lt;br/&gt;
2942&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:nullsys|nullsys]],    /* inoperative  /* 30 = [[code:smdate|smdate]] */  &lt;br/&gt;
2943&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:stty|stty]], /* 31 = stty */  &lt;br/&gt;
2944&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:gtty|gtty]], /* 32 = gtty */  &lt;br/&gt;
2945&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 33 = x */  &lt;br/&gt;
2946&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nice|nice]], /* 34 = nice */  &lt;br/&gt;
2947&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:sslep|sslep]], /* 35 = sleep */  &lt;br/&gt;
2948&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:sync|sync]], /* 36 = sync */  &lt;br/&gt;
2949&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:kill|kill]], /* 37 = kill */  &lt;br/&gt;
2950&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:getswit|getswit]], /* 38 = switch */ &lt;br/&gt;
2951&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 39 = x */ &lt;br/&gt;
2952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 40 = x */ &lt;br/&gt;
2953&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:dup|dup]], /* 41 = dup */ &lt;br/&gt;
2954&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:pipe|pipe]], /* 42 = pipe */ &lt;br/&gt;
2955&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, &[[code:times|times]], /* 43 = times */ &lt;br/&gt;
2956&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4, &[[code:profil|profil]], /* 44 = prof */ &lt;br/&gt;
2957&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 45 = tui */ &lt;br/&gt;
2958&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:setgid|setgid]], /* 46 = setgid */ &lt;br/&gt;
2959&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:getgid|getgid]], /* 47 = getgid */ &lt;br/&gt;
2960&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2, &[[code:ssig|ssig]], /* 48 = sig */ &lt;br/&gt;
2961&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 49 = x */ &lt;br/&gt;
2962&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 50 = x */ &lt;br/&gt;
2963&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 51 = x */ &lt;br/&gt;
2964&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 52 = x */ &lt;br/&gt;
2965&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 53 = x */ &lt;br/&gt;
2966&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 54 = x */ &lt;br/&gt;
2967&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 55 = x */ &lt;br/&gt;
2968&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 56 = x */ &lt;br/&gt;
2969&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 57 = x */ &lt;br/&gt;
2970&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 58 = x */ &lt;br/&gt;
2971&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 59 = x */ &lt;br/&gt;
2972&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 60 = x */ &lt;br/&gt;
2973&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 61 = x */ &lt;br/&gt;
2974&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 62 = x */ &lt;br/&gt;
2975&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, &[[code:nosys|nosys]], /* 63 = x */ &lt;br/&gt;
2976&nbsp;}; &lt;br/&gt;
2977&nbsp;/* ------------------------- */ &lt;br/&gt;
2978 &lt;br/&gt;
2979 &lt;br/&gt;
2980 &lt;br/&gt;
2981 &lt;br/&gt;
2982 &lt;br/&gt;
2983 &lt;br/&gt;
2984 &lt;br/&gt;
2985 &lt;br/&gt;
2986 &lt;br/&gt;
2987 &lt;br/&gt;
2988 &lt;br/&gt;
2989 &lt;br/&gt;
2990 &lt;br/&gt;
2991 &lt;br/&gt;
2992 &lt;br/&gt;
2993 &lt;br/&gt;
2994 &lt;br/&gt;
2995 &lt;br/&gt;
2996 &lt;br/&gt;
2997 &lt;br/&gt;
2998 &lt;br/&gt;
2999 &lt;br/&gt;
&lt;/div&gt;
===Ref===
*[[系统调用]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:sysent.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:systm.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>|
===Source===
&lt;div class="wikicode"&gt;
0200 /* various global variables */&lt;br/&gt;
0201&lt;br/&gt;
0202 char canonb[CANBSIZ]; /* buffer for erase and kill */ &lt;br/&gt;
0203 int coremap[CMAPSIZ]; /* space for core allocation */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*内存 空闲空间管理结构，参看[[空闲块管理]]
&lt;/div&gt;
0204 int swapmap[SMAPSIZ]; /* space for swap allocation */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*盘交换区 空闲空间管理结构，参看[[空闲块管理]]
&lt;/div&gt;
0205&lt;br/&gt;
0206 int *rootdir; /* pointer to inode of root directory */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 根目录 的[[code:struct inode|inode块]]
&lt;/div&gt;
0207&lt;br/&gt;
0208 int cputype; /* type of cpu =40, 45, or 70 */ &lt;br/&gt;
0209&lt;br/&gt;
0210 int execnt; /* number of processes in exec */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*执行[[code:exec|exec]]的进程数
&lt;/div&gt;
0211&lt;br/&gt;
0212 int lbolt; /* time of day in 60th not in time */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*在 [[code:clock|clock]] 中使用，作为已经过的时钟滴答数
&lt;/div&gt;
0213 int time[2]; /* time in sec from 1970 */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*系统时间，从1970年起始的秒数
&lt;/div&gt;
0214 int tout[2]; /* time of day of next sleep */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
详见[[睡眠原因#tout|睡眠原因]]
&lt;/div&gt;
0215&lt;br/&gt;
0216 int mpid; /* generic for unique process id’s */&lt;br/&gt;
0217&lt;br/&gt;
0218 char runin; /* scheduling flag */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*用于表示盘交换区上有进程想调入内存但无法调入的标志
&lt;/div&gt;
0219 char runout; /* scheduling flag */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*用于表示盘交换区上没有可以调入内存的就绪进程的标志
&lt;/div&gt;
0220 char runrun; /* scheduling flag */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*用于 [[进程调度]]，申请 [[进程调度]] 的标志
&lt;/div&gt;
0221&lt;br/&gt;
0222 char curpri; /* more scheduling */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*当前进程 的优先级
&lt;/div&gt;
0223&lt;br/&gt;
0224 int maxmem; /* actual max memory per process */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*每进程 能 使用的最大内存块数
&lt;/div&gt;
0225&lt;br/&gt;
0226 int *lks; /* pointer to clock device */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*指向 时钟发生器 状态/控制 寄存器
*参看 [[时钟]]
&lt;/div&gt;
0227&lt;br/&gt;
0228 int rootdev; /* dev of root see conf.c */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*根设备
&lt;/div&gt;
0229 int swapdev; /* dev of swap see conf.c */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*盘交换区 设备
&lt;/div&gt;
0230&lt;br/&gt;
0231 int swplo; /* block number of swap space */ &lt;br/&gt;
0232 int nswap; /* size of swap space */ &lt;br/&gt;
0233&lt;br/&gt;
0234 int updlock; /* lock for sync */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*函数[[code:update|update]]的锁标识
&lt;/div&gt;
0235 int rablock; /* block to be read ahead */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*要预读的磁盘块
&lt;/div&gt;

0236&lt;br/&gt;
0237 char regloc[]; /* locs. of saved user registers&lt;br/&gt;
0238 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(see trap.c) */ &lt;br/&gt;
0239&lt;br/&gt;
0240&lt;br/&gt;
0241 /* ------------------------- */ &lt;br/&gt;
0242&lt;br/&gt;
0243&lt;br/&gt;
0244&lt;br/&gt;
0245&lt;br/&gt;
0246&lt;br/&gt;
0247&lt;br/&gt;
0248&lt;br/&gt;
0249&lt;br/&gt;
0250&lt;br/&gt;
0251 /* -------------------------*/ &lt;br/&gt;
0252&lt;br/&gt;
0253 /* The callout structure is for a routine&lt;br/&gt;
0254 * arranging to be called by the the clock interrupt&lt;br/&gt;
0255 * (see clock.c), with a specified argument,&lt;br/&gt;
0256 * within a specified amount of time.&lt;br/&gt;
0257 * It is used, for example, to time tab delays&lt;br/&gt;
0258 * on teletypes. */&lt;br/&gt;
0259&lt;br/&gt;
0260 struct callo&lt;br/&gt;
0261 {&lt;br/&gt;
0262 &nbsp;&nbsp;&nbsp;&nbsp;int c_time; /* incremental time */&lt;br/&gt;
&lt;div class="wikinote"&gt;
*相邻事件 间隔的时钟滴答数
&lt;/div&gt;
0263 &nbsp;&nbsp;&nbsp;&nbsp;int c_arg; /* argument to routine */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*事件函数的参数
&lt;/div&gt;
0264 &nbsp;&nbsp;&nbsp;&nbsp;int (*c_func)(); /* routine */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*事件函数
&lt;/div&gt;
0265 } callout[NCALL];&lt;br/&gt;
&lt;div class="wikinote"&gt;
*事件执行链表(由[[code:clock|clock]]调用，按时间执行事件)
&lt;/div&gt;
0266 /* -------------------------*/ &lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:systm.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:text.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
4350 #&lt;br/&gt;
4351 #include "../param.h"&lt;br/&gt;
4352 #include "../systm.h"&lt;br/&gt;
4353 #include "../user.h"&lt;br/&gt;
4354 #include "../proc.h"&lt;br/&gt;
4355 #include "../text.h"&lt;br/&gt;
4356 #include "../inode.h"&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:text.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:trap.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
2650 #&lt;br/&gt;
2651 #include "../param.h"&lt;br/&gt;
2652 #include "../systm.h"&lt;br/&gt;
2653 #include "../user.h"&lt;br/&gt;
2654 #include "../proc.h"&lt;br/&gt;
2655 #include "../reg.h"&lt;br/&gt;
2656 #include "../seg.h"&lt;br/&gt;
2657&lt;br/&gt;
2658 #define    EBIT    1 /* user error bit in PS: C-bit */ &lt;br/&gt;
2659 #define    UMODE   0170000 /* user-mode bits in PS word */&lt;br/&gt;
2660 #define    SETD    0170011 /* SETD instruction */&lt;br/&gt;
2661 #define    SYS     0104400 /* sys (trap) instruction */&lt;br/&gt;
2662 #define    USER    020     /* user-mode flag added to dev */&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:trap.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:tty.c</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
8100&nbsp;#  /* general TTY subroutines */ &lt;br/&gt;
8101 &lt;br/&gt;
8102&nbsp;#include "../param.h" &lt;br/&gt;
8103&nbsp;#include "../systm.h" &lt;br/&gt;
8104&nbsp;#include "../user.h" &lt;br/&gt;
8105&nbsp;#include "../tty.h" &lt;br/&gt;
8106&nbsp;#include "../proc.h" &lt;br/&gt;
8107&nbsp;#include "../inode.h" &lt;br/&gt;
8108&nbsp;#include "../file.h" &lt;br/&gt;
8109&nbsp;#include "../reg.h" &lt;br/&gt;
8110&nbsp;#include "../conf.h" &lt;br/&gt;
8111 &lt;br/&gt;
8112&nbsp;/* Input mapping table-- if an entry is non-zero, when the  &lt;br/&gt;
8113&nbsp;&nbsp;* corresponding character is typed preceded by "\" the &lt;br/&gt;
8114&nbsp;&nbsp;* escape sequence is replaced by the table value. &lt;br/&gt;
8115&nbsp;&nbsp;* Mostly used for upper-case only terminals. &lt;br/&gt;
8116&nbsp;&nbsp;*/ &lt;br/&gt;
8117&nbsp;char maptab[] &lt;br/&gt;
8118&nbsp;{ &lt;br/&gt;
8119&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,004,000,000,000, &lt;br/&gt;
8120&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,000,000,000,000, &lt;br/&gt;
8121&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,000,000,000,000, &lt;br/&gt;
8122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,000,000,000,000, &lt;br/&gt;
8123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,’&lt;nowiki&gt;|&lt;/nowiki&gt;’,000,’#’,000,000,000,’‘’, &lt;br/&gt;
8124&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;’{’,’}’,000,000,000,000,000,000, &lt;br/&gt;
8125&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,000,000,000,000, &lt;br/&gt;
8126&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,000,000,000,000, &lt;br/&gt;
8127&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;’@’,000,000,000,000,000,000,000, &lt;br/&gt;
8128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,000,000,000,000, &lt;br/&gt;
8129&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,000,000,000,000, &lt;br/&gt;
8130&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,000,000,000,000,000,’~’,000, &lt;br/&gt;
8131&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;000,’A’,’B’,’C’,’D’,’E’,’F’,’G’, &lt;br/&gt;
8132&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;’H’,’I’,’J’,’K’,’L’,’M’,’N’,’O’, &lt;br/&gt;
8133&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;’P’,’Q’,’R’,’S’,’T’,’U’,’V’,’W’, &lt;br/&gt;
8134&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;’X’,’Y’,’Z’,000,000,000,000,000, &lt;br/&gt;
8135&nbsp;}; &lt;br/&gt;
8136&nbsp;/* ------------------------- */ &lt;br/&gt;
8137&nbsp;/* The actual structure of a clist block manipulated by &lt;br/&gt;
8138&nbsp;&nbsp;* getc and putc (mch.s) &lt;br/&gt;
8139&nbsp;&nbsp;*/ &lt;br/&gt;
8140&nbsp;struct cblock { &lt;br/&gt;
8141&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct cblock *c_next; &lt;br/&gt;
8142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char info[6]; &lt;br/&gt;
8143&nbsp;}; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*字符缓存基本块 结构
&lt;/div&gt;
8144&nbsp;/* ------------------------- */ &lt;br/&gt;
8145&nbsp;/* The character lists-- space for 6*NCLIST characters */   &lt;br/&gt;
8146&nbsp;&nbsp;&nbsp;&nbsp;struct cblock cfree[NCLIST]; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*字符缓存
&lt;/div&gt;
8147 &lt;br/&gt;
8148&nbsp;/* List head for unused character blocks. */ &lt;br/&gt;
8149&nbsp;&nbsp;&nbsp;&nbsp;struct cblock *cfreelist; &lt;br/&gt;
&lt;div class="wikinote"&gt;
*[[自由字符缓存队列]] 队列头
&lt;/div&gt;
8150&nbsp;/* structure of device registers for KL, DL, and DC &lt;br/&gt;
8151&nbsp;&nbsp;* interfaces-- more particularly, those for which the &lt;br/&gt;
8152&nbsp;&nbsp;* SSTART bit is off and can be treated by general routines &lt;br/&gt;
8153&nbsp;&nbsp;* (that is, not DH). &lt;br/&gt;
8154&nbsp;&nbsp;*/ &lt;br/&gt;
8155&nbsp;struct { &lt;br/&gt;
8156&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int ttrcsr; &lt;br/&gt;
8157&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int ttrbuf; &lt;br/&gt;
8158&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int tttcsr; &lt;br/&gt;
8159&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int tttbuf; &lt;br/&gt;
8160&nbsp;}; &lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:tty.c by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:tty.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
7945&lt;br/&gt;
7946&lt;br/&gt;
7947&nbsp;char partab[]; /* ASCII table: parity, character class */  &lt;br/&gt;
&lt;div class="wikinote"&gt;
*LIONS源代码中并没有partab的定义，在此给出
&lt;div class="wikiheadcode"&gt;
char partab[] {&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0001,0201,0201,0001,0201,0001,0001,0201,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0202,0004,0003,0205,0005,0206,0201,0001,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0201,0001,0001,0201,0001,0201,0201,0001,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0001,0201,0201,0001,0201,0001,0001,0201,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0200,0000,0000,0200,0000,0200,0200,0000,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0000,0200,0200,0000,0200,0000,0000,0200,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0000,0200,0200,0000,0200,0000,0000,0200,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0200,0000,0000,0200,0000,0200,0200,0000,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0200,0000,0000,0200,0000,0200,0200,0000,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0000,0200,0200,0000,0200,0000,0000,0200,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0000,0200,0200,0000,0200,0000,0000,0200,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0200,0000,0000,0200,0000,0200,0200,0000,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0000,0200,0200,0000,0200,0000,0000,0200,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0200,0000,0000,0200,0000,0200,0200,0000,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0200,0000,0000,0200,0000,0200,0200,0000,&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;0000,0200,0200,0000,0200,0000,0000,0201&lt;br/&gt;
};&lt;br/&gt;
&lt;/div&gt;
&lt;/div&gt;
7948&lt;br/&gt;
7949&lt;br/&gt;
7950&lt;br/&gt;
7951&nbsp;#define    TTIPRI  10&lt;br/&gt;
7952&nbsp;#define    TTOPRI  20&lt;br/&gt;
7953&lt;br/&gt;
7954&nbsp;#define    CERASE  ’#’  /* default special characters */&lt;br/&gt;
7955&nbsp;#define    CEOT    004&lt;br/&gt;
7956&nbsp;#define    CKILL   ’@’&lt;br/&gt;
7957&nbsp;#define    CQUIT   034  /* FS, cntl shift L */&lt;br/&gt;
7958&nbsp;#define    CINTR   0177 /* DEL */&lt;br/&gt;
7959&lt;br/&gt;
7960&nbsp;/* limits */&lt;br/&gt;
7961&nbsp;#define    TTHIWAT 50&lt;br/&gt;
7962&nbsp;#define    TTLOWAT 30&lt;br/&gt;
7963&nbsp;#define    TTYHOG  256&lt;br/&gt;
7964&lt;br/&gt;
7965&nbsp;/* modes */&lt;br/&gt;
7966&nbsp;#define    HUPCL   01&lt;br/&gt;
7967&nbsp;#define    XTABS   02&lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 不(能)对 制表符 做处理
&lt;/div&gt;
7968&nbsp;#define    LCASE   04&lt;br/&gt;
&lt;div class="wikinote"&gt;
*tty 只支持 64字符 ASCII 子集(引自 LIONS 源代码分析)
&lt;/div&gt;
7969&nbsp;#define    ECHO    010&lt;br/&gt;
&lt;div class="wikinote"&gt;
*全双工模式，输入字符回显
&lt;/div&gt;
7970&nbsp;#define    CRMOD   020&lt;br/&gt;
&lt;div class="wikinote"&gt;
*换行符模式
*在输入中，将 \r 代换成 <br/>\n
*在输出中，将 <br/>\n 代换成 \r<br/>\n
&lt;/div&gt;
7971&nbsp;#define    RAW     040&lt;br/&gt;
&lt;div class="wikinote"&gt;
*原始模式
*将输入字符按原样送给程序，不进行“擦除”和“擦除行”处理，或对于反斜线字符的调整(引自LIONS源代码分析)
&lt;/div&gt;
7972&nbsp;#define    ODDP    0100&lt;br/&gt;
7973&nbsp;#define    EVENP   0200&lt;br/&gt;
7974&nbsp;#define    NLDELAY 001400&lt;br/&gt;
7975&nbsp;#define    TBDELAY 006000&lt;br/&gt;
7976&nbsp;#define    CRDELAY 030000&lt;br/&gt;
7977&nbsp;#define    VTDELAY 040000&lt;br/&gt;
7978&lt;br/&gt;
7979&nbsp;/* Hardware bits */&lt;br/&gt;
7980&nbsp;#define    DONE    0200&lt;br/&gt;
7981&nbsp;#define    IENABLE 0100&lt;br/&gt;
7982&lt;br/&gt;
7983&nbsp;/* Internal state bits */&lt;br/&gt;
7984&nbsp;#define    TIMEOUT 01 /* Delay timeout in progress */ &lt;br/&gt;
7985&nbsp;#define    WOPEN   02 /* Waiting for open to &lt;br/&gt;
7986&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;complete */ &lt;br/&gt;
7987&nbsp;#define    ISOPEN  04 /* Device is open */ &lt;br/&gt;
7988&nbsp;#define    SSTART  010     /* Has special start routine&lt;br/&gt;
7989&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at addr */ &lt;br/&gt;
&lt;div class="wikinote"&gt;
*标志，表明tty设备有特殊的启动函数，由[[code:struct tty|tty.t_addr]]指向
&lt;/div&gt;
7990&nbsp;#define    CARR_ON 020     /* Software copy of&lt;br/&gt;
7991&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;carrier-present */ &lt;br/&gt;
7992&nbsp;#define    BUSY    040     /* Output in progress */&lt;br/&gt;
7993&nbsp;#define    ASLEEP  0100    /* Wakeup when output done */&lt;br/&gt;
7994&lt;br/&gt;
7995&lt;br/&gt;
7996&lt;br/&gt;
7997&lt;br/&gt;
7998&lt;br/&gt;
7999&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:tty.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>File:user.h</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>
===Source===
&lt;div class="wikicode"&gt;
0461&lt;br/&gt;
0462&nbsp;/* u_error codes */&lt;br/&gt;
0463&nbsp;/* See section "INTRO(II)" of &lt;br/&gt;
0464&nbsp;&nbsp;* the UNIX Programmer’s manual &lt;br/&gt;
0465&nbsp;&nbsp;* for the meanings of these codes. */ &lt;br/&gt;
0466 #define    EFAULT  106&lt;br/&gt;
0467 #define    EPERM   1&lt;br/&gt;
0468 #define    ENOENT  2&lt;br/&gt;
0469 #define    ESRCH   3&lt;br/&gt;
0470 #define    EINTR   4&lt;br/&gt;
0471 #define    EIO     5&lt;br/&gt;
0472 #define    ENXIO   6&lt;br/&gt;
0473 #define    E2BIG   7&lt;br/&gt;
0474 #define    ENOEXEC 8&lt;br/&gt;
0475 #define    EBADF   9&lt;br/&gt;
0476 #define    ECHILD  10&lt;br/&gt;
0477 #define    EAGAIN  11&lt;br/&gt;
0478 #define    ENOMEM  12&lt;br/&gt;
0479 #define    EACCES  13&lt;br/&gt;
0480 #define    ENOTBLK 15&lt;br/&gt;
0481 #define    EBUSY   16&lt;br/&gt;
0482 #define    EEXIST  17&lt;br/&gt;
0483 #define    EXDEV   18&lt;br/&gt;
0484 #define    ENODEV  19&lt;br/&gt;
0485 #define    ENOTDIR 20&lt;br/&gt;
0486 #define    EISDIR  21&lt;br/&gt;
0487 #define    EINVAL  22&lt;br/&gt;
0488 #define    ENFILE  23&lt;br/&gt;
0489 #define    EMFILE  24&lt;br/&gt;
0490 #define    ENOTTY  25&lt;br/&gt;
0491 #define    ETXTBSY 26&lt;br/&gt;
0492 #define    EFBIG   27&lt;br/&gt;
0493 #define    ENOSPC  28&lt;br/&gt;
0494 #define    ESPIPE  29&lt;br/&gt;
0495 #define    EROFS   30&lt;br/&gt;
0496 #define    EMLINK  31&lt;br/&gt;
0497 #define    EPIPE   32&lt;br/&gt;
0498&lt;br/&gt;
0499&lt;br/&gt;
&lt;/div&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page File:user.h by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>I/O字符缓存队列</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[字符设备管理]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page I/O字符缓存队列 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>KISA</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*KISA 是 [[Pdp11:内存管理|pdp11 内存管理机制 提供的 核心态页寄存器组]]
*KISA6 指向 现行进程的 [[进程图像|PPDA区]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page KISA by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>KISA6寻址</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*KISA6 逻辑上 指向 现行进程的PPDA区
*进程的 [[code:user|user]]结构等，地址都是虚地址，需要经过[[pdp11:内存管理|pdp11的虚实地址转换]]
**转换过程中，使用KISA6寻址，所以可以寻址到现行进程的[[code:user|user]]结构
*进程下台时，KISA6 保存到[[code:proc|proc.p_addr]]
*进程上台时，[[code:proc|proc.p_addr]] 直接恢复到 KISA6&lt;br/&gt;上台进程的 [[code:user|user]]结构 通过KISA6，经过[[pdp11:内存管理|pdp11的虚实地址转换]]进行寻址

=举例=
寻址 [[code:user|当前进程的user结构u]]
*[[code:user|u]] 载点在 [[file:m40.s|m40.s]]，值为140000
*u=140000 为虚地址，经过[[pdp11:内存管理|虚实地址转换]]，实地址为KISA6第一块第一个字节，即现行进程的PPDA区首址([[code:user|user]]结构在PPDA区首)

=讨论=
*操作系统 只能使用 虚地址，经过[[pdp11:内存管理|pdp11的虚实地址转换]]，进行寻址
*而 [[code:proc|proc.p_addr]] 直接管理 实地址(页起始块号)，破坏了以上规则，途径如下：
**在UNIX 初始化时 ([[code:main|main]])，通过读取KISA寄存器的值，将内存实地址载入[[空闲块管理|coremap]]进行管理
**创建进程时，从[[空闲块管理|coremap]]分配地址，直接返回内存实地址，赋予[[code:proc|proc.p_addr]]
*通过以上途径，操作系统才突破了使用虚地址的限制</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page KISA6寻址 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>PS</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT[[处理机状态字]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page PS by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ADC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===ADC&lt;br/&gt;ADCB[字节版本]
===Code===■055DD
===Operation===(dst)← (dst)+(C)
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 (dst)=077777 且 (C)=1，则置位&lt;br/&gt;否则，清位
===Codec===若 (dst)=177777 且 (C)=1，则置位&lt;br/&gt;否则，清位
===Description===对目标位置的数据处理进位，将进位加入目标
===Example===进行两个字长的加运算，A1A0 + B1B0&lt;br/&gt;ADD A0,B0 ;计算低位字加&lt;br/&gt;ADC B1 ;处理进位&lt;br/&gt;ADD A1,B1 ;计算高位字加
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ADC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ADCB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:ADC]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ADCB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ADD</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===ADD
===Code===06SSDD
===Operation===(dst) ← (src) + (dst)
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 运算过程存在溢出，则置位&lt;br/&gt;否则，清位&lt;br/&gt;说明:存在溢出的情况是两个操作数符号相同，且运算结果与其异号
===Codec===若 运算结果的符号位被改变，则置位&lt;br/&gt;否则，清位
===Description=== 将源地址的数据和目标地址的数据相加，将结果送入目标地址
===Example===加到寄存器：ADD 20 , R0&lt;br/&gt;加到内存：ADD R1 , XXX&lt;br/&gt;寄存器加寄存器：ADD R1 , R2&lt;br/&gt;内存加内存：ADD @#17750 , XXX&lt;br/&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ADD by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ASH</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===ASH
===Code===072RSS
===Operation===R ← R的二进制形式向左/向右移动NN位&lt;br/&gt;NN = (src)二进制形式的低6位
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 按位移动过程中，寄存器符号位改变，则置位&lt;br/&gt;否则，清位
===Codec===等于 最后一位移出寄存器的数位
===Description=== 根据源地址的数据，将目标寄存器的数据按位向左/向右移动指定位数&lt;br/&gt;移动位数 = (src)二进制形式的低6位，范围为 -32..31&lt;br/&gt;移动位数为负，移动方向向右&lt;br/&gt;移动位数为正，移动方向向左
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Asl.png|frame|center|向左移动模式"/></p>&lt;br/&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Asr.png|frame|center|向右移动模式"/></p>&lt;br/&gt;

&lt;table class="wikitable" border="1" cellspacing="0" align="center" style="width:60%"&gt;
&lt;caption&gt;&lt;b&gt;移动方式举例&lt;/b&gt;&lt;/caption&gt;
&lt;tr&gt;
&lt;th width="200px"&gt;(src)二进制形式的低六位&lt;/th&gt;
&lt;th&gt;移动动作&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 011111&lt;/td&gt;
&lt;td&gt; 左移31位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 000001&lt;/td&gt;
&lt;td&gt; 左移1位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 111111&lt;/td&gt;
&lt;td&gt; 右移1位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 100000&lt;/td&gt;
&lt;td&gt; 右移32位&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;br/&gt;
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Ash_r0_r3.png|frame|center|ASH_R0_,_R3"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ASH by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ASHC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===ASHC
===Code===073RSS
===Operation===R,R∨1 ← R,R∨1 双字长数据的二进制形式向左/向右移动NN位&lt;br/&gt;NN = (src)二进制形式的低6位
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 按位移动过程中，寄存器符号位改变，则置位&lt;br/&gt;否则，清位
===Codec===始终等于被移出寄存器的数位
===Description=== 根据源地址的数据，将目标寄存器(及其后继寄存器)的数据按位向左/向右移动指定位数&lt;br/&gt;移动位数 = (src)二进制形式的低6位，范围为 -32..31&lt;br/&gt;移动位数为负，移动方向向右&lt;br/&gt;移动位数为正，移动方向向左&lt;br/&gt;若 寄存器选取奇地址寄存器，则R,RV1指向同一寄存器，移位方向若为右移，则相当于单个字长寄存器循环移位
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Ashc_left.png|frame|center|向左移动模式"/></p>&lt;br/&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Ashc_right.png|frame|center|向右移动模式"/></p>&lt;br/&gt;

&lt;table class="wikitable" border="1" cellspacing="0" align="center" style="width:60%"&gt;
&lt;caption&gt;&lt;b&gt;移动方式举例&lt;/b&gt;&lt;/caption&gt;
&lt;tr&gt;
&lt;th width="200px"&gt;(src)二进制形式的低六位&lt;/th&gt;
&lt;th&gt;移动动作&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 011111&lt;/td&gt;
&lt;td&gt; 左移31位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 000001&lt;/td&gt;
&lt;td&gt; 左移1位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 111111&lt;/td&gt;
&lt;td&gt; 右移1位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 100000&lt;/td&gt;
&lt;td&gt; 右移32位&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ASHC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ASL</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===ASL&lt;br/&gt;ASLB[字节版本]
===Code===■063DD
===Operation===(dst)← (dst)按位左移一位
===Coden===若 运算结果&lt;0 （最高位[标志位]被置位），则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===等于 运算结束后标志位N和C的不可兼或[Exclusive OR]
===Codec===等于 运算前目标地址的数据的最高位
===Description===将目标位置的数据按位左移一位&lt;br/&gt;运算后的最低位通过0来补齐&lt;br/&gt;标志位V和C已经不再代表通常使用的含义
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Asl.png|frame|center|ASL_模型&lt;br/&gt;ASLB_的模型类似"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ASL by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ASLB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:ASL]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ASLB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ASR</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===ASR&lt;br/&gt;ASRB[字节版本]
===Code===■062DD
===Operation===(dst)← (dst)按位右移一位
===Coden===若 运算结果&lt;0 （最高位[标志位]被置位），则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===等于 运算结束后标志位N和C的不可兼或[Exclusive OR]
===Codec===等于 运算前目标地址的数据的最低位
===Description===将目标位置的数据按位右移一位&lt;br/&gt;运算后的最高位通过复制运算前的最高位来补齐&lt;br/&gt;标志位V和C已经不再代表通常使用的含义
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Asr.png|frame|center|ASR_模型&lt;br/&gt;ASRB_的模型类似"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ASR by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ASRB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:ASR]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ASRB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BCC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BCC
===Code===103000 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if C = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位C未被置位，进行程序控制转移&lt;br/&gt;互补操作为[[pdp11:BCS|BCS]]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BCC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BCS</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BCS
===Code===103400 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if C = 1
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位C被置位，进行程序控制转移&lt;br/&gt;互补操作为[[pdp11:BCC|BCC]]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BCS by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BEQ</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BEQ
===Code===001400 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if Z = 1
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位Z被置位，进行程序控制转移&lt;br/&gt;互补操作为[[pdp11:BNE|BNE]]
===Example===CMP A , B ;比较A , B&lt;br/&gt;BEQ C ;若 A　=　B，则程序控制跳转到C
----
ADD A ,B ;A , B相加&lt;br/&gt;BEQ C ;若　A + B = 0，则程序控制跳转到C
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BEQ by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BGE</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BGE
===Code===002000 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if N ∨ V = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位N未被置位且标志位V未被置位，进行程序控制转移&lt;br/&gt;互补操作为[[pdp11:BLT|BLT]]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BGE by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BGT</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BGT
===Code===003000 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if Z ∨ ( N ¤ V ) = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位满足 Z ∨ ( N ¤ V ) = 0 ，进行程序控制转移 &lt;br/&gt;BGT跟指令[[pdp11:BGE|BGE]]类似，只是对0结果不发生程序控制跳转
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BGT by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BHI</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BHI
===Code===101000 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if Z = 0 and C = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位满足 Z = 0 and C = 0 ，进行程序控制转移 &lt;br/&gt;若指令位于[[pdp11:CMP|CMP]]后，则若(src)表示的无符号数 &gt; (dst)表示的无符号数，发生跳转
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BHI by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BHIS</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BHIS
===Code===103000 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if C = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位满足 C = 0 ，进行程序控制转移&lt;br/&gt;指令BHIS与[[pdp11:BCC|BCC]]完全相同
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BHIS by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BIC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BIC&lt;br/&gt;BICB[字节版本]
===Code===■4SSDD
===Operation===(dst) ← ~(src)∧(dst)
===Coden===若 运算结果&lt;0（最高位[符号位]被置位），则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===无影响
===Description=== 按源地址的数据的指示，将目标地址的数据的二进制形式的某些数位清零
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Bic_r3_r4.png|frame|center|BIC_R3,R4&lt;br/&gt;根据R3的数据的指示，清零了R4的数据的特定位(末第3，4，5，8，10位)"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BIC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BICB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:BIC]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BICB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BIS</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BIS&lt;br/&gt;BISB[字节版本]
===Code===■5SSDD
===Operation===(dst) ← (src)∨(dst)
===Coden===若 运算结果&lt;0（最高位[符号位]被置位），则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===无影响
===Description=== 将源地址的数据和目标地址的数据做逻辑或运算，将结果送入目标地址&lt;br/&gt;[按源地址的数据的指示，将目标地址的数据的二进制形式的某些数位置位]
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Bis_r0_r1.png|frame|center|BIS_R0,R1&lt;br/&gt;根据R0的数据的指示，置位了R1的数据的特定位(末第3，4，5，8，10位)"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BIS by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BISB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:BIS]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BISB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BIT</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BIT&lt;br/&gt;BITB[字节版本]
===Code===■3SSDD
===Operation===(src)∧(dst)
===Coden===若 运算结果&lt;0（最高位[符号位]被置位），则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===无影响
===Description=== 将源地址的数据和目标地址的数据做逻辑与运算，并置相应标志位，原地址的数据与目标地址的数据并不发生改变
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Bit_30_r3.png|frame|center|BIT_#30,R3&lt;br/&gt;若_标志位Z被置，则A=0_且_B=0&lt;br/&gt;否则，不然&lt;br/&gt;常用于测试目标地址某些数位是否全为0"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BIT by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BITB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:BIT]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BITB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BLE</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BLE
===Code===003400 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if Z ∨ ( N ¤ V ) = 1
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位满足 Z ∨ ( N ¤ V ) = 1 ，进行程序控制转移 &lt;br/&gt;BLE跟指令[[pdp11:BLT|BLT]]类似，只是对0结果发生程序控制跳转
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BLE by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BLO</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BLO
===Code===103400 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if C = 1
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位满足 C = 1 ，进行程序控制转移&lt;br/&gt;指令BLO与[[pdp11:BCS|BCS]]完全相同
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BLO by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BLOS</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BLOS
===Code===101400 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if C ∨ Z = 1 
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位满足 C ∨ Z = 1 ，进行程序控制转移 &lt;br/&gt;互补操作为[[pdp11:BHI|BHI]]&lt;br/&gt;若指令位于[[pdp11:CMP|CMP]]后，则若(src)表示的无符号数 &lt;= (dst)表示的无符号数，发生跳转
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BLOS by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BLT</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BLT
===Code===002400 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if N ¤ V = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位N被置位或[不可兼或]标志位V被置位，进行程序控制转移 &lt;br/&gt;互补操作为[[pdp11:BGE|BGE]]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BLT by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BMI</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BMI
===Code===100400+ 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if N = 1
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位N被置位，进行程序控制转移
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BMI by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BNE</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BNE
===Code===001000 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if Z = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位Z未被置位，进行程序控制转移&lt;br/&gt;互补操作为[[pdp11:BEQ|BEQ]]
===Example===CMP A , B ;比较A , B&lt;br/&gt;BNE C ;若 A　≠　B，则程序控制跳转到C
----
ADD A ,B ;A , B相加&lt;br/&gt;BNE C ;若　A + B ≠ 0，则程序控制跳转到C
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BNE by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BPL</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BPL
===Code===100000+ 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if N = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位N未被置位，进行程序控制转移
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BPL by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BPT</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BPT
===Code===000003
===Operation===↓(SP) ← PS&lt;br/&gt;↓(SP) ← PC&lt;br/&gt;PC ← (14)&lt;br/&gt;PS ← (16)
===Coden===从 [[中断|中断向量]] 读取
===Codez===从 [[中断|中断向量]] 读取
===Codev===从 [[中断|中断向量]] 读取
===Codec===从 [[中断|中断向量]] 读取
===Description===执行断点陷入操作&lt;br/&gt;用于调试&lt;br/&gt;The user is cautioned against employing code 000003 in programs run under these debugging aids [ [[遗留问题]] ]
===Example===类似 [[pdp11:TRAP|TRAP]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BPT by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BR</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BR
===Code===000400 + 偏移[offset]
===Operation===PC ← PC + ( 2 * offset )
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===进行无条件程序控制转移，偏移范围 -128 ~ 127&lt;br/&gt;程序控制转移后新PC地址 = 指令执行时的PC地址 + (2 * 偏移) [ New PC address = updated PC + ( 2 * offset ) ]&lt;br/&gt;指令执行时的PC地址 = BR指令地址 + 2 [ Updated PC = address of branch instruction + 2 ]
===Example===设BR指令地址为500
&lt;table class="wikitable" border="1" cellspacing="0" align="center" style="width:80%"&gt;
&lt;tr&gt;
&lt;th width="200px"&gt;程序控制转移后新PC地址
&lt;/th&gt;&lt;th&gt;偏移代码
&lt;/th&gt;&lt;th&gt;偏移量
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 474
&lt;/td&gt;&lt;td&gt; 375 [ 11 111 101 ]( -3的补码形式 )
&lt;/td&gt;&lt;td&gt; -3
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 476
&lt;/td&gt;&lt;td&gt; 376
&lt;/td&gt;&lt;td&gt; -2
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 500
&lt;/td&gt;&lt;td&gt; 377
&lt;/td&gt;&lt;td&gt; -1
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 502
&lt;/td&gt;&lt;td&gt; 000
&lt;/td&gt;&lt;td&gt; 0
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 504
&lt;/td&gt;&lt;td&gt; 001
&lt;/td&gt;&lt;td&gt; +1
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 506
&lt;/td&gt;&lt;td&gt; 002
&lt;/td&gt;&lt;td&gt; +2
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BR by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BVC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BVC
===Code===102000+ 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if V = 0
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位V未被置位，进行程序控制转移&lt;br/&gt;互补操作为[[pdp11:BVS|BVS]]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BVC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:BVS</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===BVS
===Code===102400+ 偏移[offset]
===Operation===PC ← PC + ( 2 * offset ) if V = 1
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===若标志位V被置位，进行程序控制转移&lt;br/&gt;互补操作为[[pdp11:BVC|BVC]]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:BVS by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CCC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===CCC
===Code===000257
===Operation===Clear all CC's (condition codes)
===Coden===清
===Codez===清
===Codev===清
===Codec===清
===Description===清所有标志位  
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CCC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CLC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===CLC
===Code===000241
===Operation===Clear C
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===清
===Description===清标志位C 
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CLC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CLN</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===CLN
===Code===000250
===Operation===Clear N
===Coden===清
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===清标志位N 
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CLN by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CLR</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===CLR &lt;br/&gt;CLRB[字节版本]
===Code===■050DD
===Operation===(dst)←0
===Coden===清
===Codez===置
===Codev===清
===Codec===清
===Description===将目标位置的数据清零
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Clr_r1.png|frame|center|CLR_R1"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CLR by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CLRB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Pdp11:CLR]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CLRB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CLV</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===CLV
===Code===000242
===Operation===Clear V
===Coden===无影响
===Codez===无影响
===Codev===清
===Codec===无影响
===Description===清标志位V 
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CLV by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CLZ</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===CLZ
===Code===000244
===Operation===Clear Z
===Coden===无影响
===Codez===清
===Codev===无影响
===Codec===无影响
===Description===清标志位Z 
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CLZ by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CMP</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===CMP&lt;br/&gt;CMPB[字节版本]
===Code===■2SSDD
===Operation===(src)-(dst) [具体实现：(src) + ~(dst) + 1]
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 运算过程存在溢出，则置位&lt;br/&gt;否则，清位&lt;br/&gt;说明:存在溢出的情况是两个操作数符号相反，且运算结果与(dst)同号
===Codec===若 运算结果的符号位被改变，则清位&lt;br/&gt;否则，置位[ [[遗留问题]] ]
===Description=== 比较源地址的数据和目标地址的数据，并置相应标志位，原地址的数据与目标地址的数据并不发生改变
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CMP by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:CMPB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:CMP]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:CMPB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:COM</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===COM &lt;br/&gt;COMB[字节版本]
===Code===■051DD
===Operation===(dst)← ~(dst)
===Coden===若运算结果的最高位被置，则置位&lt;br/&gt;否则，清位
===Codez===若运算结果为零，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===置
===Description===将目标位置的数据按位取反
===Example===[[Image:Pdp11 instruction Com r0.png|frame|center|COM R0&lt;br/&gt;013333[8进制] = 000 001 011 011 011 011[2进制]&lt;br/&gt;164444[8进制] = 001 110 100 100 100 100[2进制](对16位取反)]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:COM by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:COMB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:COM]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:COMB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:DEC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===DEC&lt;br/&gt;DECB[字节版本]
===Code===■053DD
===Operation===(dst)← (dst)-1
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 (dst)=100000(运算将发生向下溢出[100000为有符号数负数最小数])，则置位&lt;br/&gt;否则，清位
===Codec===无影响
===Description===将目标位置的数据减1
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Dec_r5.png|frame|center|DEC_R5"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:DEC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:DECB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:DEC]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:DECB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:DIV</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===DIV
===Code===071RSS
===Operation===R , R∨1 ← R , R∨1 / (src)
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 (src)=0，或(R)的绝对值大于(src)的绝对值，则置位 [ [[遗留问题]] ]
===Codec===若 运算尝试除0，则置位&lt;br/&gt;否则，清位
===Description=== 将源地址的数据和目标地址(32位长)的数据相除，将结果送入目标地址&lt;br/&gt;R必须为偶地址&lt;br/&gt;运算结果 商送入R地址，余数送入R∨1地址
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Div_sharp_2_r0.png|frame|center|CLR_R0&lt;br/&gt;MOV_#20001_,_R1&lt;br/&gt;DIV_#2_,_R0"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:DIV by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:INC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===INC&lt;br/&gt;INCB[字节版本]
===Code===■052DD
===Operation===(dst)← (dst)+1
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 (dst)=077777(运算将发生向上溢出)，则置位&lt;br/&gt;否则，清位
===Codec===无影响
===Description===将目标位置的数据加1
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Inc_r2.png|frame|center|INC_R2"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:INC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:INCB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:INC]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:INCB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:IOT</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===IOT
===Code===000004
===Operation===↓(SP) ← PS&lt;br/&gt;↓(SP) ← PC&lt;br/&gt;PC ← (20)&lt;br/&gt;PS ← (22)
===Coden===从 [[中断|中断向量]] 读取
===Codez===从 [[中断|中断向量]] 读取
===Codev===从 [[中断|中断向量]] 读取
===Codec===从 [[中断|中断向量]] 读取
===Description===执行I/O陷入操作
===Example===类似 [[pdp11:TRAP|TRAP]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:IOT by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:JMP</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===JMP
===Code===0001DD
===Operation===PC ← (dst)
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===程序控制跳转到目标地址 [ [[遗留问题]] ]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:JMP by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:JSR</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===JSR
===Code===004RDD
===Operation===(tmp) ← (dst) (tmp是处理机内部寄存器)&lt;br/&gt;↓(SP) ← reg (reg的值入栈)&lt;br/&gt;reg ← PC (PC的值传入reg)&lt;br/&gt;PC ← (tmp) (PC指向指定子程序地址)
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===程序控制跳转到指定子程序并进行现场保护 &lt;br/&gt;JSR执行过程中，(reg)送入堆栈，旧PC值送入reg，指定子程序地址送入PC，完成向子程序的控制转移&lt;br/&gt;[ [[遗留问题]] ]
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Jsr_r5_sbr.png|frame|center|JSR_R5,SBR"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:JSR by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:MARK</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===MARK
===Code===0064NN
===Operation===SP ← SP + 2 * NN&lt;br/&gt;PC ← R5&lt;br/&gt;R5 ← (SP)↑
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===标记退栈位置，方便子程序返回时的退栈操作&lt;br/&gt;详见实例
===Example===进入子程序前进行如下操作保护现场：&lt;br/&gt;
&lt;table class="wikitable" border="1" cellspacing="0" align="center" style="width:90%"&gt;
&lt;tr&gt;
&lt;th&gt;指令
&lt;/th&gt;&lt;th&gt;说明
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; MOV R5 , -(SP)
&lt;/td&gt;&lt;td&gt; 旧R5入栈，为方便区分，标记为R5[0]
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; MOV P1 , -(SP)
&lt;/td&gt;&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ...
&lt;/td&gt;&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; MOV PN , -(SP)
&lt;/td&gt;&lt;td&gt; 共传入N个参数
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; MOV #MARKN , -(SP)
&lt;/td&gt;&lt;td&gt; MARK N&lt;b&gt;指令编码 [如0064NN]&lt;/b&gt;入栈，方便以后执行
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; MOV SP , R5
&lt;/td&gt;&lt;td&gt; 标记SP为SP[0]，标记R5为R5[1] (= SP[0])
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; JSR PC , SUB
&lt;/td&gt;&lt;td&gt; 转入子程序，标记当前PC为PC[0]，PC[0]入栈
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
此时，堆栈状态为<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Mark_1.png"/></p>&lt;br/&gt;
子程序代码：&lt;br/&gt;
&lt;table class="wikitable" border="1" cellspacing="0" align="center" style="width:90%"&gt;
&lt;tr&gt;
&lt;th&gt;指令
&lt;/th&gt;&lt;th&gt;说明
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SUB:
&lt;/td&gt;&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...
&lt;/td&gt;&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTS R5
&lt;/td&gt;&lt;td&gt;子程序返回，恢复现场
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
恢复现场的执行步骤:&lt;br/&gt;
#RTS操作：&lt;br/&gt;PC = R5[1] = SP[0]&lt;br/&gt;R5 = PC[0]
#由于PC指向SP[0]，使执行的操作为MARK N&lt;br/&gt;MARK N的操作：&lt;br/&gt;从堆栈退出所有参数(SP ← SP + 2 * NN)&lt;br/&gt;PC = R5 = PC[0]&lt;br/&gt;R5 = R5[0]
#现场恢复完毕，运用MARK N达到从堆栈方便地退出所有参数的目的

</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:MARK by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:MFPI</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===MFPI
===Code===0065SS
===Operation===(temp) ← (src)&lt;br/&gt;↓(SP) ← (temp) [ [[遗留问题]] ]
===Coden===若 (src) &lt; 0,则置位&lt;br/&gt;否则,清位
===Codez===若 (src) = 0,则置位&lt;br/&gt;否则,清位
===Codev===清
===Codec===无影响
===Description===从上一指令空间读取数据&lt;br/&gt;src从上一指令空间[先前态空间]寻址(由[[pdp11:处理机状态字|处理机状态字]]第13,12位决定)&lt;br/&gt;送入当前态空间(由[[pdp11:处理机状态字|处理机状态字]]第15,14位决定)的堆栈&lt;br/&gt;The address of the source operand is determined in the current address space. That is, the address is determined using the SP and memory segments determined by PS(bits 15,14).The address it self is then used in the previous mode (as determined by PS(bits 13,12) to get the source operand). This operand is then pushed on to the current R6 stack[ [[遗留问题]] ]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:MFPI by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:MOV</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===MOV&lt;br/&gt;MOVB[字节版本]
===Code===■1SSDD
===Operation===(dst)←(src)
===Coden===若 (src)&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 (src)=0，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===无影响
===Description===移动[复制]源地址的数据到目标地址&lt;br/&gt;The MOVB to a register(unique among byte instructions) extends the most significant bit of the low order byte(sign extension).[ [[遗留问题]] ]
===Example===MOV R1 , R3&lt;br/&gt;MOV XXX , R1&lt;br/&gt;MOV #20 , R0&lt;br/&gt;MOV @#20 , -(R6)&lt;br/&gt;MOV (R6)+ , @#177566&lt;br/&gt;MOVB @#177562 , @#177566&lt;br/&gt;关于例子的理解参考[[pdp11:寻址方式|寻址方式]]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:MOV by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:MOVB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:MOV]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:MOVB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:MTPI</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===MTPI
===Code===0066SS
===Operation===(temp) ← (SP)↑&lt;br/&gt;(dst) ← (temp)
===Coden===若 (src) &lt; 0,则置位&lt;br/&gt;否则,清位
===Codez===若 (src) = 0,则置位&lt;br/&gt;否则,清位
===Codev===清
===Codec===无影响
===Description===向上一指令空间写入数据&lt;br/&gt;从当前态空间(由[[pdp11:处理机状态字|处理机状态字]]第15,14位决定)的堆栈弹出字数据,送入上一指令空间[先前态空间]寻址(由[[pdp11:处理机状态字|处理机状态字]]第13,12位决定)&lt;br/&gt;The address of the destination operand is determined in the current address space. MTPI then pops a word off the current stack and stores that word in the destination address in the previous mode's(bits 13,12 of PS)[ [[遗留问题]] ]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:MTPI by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:MUL</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===MUL
===Code===070RSS
===Operation===R , R∨1 ← R * (src)
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===若 运算结果小于-2^..，或大于等于2^..-1，则置位[ [[遗留问题]] ]
===Description=== 将源地址的数据和目标地址的数据相乘，将结果送入目标地址&lt;br/&gt;若R为偶地址，则结果送入R , R∨1两个寄存器&lt;br/&gt;若R为奇地址，则只将乘积低地址数据送入R
===Example===16位乘法(R为偶地址)&lt;br/&gt;CLC ;清借位标志&lt;br/&gt;MOV #400,R1&lt;br/&gt;MUL #10,R1&lt;br/&gt;BCS ERROR ;若标志位C被置位[乘法出现溢出]，则转入错误处理
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:MUL by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:NEG</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===REG&lt;br/&gt;REGB[字节版本]
===Code===■054DD
===Operation===(dst)← -(dst)
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 运算结果=100000，则置位&lt;br/&gt;否则，清位&lt;br/&gt;说明：运算过程 100000→077777→100000，第二步骤加1时向上溢出
===Codec===若 运算结果=0，则清位&lt;br/&gt;否则，置位&lt;br/&gt;说明：运算过程 000000→177777→000000，运算前后符号位不变;其他运算符号位均改变
===Description===将目标位置的数据取补[two's complement]（按位取反并加一）
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Neg_r0.png|frame|center|REG_R0&lt;br/&gt;运算过程：000010→177767→177770"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:NEG by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:NEGB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:NEG]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:NEGB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:NOP</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===NOP
===Code===000240
===Operation===No Operation
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===空操作 
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:NOP by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:PS</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Pdp11:处理机状态字]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:PS by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:RESET</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===RESET
===Code===000005
===Operation===向 总线 发送 INIT 10ms，所有总线设备全部重置
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===
===Example===
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:RESET by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ROL</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===ROL&lt;br/&gt;ROLB[字节版本]
===Code===■061DD
===Operation===(dst)← (dst)按位循环左移一位
===Coden===若 运算结果&lt;0 （最高位[标志位]被置位），则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===等于 运算结束后标志位N和C的不可兼或[Exclusive OR]
===Codec===等于 运算前目标地址的数据的最高位
===Description===将目标位置的数据按位循环左移一位&lt;br/&gt;运算后的最低位通过运算前的标志位C来补齐&lt;br/&gt;标志位V和C已经不再代表通常使用的含义
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Rol.png|frame|center|ROL_模型&lt;br/&gt;ROLB_的模型类似"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ROL by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ROLB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:ROL]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ROLB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:ROR</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===ROR&lt;br/&gt;RORB[字节版本]
===Code===■060DD
===Operation===(dst)← (dst)按位循环右移一位
===Coden===若 运算结果&lt;0 （最高位[标志位]被置位），则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===等于 运算结束后标志位N和C的不可兼或[Exclusive OR]
===Codec===等于 运算前目标地址的数据的最低位
===Description===将目标位置的数据按位循环右移一位&lt;br/&gt;运算后的最高位通过运算前的标志位C来补齐&lt;br/&gt;标志位V和C已经不再代表通常使用的含义
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Ror.png|frame|center|ROR_模型&lt;br/&gt;RORB_的模型类似"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:ROR by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:RORB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:ROR]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:RORB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:RTI</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===RTI
===Code===000002
===Operation===PC ← (SP)↑&lt;br/&gt;PS ← (SP)↑
===Coden===从处理器堆栈读取
===Codez===从处理器堆栈读取
===Codev===从处理器堆栈读取
===Codec===从处理器堆栈读取
===Description===用于从中断或陷入子程序返回&lt;br/&gt;PC和PS从处理器堆栈中恢复
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:RTI by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:RTS</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===RTS
===Code===00020R
===Operation===PC ← reg&lt;br/&gt;reg ← (SP)↑ 
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===程序控制从子程序返回，进行现场恢复  &lt;br/&gt;RTS执行过程中(reg)送入PC，进行程序跳转，并从堆栈中弹出(reg)，恢复现场，与[[pdp11:JSR|JSR]]作用相反&lt;br/&gt;[ [[遗留问题]] ]
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Rts_r5.png|frame|center|RTS_R5"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:RTS by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:RTT</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===RTI
===Code===000002
===Operation===PC ← (SP)↑&lt;br/&gt;PS ← (SP)↑
===Coden===从处理器堆栈读取
===Codez===从处理器堆栈读取
===Codev===从处理器堆栈读取
===Codec===从处理器堆栈读取
===Description===用于从中断或陷入子程序返回&lt;br/&gt;PC和PS从处理器堆栈中恢复&lt;br/&gt;与[[pdp11:RTI|RTI]]类似&lt;br/&gt;不同的是指令RTT禁止[[pdp11:跟踪陷入|跟踪陷入]]而指令[[pdp11:RTI|RTI]]允许[[pdp11:跟踪陷入|跟踪陷入]]：&lt;br/&gt;如有[[pdp11:跟踪陷入|跟踪陷入]]请求&lt;br/&gt;
*RTI执行后立即进入[[pdp11:跟踪陷入|跟踪陷入]]
*RTT执行后，不进入[[pdp11:跟踪陷入|跟踪陷入]]，而是RTT下一指令执行后才进入[[pdp11:跟踪陷入|跟踪陷入]]
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:RTT by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SBC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SBC&lt;br/&gt;SBCB[字节版本]
===Code===■056DD
===Operation===(dst)← (dst)-(C)
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 (dst)=100000 且 (C)=1，则置位&lt;br/&gt;否则，清位
===Codec===若 (dst)=0 且 (C)=1，则清位&lt;br/&gt;否则，置位
===Description===对目标位置的数据处理借位，从目标中减去借位
===Example===进行两个字长的减运算，A1A0 - B1B0&lt;br/&gt;SUB A0,B0 ;计算低位字减&lt;br/&gt;SBC B1 ;处理借位&lt;br/&gt;SUB A1,B1 ;计算高位字减
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SBC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SBCB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:SBC]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SBCB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SCC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SCC
===Code===000277
===Operation===Set all CC's (condition codes)
===Coden===置
===Codez===置
===Codev===置
===Codec===置
===Description===置所有标志位  
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SCC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SEC</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SEC
===Code===000261
===Operation===Set C
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===置
===Description===置标志位C 
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SEC by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SEN</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SEN
===Code===000270
===Operation===Set N
===Coden===置
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===置标志位N
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SEN by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SEV</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SEV
===Code===000262
===Operation===Set V
===Coden===无影响
===Codez===无影响
===Codev===置
===Codec===无影响
===Description===置标志位V
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SEV by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SEZ</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SEZ
===Code===000264
===Operation===Set Z
===Coden===无影响
===Codez===置
===Codev===无影响
===Codec===无影响
===Description===置标志位Z
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SEZ by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SOB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SOB
===Code===077R00 + 偏移[offset] 
===Operation===R ← R - 1&lt;br/&gt;if 运算结果不为0 then PC ← PC - ( 2 * offset )
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===对目标寄存器进行减1，若结果不为0，进行程序控制转移 &lt;br/&gt;指令SOB不能进行前向跳转
===Example===无
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SOB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SUB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SUB
===Code===16SSDD
===Operation===(dst) ← (dst) - (src) 
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===若 运算过程存在溢出，则置位&lt;br/&gt;否则，清位&lt;br/&gt;说明:存在溢出的情况是两个操作数符号相反，运算结果的符号和(src)的符号相同
===Codec===若 运算结果的符号位被改变，则清位&lt;br/&gt;否则，置位[ [[遗留问题]] ]
===Description=== 将目标地址的数据和源地址的数据相减，将结果送入目标地址 
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Sub_r1_r2.png|frame|center|SUB_R1,R2"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SUB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SWAB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SWAB
===Code===0003DD
===Operation=== 原低位字节/原高位字节←高位字节/低位字节
===Coden===若 运算结果的低位字节的最高位[末第8位]被置位，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果的低位字节=0，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===清
===Description===将目标位置的字数据的高位字节与低位字节互换
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Swab_r1.png|frame|center|SWAB_R1"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SWAB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:SXT</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===SXT
===Code===0067DD
===Operation===(dst)← 0 若 标志位N 未被置位&lt;br/&gt;(dst)← -1 若 标志位N 被置位
===Coden===无影响
===Codez===若 标志位N 未被置位，则置位 ([[遗留问题]])
===Codev===无影响
===Codec===无影响
===Description===根据标志位N改变目标位置的数值
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Sxt_a.png|frame|center|标志位N被设置，目标A数据置为-1_[补码表示为177777"/></p>]
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:SXT by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:TRAP</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===TRAP
===Code===104400-104777
===Operation===↓(SP) ← PS&lt;br/&gt;↓(SP) ← PC&lt;br/&gt;PC ← (34)&lt;br/&gt;PS ← (36)
===Coden===从 [[中断|中断向量]] 读取
===Codez===从 [[中断|中断向量]] 读取
===Codev===从 [[中断|中断向量]] 读取
===Codec===从 [[中断|中断向量]] 读取
===Description===执行陷入操作
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_TRAP.png|frame|center|TRAP"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:TRAP by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:TST</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===TST&lt;br/&gt;TSTB[字节版本]
===Code===■053DD
===Operation===(dst)← (dst)
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===清
===Description===根据目标位置的数据设置[[pdp11:标志位|标志位]]的N位和Z位
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Tst_r1.png|frame|center|TST_R1"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:TST by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:TSTB</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[pdp11:TST]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:TSTB by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:WAIT</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===WAIT
===Code===000001
===Operation===令处理器挂起，放弃总线
===Coden===无影响
===Codez===无影响
===Codev===无影响
===Codec===无影响
===Description===令处理器挂起，放弃总线
===Example===
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:WAIT by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:XOR</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{{pdp11:instruction
===Instruction===XOR
===Code===074RDD
===Operation===(dst)← R ¤ (dst)
===Coden===若 运算结果&lt;0，则置位&lt;br/&gt;否则，清位
===Codez===若 运算结果=0，则置位&lt;br/&gt;否则，清位
===Codev===清
===Codec===无影响
===Description===将给定寄存器与目标地址的数据做非兼异或[不可兼或]运算，结果送入目标地址
===Example===<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_instruction_Xor_r0_r2.png|frame|center|XOR_R0_,_R2"/></p>
</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:XOR by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:内存管理</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=概述=
PDP-11 虚地址字长为16位，而总线和CPU地址字长为18位，需要内存管理机制将虚内存地址转化为物理内存地址
==内存管理单元==
*PDP-11提供两组页寄存器，分别对应核心态和用户态(由[[pdp11:PS|PS]]状态字选择)
*核心态页寄存器组 称为 [[KISA]]
*用户态页寄存器组 称为 UISA
*每组页寄存器由8个页寄存器组成
*每个页寄存器由[[pdp11:页地址寄存器|页地址寄存器]]和[[pdp11:页说明寄存器|页说明寄存器]]组成
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_memory_apr.png|center"/></p>

==虚地址==
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_memory_va.png|right"/></p>
*长度为16位
*APF = Active Page Field &lt;br/&gt;对应页寄存器的编号
*BN = Block Number &lt;br/&gt;块号
*BID = Displacement In Block&lt;br/&gt;块内偏移

==物理地址==
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_memory_pa.png|right"/></p>
*长度为18位
*PHYSICAL BLOCK NO &lt;br/&gt;物理块号
*DIB = Displacement In Block &lt;br/&gt;块内偏移

==英文和缩写对照==
{===Class==="wikitable" border="1" cellspacing="0" align="center" style="width:50%"
!style="width:100px"|名称
!英文
!英文缩写
|-
|页寄存器
|Active Page Register
|APR
|-
|[[pdp11:页地址寄存器|页地址寄存器]]
|Page Address Register
|PAR
|-
|[[pdp11:页说明寄存器|页说明寄存器]]
|Page Descriptor Register
|PDR
|-
|虚地址
|Visual Address
|VA
|-
|物理地址
|Physical Address
|PA
|}

=地址变换机制=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_memory.png|center"/></p>
0] 根据[[pdp11:PS|PS]]中14-15位选取页寄存器组(核心态 或 用户态)&lt;BR/&gt;
1]2] 根据虚地址VA中APF段从页寄存器组中选取某一页寄存器[APR]&lt;br/&gt;
3] 选取的页寄存器[APR]中的页地址寄存器[PAR]的0-11位，加上虚地址中块号[BN]段，形成物理块号[PBN]&lt;br/&gt;
4] 将得到的物理块号[PBN]，与虚地址VA中的块内偏移[DIB]段，拼接成物理地址[PA]&lt;br/&gt;

=参考=
*[[pdp11:页地址寄存器]]
*[[pdp11:页说明寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:内存管理 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:处理机状态字</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>[[处理机状态字]]是PDP11-40提供的一个16位寄存器 

== 结构  ==

<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Processor_status_word.png"/></p> 

== 说明  ==

=== 处理机当前态  ===

当前的[[处理机状态]]

00 = [[核心态]]

11 = [[用户态]]

=== 处理机先前态  ===

先前的[[处理机状态]]，一般用于中断，陷入等

00 = [[核心态]]

11 = [[用户态]]

=== 处理机优先级  ===

[[处理机优先级]] 

===处理机标志===
显示处理机执行指令的状态及其结果的状态
====陷入标志====
由程序设置/清除，一般用于设置断点
=====参考=====
[[pdp11:跟踪陷入]]

====负标志====
N=1，表示处理机运算结果为负
====零标志====
Z=1，表示处理机运算结果为零
====溢出标志====
V=1，表示处理机运算结果数位溢出
====最高有效位改变标志====
C=1，表示处理机运算过程中运算结果最高有效位[符号位]改变&lt;br/&gt;
常被用作进/借位标志</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:处理机状态字 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:寄存器</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>pdp11/40提供了8组共9个通用寄存器和1个状态寄存器，分别是 

*R0

*R1

*R2

*R3

*R4

*R5

*R6/SP [共两个]<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_register_r6.png|frame|right|R6指向方式"/></p>

R6用于指定对应堆栈的栈顶，总是指向对应堆栈的栈顶元素&lt;br&gt;一共有两个R6寄存器，分别服务于 核心栈 和 用户栈，通常称为 核心栈栈顶 和 用户栈栈顶

*R7/PC

R7用作程序计数器，指向当前执行指令的下一指令
*[[PS]] 
状态寄存器，参看[[PS]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:寄存器 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:寄存器名称使用约定</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>R0,R1,...,R7是寄存器名称,所有的寄存器名称通过[[Pdp11:寻址方式#寄存器直接寻址|寄存器直接寻址]]找到相应的寄存器&lt;br/&gt;
为了叙述方便，约定如下:&lt;br/&gt;
&lt;b&gt;R0,R1,...,R7，一般声明为相对应的寄存器&lt;br/&gt;
而作为寄存器名的R0,R1,...,R7则用"寄存器名R0" "寄存器名R1"...来声明&lt;/b&gt;&lt;br/&gt;
例: R6指的栈顶指针寄存器，即&lt;i&gt;寄存器名R6&lt;/i&gt;通过[[Pdp11:寻址方式#寄存器直接寻址|寄存器直接寻址]]找到的相应寄存器</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:寄存器名称使用约定 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:寻址方式</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Align===left
|__TOC__
|}
描述PDP11-40汇编的寻址方式 
= 直接寻址  =

== [[寄存器]]直接寻址  ==

形式为 '''OPR Rn''' &lt;br/&gt;通过寄存器名称，直接寻址到相应寄存器，并对其中数据加以操作 
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_add_r2_r4.png|frame|center|ADD_R2,R4_&lt;br/&gt;通过寄存器名_R2_R4，直接寻址到相应寄存器，并对其中数据加以操作"/></p> 为了以后说明方便，做了[[Pdp11:寄存器名称使用约定]]
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_r.png|frame|center|OPR_R"/></p>

== [[寄存器]]自增寻址  ==
参考[[pdp11:寻址方式#寄存器间接寻址|寄存器间接寻址]]&lt;br/&gt;
形式为 &lt;b&gt;OPR (Rn)+&lt;/b&gt;，方便数列、堆栈等的操作&lt;br/&gt;
寄存器作为指针使用，指令对寄存器指所指向的地址的数据进行操作&lt;br/&gt;
在指令完成后对寄存器进行累加&lt;br/&gt;
对字节型操作累加1，对字型操作累加2，对R6,R7两个寄存器始终累加2&lt;br/&gt;
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_add_r2_plus_r4.png|frame|center|ADD_(R2)+,R4&lt;br/&gt;通过R2指向100002地址，对其中数据进行操作，并对R2进行累加"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_r_plus.png|frame|center|OPR_(R)+"/></p>

== [[寄存器]]自减寻址  ==
参考[[pdp11:寻址方式#寄存器间接寻址|寄存器间接寻址]]&lt;br/&gt;
形式为 &lt;b&gt;OPR -(Rn)&lt;/b&gt;，方便数列、堆栈等的操作&lt;br/&gt;
先对寄存器进行自减&lt;br/&gt;
对字节型操作自减1，对字型操作自减2，对R6,R7两个寄存器始终自减2&lt;br/&gt;
再将寄存器作为指针使用，指令对寄存器指所指向的地址的数据进行操作
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_add_minus_r3_r0.png|frame|center|ADD_-(R3),R0&lt;br/&gt;先对R3自减2，再通过R3指向77774地址，对其中数据进行操作"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_minus_r.png|frame|center|OPR_-(R)"/></p>

== [[寄存器]]索引寻址  ==
参考[[pdp11:寻址方式#寄存器间接寻址|寄存器间接寻址]]&lt;br/&gt;
形式为 &lt;b&gt;OPR X(Rn)&lt;/b&gt;&lt;br/&gt;
通过 Rn的值+X 进行寻址，对其数据进行操作
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_add_30_r2_20_r5.png|frame|center|ADD_30(R2),20(R5)&lt;br/&gt;R2的值1100+30=1130&lt;br/&gt;R5的值2000+20=2020&lt;br/&gt;对1130地址和2020地址的数据进行操作"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_x_r.png|frame|center|OPR_X(R)"/></p>

= 间接寻址  =
==寄存器间接寻址==
形式为 &lt;b&gt;OPR @Rn&lt;/b&gt; 或 &lt;b&gt;OPR (Rn)&lt;/b&gt;&lt;br/&gt;
寻址到Rn值所指向的地址，对其数据进行操作
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_clr_at_r5.png|frame|center|CLR_@R5&lt;br/&gt;通过R5的数据1700,找到1700地址，对其数据进行操作"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_defer_r.png|frame|center|OPR_(R)"/></p>

==寄存器自增间接寻址==
形式为 &lt;b&gt;OPR @(Rn)+&lt;/b&gt;&lt;br/&gt;
寻址到Rn值指向的地址的值指向的地址，对其数据进行操作&lt;br/&gt;
并将Rn值自增，自增规则与[[Pdp11:寻址方式#寄存器自增寻址|直接寻址方式]]相同
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_inc_at_r2_plus.png|frame|center|INC_@(R2)+&lt;br/&gt;R2的值指向10300，10300地址的值指向1010，对1010地址的值进行操作，并将R2的值自增"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_at_r_plus.png|frame|center|OPR_@(R)+"/></p>

==寄存器自减间接寻址==
形式为 &lt;b&gt;OPR @-(Rn)&lt;/b&gt;&lt;br/&gt;
将Rn值自减，自减规则与[[Pdp11:寻址方式#寄存器自减寻址|直接寻址方式]]相同&lt;br/&gt;
寻址到Rn值指向的地址的值指向的地址，对其数据进行操作&lt;br/&gt;
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_inc_at_minus_r2.png|frame|center|INC_@-(R2)&lt;br/&gt;将R2的值自减，R2的值指向10300，10300地址的值指向1010，对1010地址的值进行操作"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/pdp11_address_at_minus_r.png|frame|center|OPR_@-(R)"/></p>

==寄存器索引间接寻址==
形式为 &lt;b&gt;OPR @X(Rn)&lt;/b&gt;&lt;br/&gt;
寻址到 Rn的值+X 指向的地址的值指向的地址，对其数据进行操作&lt;br/&gt;
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_add_at_1000_r2_r1.png|frame|center|ADD_@1000(R2),R1&lt;br/&gt;R2的值+1000=1100&lt;br/&gt;1100地址的值指向1050，对1050地址的数据进行操作"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_at_x_r.png|frame|center|OPR_@X(R)"/></p>

=偏移寻址=
pdp-11说明书上对这种寻址方式称为 "USE OF THE PC AS AGENERAL REGISTER"&lt;BR/&gt;
下面的例子对比了这种寻址指令的编译和其他寻址指令的编译&lt;br/&gt;
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_cmp_add_10_r0_and_add_r2_r4.png|frame|center|ADD_#10,R0_编译为两条指令，#10编译到单独的地址，方便对10的改变而方便指令重用，其他寻址方式如ADD_R2,R4编译为单一指令"/></p>
偏移寻址是相对于PC的寻址，方便代码重用
==立即数寻址==
形式为 &lt;b&gt;OPR #n,DD&lt;/b&gt;&lt;br/&gt;
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_add_10_r0.png|frame|center|Add_#10,R0&lt;br/&gt;1020，1022地址的内容是汇编指令编译后的机器指令&lt;br/&gt;将1022地址的数据10加入R0中，注意PC的位置调整"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_sharp_n.png|frame|center|OPR_#n"/></p>

==绝对偏移寻址==
形式为 &lt;b&gt;OPR @#A&lt;/b&gt;&lt;br/&gt;
&lt;B&gt;与[[Pdp11:寻址方式#间接寻址|间接寻址]]完全一样&lt;/B&gt;&lt;br/&gt;
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_add_at_2000_r3.png|frame|center|ADD_@#2000,R3&lt;br/&gt;1020,1022地址的内容是汇编指令编译后的机器指令&lt;br/&gt;根据1022地址内容2000寻址，将2000地址内容300加入R3寄存器中"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/pdp11_address_opr_at_sharp_a.png|frame|center|OPR_@#A"/></p>

==相对偏移寻址==
形式为 &lt;b&gt;OPR A&lt;/b&gt; 或 &lt;b&gt;OPR X(PC)&lt;/b&gt;&lt;br/&gt;
OPR X(PC)形式说明这种寻址方式与[[Pdp11:寻址方式#寄存器索引寻址|索引寻址]]相同，只是使用PC寄存器数据作为基地址&lt;br/&gt;
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_inc_a.png|frame|center|INC_A&lt;br/&gt;1020，1022地址的内容是汇编指令编译后的机器指令
&lt;br/&gt;执行指令前PC指向下一指令地址1024&lt;br/&gt;1024+54=1100&lt;br/&gt;寻址至1100，对1100地址的数据进行操作"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_a.png|frame|center|OPR_A"/></p>

==索引相对偏移寻址==
形式为 &lt;b&gt;OPR @A&lt;/b&gt; 或 &lt;b&gt;OPR @X(PC)&lt;/b&gt;&lt;br/&gt;
OPR @X(PC)形式说明这种寻址方式与[[Pdp11:寻址方式#索引间接寻址|索引间接寻址]]相同，只是使用PC寄存器数据作为基地址
===例===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_clr_at_a.png|frame|center|CLR_@A&lt;br/&gt;1020，1022地址的内容是汇编指令编译后的机器指令
&lt;br/&gt;执行指令前PC指向下一指令地址1024&lt;br/&gt;1024+20=1044&lt;br/&gt;1044地址的内容10100，寻址至10100，对其数据进行操作"/></p>
===模型===
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_address_opr_at_a.png|frame|center|OPR_@A"/></p>

= 参考  =

*[[Pdp11:寄存器名称使用约定]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:寻址方式 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:标志位</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT[[pdp11:处理机状态字#处理机标志]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:标志位 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:汇编指令</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Align===left
|__TOC__
|}
描述PDP11-40提供的汇编指令&lt;br/&gt;
=概述=
PDP11-40提供一系列汇编指令来方便编程，汇编指令都被编译为机器指令
=符号约定=
为方便叙述汇编指令，做如下符号约定
{===Class==="wikitable" style="width:100%" border="1" cellspacing="0" align="center"
|-
!style="width:80px"|符号
!margin="10px"|意义
!意义[英文]
|-
!align="center"|数
|除特殊说明的情况，数一般以八进制出现&lt;br/&gt;八进制表现为6位八进制数，有符号数末第6位为符号位(等同于二进制形式末第16位)&lt;br/&gt;转化为二进制表现为16位二进制数，有符号数末第16位为符号位
|
|-
!align="center"|( )
|...的内容
|contents of
|-
!align="center"|SS / src
|源地址
|source address
|-
!align="center"|DD / dst
|目标地址
|destination address
|-
!align="center"|↑
|从堆栈出栈
|is popped from stack
|-
!align="center"|↓
|向堆栈入栈
|is pushed onto stack
|-
!align="center"|~
|逻辑非[按位取反]
|boolean NOT
|-
!align="center"|∧
|逻辑与
|boolean AND
|-
!align="center"|∨
|逻辑或
|boolean OR
|-
!align="center"|¤
|不可兼或
|Exclusive OR
|-
!align="center"|Reg / R
|寄存器
|Register
|-
!align="center"|B
|字节
|Byte
|-
!align="center"|■
|这一位为0则代表指令是字指令&lt;br/&gt;为1则代表指令是字节指令
|0 for word &lt;br/&gt; 1 for byte
|-
!align="center"|XXX
|某个内存地址[ [[遗留问题]] ]
|XXX is a programmer-defined mnemonic for a memory location

|}

=指令列表=
{===Class==="wikitable" border="1" cellspacing="0" align="center" style="width:100%"
!style="width:100px"|指令
!说明
!英文简介
|-
|[[pdp11:CLR|CLR]]&lt;br/&gt;[[pdp11:CLRB|CLRB]]
|将目标位置的数据清零
|clear destination
|-
|[[pdp11:COM|COM]]&lt;br/&gt;[[pdp11:COMB|COMB]]
|将目标位置的数据按位取反
|complement dst
|-
|[[pdp11:INC|INC]]&lt;br/&gt;[[pdp11:INCB|INCB]]
|将目标位置的数据加1
|increment dst
|-
|[[pdp11:DEC|DEC]]&lt;br/&gt;[[pdp11:DECB|DECB]]
|将目标位置的数据减1
|decrement dst
|-
|[[pdp11:NEG|NEG]]&lt;br/&gt;[[pdp11:NEGB|NEGB]]
|将目标位置的数据取补
|negate dst
|-
|[[pdp11:TST|TST]]&lt;br/&gt;[[pdp11:TSTB|TSTB]]
|根据目标位置的数据设置[[pdp11:标志位|标志位]]的N位和Z位
|test dst
|-
|[[pdp11:ASR|ASR]]&lt;br/&gt;[[pdp11:ASRB|ASRB]]
|将目标位置的数据按位右移一位
|arithmetic shift right
|-
|[[pdp11:ASL|ASL]]&lt;br/&gt;[[pdp11:ASLB|ASLB]]
|将目标位置的数据按位左移一位
|arithmetic shift left
|-
|[[pdp11:ROR|ROR]]&lt;br/&gt;[[pdp11:RORB|RORB]]
|将目标位置的数据按位循环右移一位
|rotate right
|-
|[[pdp11:ROL|ROL]]&lt;br/&gt;[[pdp11:ROLB|ROLB]]
|将目标位置的数据按位循环左移一位
|rotate left
|-
|[[pdp11:SWAB|SWAB]]
|将目标位置的字数据的高位字节与低位字节互换
|swap bytes
|-
|[[pdp11:ADC|ADC]]&lt;br/&gt;[[pdp11:ADCB|ADCB]]
|对目标位置的数据处理进位
|add carry
|-
|[[pdp11:SBC|SBC]]&lt;br/&gt;[[pdp11:SBCB|SBCB]]
|对目标位置的数据处理借位
|subtract carry
|-
|[[pdp11:SXT|SXT]]
|根据标志位N改变目标位置的数值
|sign extend
|-
|[[pdp11:MOV|MOV]]&lt;br/&gt;[[pdp11:MOVB|MOVB]]
|移动[复制]源地址的数据到目标地址
|move source to destination
|-
|[[pdp11:CMP|CMP]]&lt;br/&gt;[[pdp11:CMPB|CMPB]]
|比较源地址的数据和目标地址的数据
|compare src to dst
|-
|[[pdp11:ADD|ADD]]
|将源地址的数据和目标地址的数据相加，将结果送入目标地址
|add src to dst
|-
|[[pdp11:SUB|SUB]]
|将目标地址的数据和源地址的数据相减，将结果送入目标地址
|subtract src from dst
|-
|[[pdp11:BIT|BIT]]&lt;br/&gt;[[pdp11:BITB|BITB]]
|将源地址的数据和目标地址的数据做逻辑与运算，据此改变标志位
|bit test
|-
|[[pdp11:BIC|BIC]]&lt;br/&gt;[[pdp11:BICB|BICB]]
|按源地址的数据的指示，将目标地址的数据的二进制形式的某些数位清位
|bit clear
|-
|[[pdp11:BIS|BIS]]&lt;br/&gt;[[pdp11:BISB|BISB]]
|将源地址的数据和目标地址的数据做逻辑或运算，将结果送入目标地址&lt;br/&gt;[按源地址的数据的指示，将目标地址的数据的二进制形式的某些数位置位]
|bit set
|-
|[[pdp11:MUL|MUL]]
|将源地址的数据和目标地址的数据相乘，将结果送入目标地址(参见详细说明)
|multiply
|-
|[[pdp11:DIV|DIV]]
|将源地址的数据和目标地址(32位长)的数据相除，将结果送入目标地址
|divide
|-
|[[pdp11:ASH|ASH]]
|根据源地址的数据，将目标寄存器的数据按位向左/向右移动指定位数
|shift arithmetically
|-
|[[pdp11:ASHC|ASHC]]
|根据源地址的数据，将目标寄存器[双字长]的数据按位向左/向右移动指定位数
|arithmetic shift combined 
|-
|[[pdp11:XOR|XOR]]
|将给定寄存器与目标地址的数据做不可兼或运算，结果送入目标地址
|exclusive OR
|-
|[[pdp11:BR|BR]]
|进行无条件程序控制转移，偏移范围 -128 ~ 127
|branch (unconditional)
|-
|[[pdp11:BNE|BNE]]
|若标志位Z未被置位，进行程序控制转移
|branch if not equal (to zero)
|-
|[[pdp11:BEQ|BEQ]]
|若标志位Z被置位，进行程序控制转移
|branch if equal (to zero)
|-
|[[pdp11:BPL|BPL]]
|若标志位N未被置位，进行程序控制转移
|branch if plus
|-
|[[pdp11:BMI|BMI]]
|若标志位N被置位，进行程序控制转移
|branch if minus
|-
|[[pdp11:BVC|BVC]]
|若标志位V未被置位，进行程序控制转移
|branch if overflow is clear
|-
|[[pdp11:BVS|BVS]]
|若标志位V被置位，进行程序控制转移
|branch if overflow is set
|-
|[[pdp11:BCC|BCC]]
|若标志位C未被置位，进行程序控制转移
|branch if carry is clear
|-
|[[pdp11:BGE|BGE]]
|若标志位满足 N ∨ V = 0 ，进行程序控制转移
|branch if greater than or equal (to zero)
|-
|[[pdp11:BLT|BLT]]
|若标志位满足 N ¤ V = 0 ，进行程序控制转移
|branch if less than (zero)
|-
|[[pdp11:BGT|BGT]]
|若标志位满足 Z ∨ ( N ¤ V ) = 0 ，进行程序控制转移
|branch if greater than (zero)
|-
|[[pdp11:BLE|BLE]]
|若标志位满足 Z ∨ ( N ¤ V ) = 1 ，进行程序控制转移
|branch if less than or equal (to zero)
|-
|[[pdp11:BHI|BHI]]
|若标志位满足 Z = 0 and C = 0 ，进行程序控制转移
|branch if higher
|-
|[[pdp11:BLOS|BLOS]]
|若标志位满足 C ∨ Z = 1 ，进行程序控制转移
|branch if lower or same
|-
|[[pdp11:BHIS|BHIS]]
|若标志位满足 C = 0 ，进行程序控制转移
|branch if higher or same
|-
|[[pdp11:BLO|BLO]]
|若标志位满足 C = 1 ，进行程序控制转移
|branch if lower
|-
|[[pdp11:JMP|JMP]]
|程序控制跳转到目标地址
|jump
|-
|[[pdp11:JSR|JSR]]
|程序控制跳转到指定子程序并进行现场保护
|jump to subroutine
|-
|[[pdp11:RTS|RTS]]
|程序控制从子程序返回，进行现场恢复
|return from subroutine
|-
|[[pdp11:MARK|MARK]]
|标记退栈位置，方便子程序返回时的退栈操作
|mark
|-
|[[pdp11:SOB|SOB]]
|对目标寄存器进行减1，若结果不为0，进行程序控制转移
|subtract one and branch (if ≠ 0)
|-
|[[pdp11:TRAP|TRAP]]
|陷入
|trap
|-
|[[pdp11:BPT|BPT]]
|断点陷入
|breakpoint trap
|-
|[[pdp11:IOT|IOT]]
|I/O陷入
|Input/Output trap
|-
|[[pdp11:RTI|RTI]]
|从中断返回
|return from interrupt
|-
|[[pdp11:RTT|RTT]]
|从中断返回
|return from interrupt
|-
|[[pdp11:MFPI|MFPI]]
|从上一指令空间读取数据
|move from previous instruction space
|-
|[[pdp11:MTPI|MTPI]]
|向上一指令空间写入数据
|move to previous instruction space
|-
|[[pdp11:CLC|CLC]]
|清标志位C
|Clear C
|-
|[[pdp11:CLV|CLV]]
|清标志位V
|Clear V
|-
|[[pdp11:CLZ|CLZ]]
|清标志位Z
|Clear Z
|-
|[[pdp11:CLN|CLN]]
|清标志位N
|Clear N
|-
|[[pdp11:SEC|SEC]]
|置标志位C
|Set C
|-
|[[pdp11:SEV|SEV]]
|置标志位V
|Set V
|-
|[[pdp11:SEZ|SEZ]]
|置标志位Z
|Set Z
|-
|[[pdp11:SEN|SEN]]
|置标志位N
|Set N
|-
|[[pdp11:SCC|SCC]]
|置所有标志位
|Set all CC's (Condition Codes)
|-
|[[pdp11:CCC|CCC]]
|清所有标志位
|Clear all CC's
|-
|[[pdp11:NOP|NOP]]
|空操作
|No Operation
|}</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:汇编指令 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:跟踪陷入</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>跟踪陷入
#置[[pdp11:处理机状态字|处理机状态字]]第4位
#在陷入指令 [进行第1步的指令] 后一指令的执行末尾引发处理机中断，中断向量地址为14</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:跟踪陷入 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:页地址寄存器</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td><p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_memory_par.png|right"/></p>
*长度16位
*仅0-11位有效，为PAF[Page Address Field]段
*用于[[Pdp11:内存管理|内存管理]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:页地址寄存器 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11:页说明寄存器</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td><p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_memory_pdr.png|right"/></p>
*长度为16位
*用于[[pdp11:内存管理|内存管理]]
*ACF = Access Control Field&lt;br/&gt;指定页 的读写权限&lt;br/&gt;
{===Class==="wikitable" style="width:30%" border="1" cellspacing="0" align="right"
|+ '''ACF模式'''
|-
!ACF
!模式
|-
|00
|不可访问[non-resident]
|-
|01
|只读
|-
|10
|不可访问[(unused)]
|-
|11
|读写
|}
*W= Access Information Bit&lt;br/&gt;标志 指定页 是否被修改&lt;br/&gt;W = 1 表明指定页被修改过&lt;br/&gt;当页寄存器([[pdp11:页地址寄存器|页地址寄存器]] 或 [[pdp11:页说明寄存器|页说明寄存器]])被修改时，W清零
*ED = Expansion Direction&lt;br/&gt;标志 指定页的地址扩展方向
&lt;br/&gt;
{===Class==="wikitable" style="width:30%" border="1" cellspacing="0" align="right"
|+ '''ED 方向'''
|-
!ED
!方向
|-
|0
|从相对零位置向高地址扩展 [正向扩展]
|-
|1
|从高地址向相对零位置扩展 [逆向扩展]
|-
===Colspan==="2"|相对零位置 为 [[pdp11:页地址寄存器|页地址寄存器]] PAF段指示的位置
|}

*PLF = Page Length Field&lt;br/&gt;PLF = 按页扩展方向最后一个被访问到的块号
{===Class==="wikitable" style="width:30%" border="1" cellspacing="0" align="left"
|+ '''PLF 数值'''
|-
!扩展方向
!数值
|-
|正向扩展
|指定页块数 - 1
|-
|逆向扩展
|128 - 指定页块数
|}</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11:页说明寄存器 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Pdp11虚拟机</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=概述=
*由于源代码分析中，有一些分析基于调试环境，所以在此介绍一下所使用的PDP11虚拟机
*虚拟机来源
**http://simh.trailing-edge.com/
*下载地址
**虚拟机 : http://simh.trailing-edge.com/sources/simhv38-1-exe.zip
**Unix V6 On PDP-11 : http://simh.trailing-edge.com/kits/uv6swre.zip
**文档 : http://simh.trailing-edge.com/pdf/all_docs.html
=启动=
*启动pdp11.exe
*set cpu u18
*att rk0 unix0_v6_rk.dsk
*att rk1 unix1_v6_rk.dsk
*att rk2 unix2_v6_rk.dsk
*att rk3 unix3_v6_rk.dsk
*boot rk0
*@unix
*login : root
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_sim_1.png|center"/></p>
=使用=
*启动后，就已经在UNIX V6 模拟环境下运行了，可以进行各项试验
*注意：Unix V6 使用的命令等 与 我们所熟悉的Unix有一些不同
=调试=
*使用中，按F11可以切换到调试状态
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_sim_2.png|center"/></p>
*调试用命令详细参看 文档，这里列出常用的命令
==调试常用命令==
*查看内存项
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_sim_3.png|center"/></p>
*输出内存(反汇编)到文件
**注意：反汇编结果 和 源代码 不一定一致
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_sim_4.png|center"/></p>
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_sim_5.png|frame|center|反汇编结果"/></p>
*查看 寄存器 值
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pdp11_sim_6.png|center"/></p>
*断点/调试命令 参看 文档</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Pdp11虚拟机 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>RK磁盘</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=概述=
*RK磁盘为 pdp11/40 使用的磁盘存储器
*在此我们只讨论与unix源代码有关的RK磁盘寄存器，对于工作原理不作讨论

=磁盘规格=
*每扇区 = 256字
*每道 = 12扇区
*每面 = 200
*每盒 = 2面

=寄存器=
==概述==
{===Class==="wikitable" border="1" cellspacing="0" align="center" style="width:90%"
!寄存器名
!英文名
!英文缩写
!寄存器地址
|-
|磁盘状态寄存器
|Drive Status Register
|RKDS
|177400
|-
|磁盘错误寄存器
|Error Register
|RKER
|177402
|-
|磁盘控制状态寄存器
|Control Status Register
|RKCS
|177404
|-
|字计数寄存器
|Word Count Register
|RKWC
|177406
|-
|总线地址寄存器
|Current Bus Address Register
|RKBA
|177410
|-
|磁盘地址寄存器
|Disk Address Register
|RKDA
|177412
|-
|维护寄存器 (?)
|Maintenance Register
|RKMR
|177414
|-
|数据缓冲寄存器
|Data Buffer Register
|RKDB
|177416
|}
*参看 [[参考文献|参考文献 之 PDP-11 Peripherals Handbook 1972]]
*在此，我们只关注 RKCS RKWC RKDA RKBA
==RKCS==
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/rkcs.png"/></p>
:我们只关心以下标志位，其他标志位请参考[[参考文献|参考文献 之 PDP-11 Peripherals Handbook 1973]]（[[参考文献|参考文献 之 PDP-11 Peripherals Handbook 1972]]在此处叙述有纰漏)
*0位 设备启动位，置位则启动设备
*1-3位 模式位，指定此次启动设备的模式，常用模式如下，其他模式参考[[参考文献|参考文献 之 PDP-11 Peripherals Handbook 1973]]
**写模式 001
**读模式 010
*4-5位 内存地址扩展位，RKBA为低16位，此两位为高2位，拼成18位内存地址
*6位 中断允许位，若置位，则设备I/O错误或I/O完成时，向地址220发出中断
*7位 当磁盘控制器准备接受命令时，置此位
*15位 若RKER中任何一位被置为，则此位置位

==RKBA==
*内存地址的低16位
==RKWC==
*存放 要传输字数的补码
==RKDA==
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/RKDA.png"/></p>
*0-3位 扇区位置(0~11)
*4位 面号(0~1)
*5-12位 柱号(0~202)(Lions源代码分析与此不符，这里参考[[参考文献|参考文献 之 PDP-11 Peripherals Handbook 1973]])
*13-15位 驱动器号(0~7)

=RK磁盘的I/O操作=
*RK磁盘I/O操作主要指
**从磁盘读取数据到内存
**从内存写入数据到磁盘
*内存地址：由 RKCS 4-5位，拼接RKBA的16位，组成18位内存地址
*磁盘地址：由RKDA指向
*I/O模式：由RKCS 1-3位指示
*I/O操作完成或错误，由RKCS 6位指示是否引发中断220</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page RK磁盘 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Rk磁盘交叉存储</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>由于在Unix V6后不再使用这个机制，所以在此不作讨论
*列入[[遗留问题]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Rk磁盘交叉存储 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:.d major</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT[[skill:设备号]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:.d major by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:.d minor</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT[[skill:设备号]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:.d minor by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:.inta</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*.inta 这种用法使用了 [[编程技巧#无名结构]]
*inta 的定义在 [[File:sig.c|sig.c]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:.inta by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:SW</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*SW 定义在 [[file:param.h|param.h]] 中的 0166 行，值为0177570
*SW 表示寄存器Console Switch Register&lt;br/&gt;描述在 The PDP11-40 Processor Handbook ([[参考文献]]) 8-2&lt;br/&gt;并未理解其含义
*SW-&gt;integ 用法使用了 [[编程技巧#直接取地址数据|直接取地址数据]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:SW by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:integ</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>关于 ...-&gt;integ 的用法解释
*参看 [[编程技巧#直接取地址数据|编程技巧之直接取地址数据]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:integ by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:klrbuf</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:字符设备寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:klrbuf by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:klrcsr</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:字符设备寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:klrcsr by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:kltbuf</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:字符设备寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:kltbuf by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:kltcsr</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:字符设备寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:kltcsr by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:r</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>-&gt;r[0] 的用法
*参考 [[编程技巧#无名结构|编程技巧之无名结构]]
*无名结构定义 在 [[file:param.h|param.h]] 0185行</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:r by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:r0传递函数</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>UNIX源代码 在 中断处理(尤其中断入口)时，经常使用R0来传递函数指针&lt;br/&gt;
举例 说明
&lt;div class="wikicode"&gt;
0558 klin: [[pdp11:JSR|jsr]] r0,[[code:call|call]]; _[[code:klrint|klrint]]
&lt;/div&gt;
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/R0_pass_ptr_func.png|center|frame|指令执行前后对比"/></p>
*指令执行后，PC转入call1运行，而R0保存了256，可在call1中使用 *R0 得到_klrint 的函数入口
*总体上，借用R0传递了函数指针</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:r0传递函数 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:rk无名结构</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*无名结构的用法 参考[[编程技巧#无名结构|编程技巧之无名结构]]
*结构定义在 [[file:rk.c|rk.c]]
&lt;div class="wikicode"&gt;
5376&nbsp;struct {&lt;br/&gt;
5377&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkds;&lt;br/&gt;
5378&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rker;&lt;br/&gt;
5379&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkcs;&lt;br/&gt;
5380&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkwc;&lt;br/&gt;
5381&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkba;&lt;br/&gt;
5382&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rkda;&lt;br/&gt;
5383&nbsp;};&lt;br/&gt;
&lt;/div&gt;
*使用形如 RKADDR-&gt;rkcs
:RKADDR 为0177400([[file:rk.c|rk.c]])
:177400为RKDS寄存器地址，使用无名结构可以分别调用RKER,RKCS,RKWC,RKBA,RKDA寄存器
:参见 [[RK磁盘]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:rk无名结构 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:ttrbuf</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:字符设备寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:ttrbuf by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:ttrcsr</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:字符设备寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:ttrcsr by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:tttbuf</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:字符设备寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:tttbuf by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:tttcsr</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:字符设备寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:tttcsr by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:u.u ar0</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Align===right
|__TOC__
|}
=u.u_ar0=
==关于u==
===解释===
*是一个 全局变量
*类型为[[code:user|user]]
==关于u_ar0==
===调用===
*u.u_ar0在核心态代码中调用,之前必然经过[[中断处理的现场保护]]
*被调用时堆栈如图
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/u_ar0.png"/></p>
===解释===
*这是[[code:user|user]]结构中的一个成员变量
*它是一个指针,指向核心栈中保护R0寄存器的位置
*可用于寻址 保护在核心栈中的其他寄存器
*例如 :u.u_ar0[R5]返回保护在核心栈中的R5寄存器的值
* #define R5 -6,其它寄存器也类似,更多定义见[[File:reg.h|reg.h]]
==用途==
*[[中断的参数传递]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:u.u ar0 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:字符设备寄存器</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>-&gt;ttrcsr ， -&gt;klrcsr → 接收器状态寄存器&lt;br/&gt;
-&gt;ttrbuf ， -&gt;klrbuf → 接收器数据缓存寄存器&lt;br/&gt;
-&gt;tttcsr ， -&gt;kltcsr → 发送器状态寄存器&lt;br/&gt;
-&gt;tttbuf ， -&gt;kltbuf → 发送器数据缓存寄存器&lt;br/&gt;
*使用了[[编程技巧#无名结构]]
*无名结构 定义在 [[file:tty.c|tty.c]] ，[[file:kl.c|kl.c]]
*寄存器 定义参看 [[字符设备管理]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:字符设备寄存器 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:编程技巧</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Align===right
|__TOC__
|}
=[[pdp11:JSR|JSR]] PC,DST=

==解释==
将当前PC入栈,从DST中恢复先前的PC 

=[[pdp11:RTS|RTS]] PC=

==解释==
退栈恢复先前PC,回到子程序调用前的现场,使程序继续执行

=无名结构=
==举例==
&lt;div class="wikicode"&gt;
2313 struct&lt;br/&gt;
2314 {&lt;br/&gt;
2315 &nbsp;&nbsp;&nbsp;&nbsp;int rsr;&lt;br/&gt;
2316 &nbsp;&nbsp;&nbsp;&nbsp;int rbr;&lt;br/&gt;
2317 &nbsp;&nbsp;&nbsp;&nbsp;int xsr;&lt;br/&gt;
2318 &nbsp;&nbsp;&nbsp;&nbsp;int xbr;&lt;br/&gt;
2319 };&lt;br/&gt;
...&lt;br/&gt;
2393 while((KL-&gt;xsr&0200) == 0)&lt;br/&gt;
2394 ;&lt;br/&gt;
...&lt;br/&gt;
&lt;/div&gt;
==解释==
*无名结构 是在Unix V6中可以被编译的特殊结构，现代C语言编译器已经无法编译了
*无名结构 多用于方便寻址
*例中
::KL是一个地址，为0177560
::KL-&gt;xsr 即 0177564 地址中的数据

=直接取地址数据=
==解释==
===问题===
:SW = 0177570，为一内存地址
:现要判断该地址里的内容是否为0

===方法1:===
:if(SW == 0)
:由于SW是一个指针,所以显然不行

===方法2:===
:if(SW-&gt; ==0)
:C语言中显然没有这样的语法,所以也行不通

===方法3:===
*首先定义一个无名结构体,参考[[编程技巧#无名结构|无名结构]]
&lt;div class="wikiheadcode"&gt;
0173 &nbsp;&nbsp;&nbsp;&nbsp;/* single integer /*&lt;br/&gt;
0174 &lt;br/&gt;
0175 &nbsp;struct{int integ; }&lt;br/&gt;
&lt;/div&gt;
*现在就可以通过语句if (SW-&gt;integ == 0) 来判断SW所指向的值是否为空了

=设置处理机状态字=
*汇编代码中经常设置[[处理机状态字]]，主要有以下的形式
*[[pdp11:BIC|BIC]] 指令，用于清位，例如&lt;div class="wikiheadcode"&gt; [[pdp11:BIC|BIC]] $340,PS&lt;/div&gt;用于将 [[处理机状态字]] 5-7 位清零
*[[pdp11:BIS|BIS]] 指令，用于置位，例如&lt;div class="wikiheadcode"&gt; [[pdp11:BIS|BIS]] $40,PS&lt;/div&gt;用于将 [[处理机状态字]] 第5位 置1

=负数表示堆栈区=
*常用 负数 表示堆栈区，举例说明如下
*设 n = -5，补码为 1111111111111011
*补码 按照 [[内存管理|虚实地址映照]](以[[用户态]]为例) ，转换为如下地址
**使用 UISA7/UISD7
**块号为 128
**块内偏移 为 59 (倒数第5字节)
**刚好 为 堆栈的第5个元素
*常用 -n 表示 堆栈区 的 第n元素</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:编程技巧 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>Skill:设备号</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*举例&lt;div class="wikicode"&gt;dev.d_major&lt;br/&gt;dev.d_minor&lt;/div&gt;
*使用了[[编程技巧#无名结构|编程技巧之无名结构]]，结构定义在 [[file:conf.h|conf.h]]
*从 设备号 分离出 主设备号 和 从设备号
*.d_major 为主设备号
*.d_minor 为从设备号</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page Skill:设备号 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>中断</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=中断处理过程=
*由 硬件产生 中断
*处理机 接受 中断，进行 处理
**将 旧的 pc , ps 保护入栈
**从 中断向量表([[file:low.s|low.s]]) 取出 新的pc,ps
*继续运行 进行中断处理
**根据 中断入口不同，会调用不同的中断处理函数&lt;br/&gt;一般调用 [[code:call|call]] 进行中断处理
**[[code:call|call]] 进行进一步的现场保护 ,并调用具体设定的中断处理子程序
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/main_interupt.png"/></p>
=中断向量=
*中断向量由新的PC,PS构成，参看 中断处理过程
=陷入=
*由 软件产生的中断 
*其处理机制与一般的中断基本无异,只有细微的区别:
**1.陷入矢量表在[[file:low.s|low.s]]的511 - 518行定义
**2.陷入时首先进入一段汇编程序[[code:0751 - 0805|汇编trap]]
**3.陷入调用[[code:call1|call1]]而非中断的[[code:call|call]]进行进一步现场保护
**4.现场保护结束后陷入会调用[[code:trap|c语言版trap]]进行进一步处理
=举例=
如 rk 磁盘产生 中断
*硬件 保护 旧的pc，ps入栈
*从 中断向量表(内存地址220/[[file:low.s|low.s]] 544) 取出新的pc,ps
**pc = rkio ([[file:low.s|low.s]] 577)
**ps = br4 ([[file:low.s|low.s]] 502)
*rkio 调用[[code:call|call]] , 并将 中断处理子程序 [[code:rkintr|rkintr]] 函数指针传给 [[code:call|call]]
*[[code:call|call]]
**进行 进一步的现场保护
** 调用[[code:rkintr|rkintr]] 处理这次中断</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 中断 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>中断处理的现场保护</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*参看 [[中断]]
*主要由 硬件保护 和 [[code:call|call]]/[[code:call1|call1]] 两部分进行现场保护
*保护的结构如下
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/code_0751_stack_2.png"/></p></td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 中断处理的现场保护 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>中断的参数传递</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>进入中断，例如用户调用[[系统调用]]时
#R0,R1...寄存器用于存储传入的参数
#先进行[[中断处理的现场保护]]，将R0,R1等保护入栈
#在系统调用函数中，通过[[skill:u.u_ar0|u.u_ar0的寻址方法]]，找到堆栈中存储的R0、R1、...值，作为参数使用
#如果系统调用函数有返回值，则存储到堆栈中存储的R0、R1、...的位置，返回给用户使用</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 中断的参数传递 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>代码行表</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>代码行表 链接代码行到相应分析页面 

{===Class==="wikitable" border="1" cellspacing="0" align="center" style="width:50%"
!代码行
!链接
|-
|0100 - 0199
|[[file:param.h|param.h]]
|-
|0200 - 0266
|[[file:systm.h|systm.h的部分定义区]]
|-
|0267 - 0299
|[[code:struct mount|struct mount]]
|-
|0300 - 0349
|[[file:seg.h|seg.h]]
|-
|0350 - 0377
|[[code:proc|proc]]
|-
|0378 - 0399
|[[file:proc.h|proc.h的部分定义区]]
|-
|0400 - 0460
|[[code:user|user]]
|-
|0461 - 0499
|[[file:user.h|user.h的定义区]]
|-
|0500 - 0599
|[[file:low.s|low.s]]
|-
|0600 - 0609
|[[file:m40.s|m40.s的部分]]
|-
|0610 - 0673
|[[code:start|start]]
|-
|0674 - 0693
|[[code:clearseg|clearseg]]
|-
|0694 - 0722
|[[code:copyseg|copyseg]]
|-
|0723 - 0750
|[[code:savu|savu]]&lt;br/&gt;[[code:retu|retu]]&lt;br/&gt;[[code:aretu|aretu]]
|-
|0751 - 0805
|
[[code:0751 - 0805|汇编trap]]&lt;br/&gt;
[[code:0751 - 0805|call1]]&lt;br/&gt;
[[code:0751 - 0805|call]]&lt;br/&gt;
|-
|0806 - 0886
|
[[code:fubyte|fubyte]]&lt;br/&gt;
[[code:subyte|subyte]]&lt;br/&gt;
[[code:fuibyte|fuibyte]]&lt;br/&gt;
[[code:suibyte|suibyte]]&lt;br/&gt;
[[code:fuword|fuword]]&lt;br/&gt;
[[code:suword|suword]]&lt;br/&gt;
[[code:fuiword|fuiword]]&lt;br/&gt;
[[code:suiword|suiword]]&lt;br/&gt;
|-
|0887 - 0892
|[[code:savfp|savfp]]&lt;br/&gt;[[code:display|display]]
|-
|0893 - 0922
|[[code:incupc|incupc]]
|-
|0923 - 0966
|[[code:getc|getc]]
|-
|0967 - 1006
|[[code:putc|putc]]
|-
|1007 - 1241
|[[code:backup|backup]]
|-
|1242 - 1281
|[[code:copyin|copyin]]&lt;br/&gt;[[code:copyout|copyout]]
|-
|1282 - 1290
|[[code:idle|idle]]
|-
|1291 - 1316
|[[code:spl|spl0, spl1, spl4, spl5, spl6, spl7]]
|-
|1317 - 1324
|[[code:dpadd|dpadd]]
|-
|1325 - 1349
|[[code:dpcmp|dpcmp]]
|-
|1350 - 1390
|[[code:dump|dump]]
|-
|1391 - 1398
|[[code:ldiv|ldiv]]
|-
|1399 - 1407
|[[code:lrem|lrem]]
|-
|1408 - 1417
|[[code:lshift|lshift]]
|-
|1418 - 1427
|[[code:csv|csv]]
|-
|1428 - 1438
|[[code:cret|cret]]
|-
|1439 - 1499
|[[file:m40.s|m40.s的定义区]]
|-
|1500 - 1530
|[[file:main.c|main.c的定义区]]
|-
|1531 - 1639
|[[code:main|main]]
|-
|1640 - 1731
|[[code:estabur|estabur]]
|-
|1732 - 1766
|[[code:sureg|sureg]]
|-
|1767 - 1799
|[[code:nseg|nseg]]
|-
|1800 - 1920
|[[code:newproc|newproc]]
|-
|1921 - 2053
|[[code:sched|sched]]
|-
|2054 - 2108
|[[code:sleep|sleep]]
|-
|2109 - 2128
|[[code:wakeup|wakeup]]
|-
|2129 - 2148
|[[code:setrun|setrun]]
|-
|2149 - 2169
|[[code:setpri|setpri]]
|-
|2170 - 2249
|[[code:swtch|swtch]]
|-
|2250 - 2299
|[[code:expand|expand]]
|-
|2300 - 2328
|[[file:prf.c|prf.c的定义区]]
|-
|2329 - 2364
|[[code:printf|printf]]
|-
|2365 - 2377
|[[code:printn|printn]]
|-
|2378 - 2408
|[[code:putchar|putchar]]
|-
|2409 - 2425
|[[code:panic|panic]]
|-
|2426 - 2438
|[[code:prdev|prdev]]
|-
|2439 - 2499
|[[code:deverror|deverror]]
|-
|2500 - 2520
|[[code:struct map|struct map]]
|-
|2521 - 2548
|[[code:malloc|malloc]]
|-
|2549 - 2599
|[[code:mfree|mfree]]
|-
|2600 - 2649
|[[file:reg.h|reg.h]]
|-
|2650 - 2662
|[[file:trap.c|trap.c的定义区]]
|-
|2663 - 2671
|[[code:sysent|sysent]]
|-
|2672 - 2681
|[[code:regloc|regloc]]
|-
|2682 - 2825
|[[code:trap|trap]]
|-
|2826 - 2850
|[[code:trap1|trap1]]
|-
|2851 - 2859
|[[code:nosys|nosys]]
|-
|2860 - 2899
|[[code:nullsys|nullsys]]
|-
|2900 - 2999
|[[file:sysent.c|sysent.c]]
|-
|3000 - 3007
|[[file:sys1.c|sys1.c的定义区]]
|-
|3008 - 3200
|[[code:exec|exec]]
|-
|3201 - 3211
|[[code:rexit|rexit]]
|-
|3212 - 3262
|[[code:exit|exit]]
|-
|3263 - 3319
|[[code:wait|wait]]
|-
|3320 - 3349
|[[code:fork|fork]]
|-
|3350 - 3399
|[[code:sbreak|sbreak]]
|-
|3400 - 3412
|[[file:sys4.c|sys4.c的定义区]]
|-
|3413 - 3418
|[[code:getswit|getswit]]
|-
|3419 - 3426
|[[code:gtime|gtime]]
|-
|3427 - 3437
|[[code:stime|stime]]
|-
|3438 - 3450
|[[code:setuid|setuid]]
|-
|3451 - 3458
|[[code:getuid|getuid]]
|-
|3459 - 3470
|[[code:setgid|setgid]]
|-
|3471 - 3478
|[[code:getgid|getgid]]
|-
|3479 - 3484
|[[code:getpid|getpid]]
|-
|3485 - 3491
|[[code:sync|sync]]
|-
|3492 - 3504
|[[code:nice|nice]]
|-
|3505 - 3536
|[[code:unlink|unlink]]
|-
|3537 - 3558
|[[code:chdir|chdir]]
|-
|3559 - 3573
|[[code:chmod|chmod]]
|-
|3574 - 3586
|[[code:chown|chown]]
|-
|3587 - 3612
|[[code:smdate|smdate]]
|-
|3613 - 3628
|[[code:ssig|ssig]]
|-
|3629 - 3654
|[[code:kill|kill]]
|-
|3655 - 3665
|[[code:times|times]]
|-
|3666 - 3699
|[[code:profil|profil]]
|-
|3700 - 3707
|[[file:clock.c|clock.c]]
|-
|3708 - 3832
|[[code:clock|clock]]
|-
|3833 - 3899
|[[code:timeout|timeout]]
|-
|3900 - 3923
|[[file:sig.c|sig.c的定义区]]
|-
|3924 - 3940
|[[code:ipc|ipc]]
|-
|3941 - 3957
|[[code:signal|signal]]
|-
|3958 - 3978
|[[code:psignal|psignal]]
|-
|3979 - 4008
|[[code:issig|issig]]
|-
|4009 - 4034
|[[code:stop|stop]]
|-
|4035 - 4082
|[[code:psig|psig]]
|-
|4083 - 4129
|[[code:core|core]]
|-
|4130 - 4159
|[[code:grow|grow]]
|-
|4160 - 4197
|[[code:ptrace|ptrace]]
|-
|4198 - 4299
|[[code:procxmt|procxmt]]
|-
|4300 - 4349
|[[code:text|struct text]]
|-
|4350 - 4356
|[[file:text.c|text.c的定义区]]
|-
|4357 - 4392
|[[code:xswap|xswap]]
|-
|4393 - 4416
|[[code:xfree|xfree]]
|-
|4417 - 4485
|[[code:xalloc|xalloc]]
|-
|4486 - 4499
|[[code:xccdec|xccdec]]
|-
|4500 - 4536
|[[code:struct buf|struct buf]]
|-
|4537 - 4560
|[[code:struct devtab|struct devtab]]
|-
|4561 - 4599
|[[file:buf.h|buf.h的定义区]]
|-
|4600 - 4607
|[[file:conf.h|conf.h的定义区]]
|-
|4608 - 4623
|[[code:bdevsw|bdevsw[1]]]
|-
|4624 - 4631
|[[code:nblkdev|nblkdev]]
|-
|4632 - 4642
|[[code:cdevsw|cdevsw[1]]]
|-
|4643 - 4649
|[[code:nchrdev|nchrdev]]
|-
|4650 - 4667
|[[code:bdevsw|bdevsw[2]]]
|-
|4668 - 4694
|[[code:cdevsw|cdevsw[2]]]
|-
|4695 - 4699
|[[code:4695 - 4699|rootdev,swapdev,swplo,nswap的定义区]]
|-
|4700 - 4749
|[[file:bio.c|bio.c的定义区]]
|-
|4750 - 4767
|[[code:bread|bread]]
|-
|4768 - 4803
|[[code:breada|breada]]
|-
|4804 - 4826
|[[code:bwrite|bwrite]]
|-
|4827 - 4851
|[[code:bdwrite|bdwrite]]
|-
|4852 - 4865
|[[code:bawrite|bawrite]]
|-
|4866 - 4894
|[[code:brelse|brelse]]
|-
|4895 - 4912
|[[code:incore|incore]]
|-
|4913 - 4977
|[[code:getblk|getblk]]
|-
|4978 - 4994
|[[code:iowait|iowait]]
|-
|4995 - 5013
|[[code:notavil|notavil]]
|-
|5014 - 5034
|[[code:iodone|iodone]]
|-
|5035 - 5050
|[[code:clrbuf|clrbuf]]
|-
|5051 - 5086
|[[code:binit|binit]]
|-
|5087 - 5117
|[[code:devstart|devstart]]
|-
|5118 - 5145
|[[code:rhstart|rhstart]]
|-
|5146 - 5180
|[[code:mapalloc|mapalloc]]
|-
|5181 - 5191
|[[code:mapfree|mapfree]]
|-
|5192 - 5222
|[[code:swap|swap]]
|-
|5223 - 5247
|[[code:bflush|bflush]]
|-
|5248 - 5328
|[[code:physio|physio]]
|-
|5329 - 5349
|[[code:geterror|geterror]]
|-
|5350 - 5387
|[[file:rk.c|rk.c的定义区]]
|-
|5388 - 5418
|[[code:rkstrategy|rkstrategy]]
|-
|5419 - 5438
|[[code:rkaddr|rkaddr]]
|-
|5439 - 5449
|[[code:rkstart|rkstart]]
|-
|5450 - 5474
|[[code:rkintr|rkintr]]
|-
|5475 - 5481
|[[code:rkread|rkread]]
|-
|5482 - 5499
|[[code:rkwrite|rkwrite]]
|-
|5500 - 5514
|[[code:struct file|struct file]]
|-
|5515 - 5549
|[[file:file.h|file.h 的部分定义区]]
|-
|5550 - 5599
|[[code:struct filsys|struct filsys]]
|-
|5600 - 5617
|[[code:struct inode|struct inode[1] ]]
|-
|5618 - 5649
|[[file:ino.h|ino.h 的 部分定义区]]
|-
|5650 - 5676
|[[code:struct inode|struct inode[2] ]]
|-
|5677 - 5699
|[[file:inode.h|inode.h 的 部分定义区]]
|-
|5700 - 5706
|[[file:sys2.c|sys2.c 的定义区]]
|-
|5707 - 5715
|[[code:read|read]]
|-
|5716 - 5724
|[[code:write|write]]
|-
|5725 - 5760
|[[code:rdwr|rdwr]]
|-
|5761 - 5776
|[[code:open|open]]
|-
|5777 - 5797
|[[code:creat|creat]]
|-
|5798 - 5841
|[[code:open1|open1]]
|-
|5842 - 5856
|[[code:close|close]]
|-
|5857 - 5904
|[[code:seek|seek]]
|-
|5905 - 5947
|[[code:link|link]]
|-
|5948 - 5975
|[[code:mknod|mknod]]
|-
|5976 - 5999
|[[code:sslep|sslep]]
|-
|6000 - 6009
|[[file:sys3.c|sys3.c的定义区]]
|-
|6010 - 6023
|[[code:fstat|fstat]]
|-
|6024 - 6039
|[[code:stat|stat]]
|-
|6040 - 6064
|[[code:stat1|stat1]]
|-
|6065 - 6081
|[[code:dup|dup]]
|-
|6082 - 6139
|[[code:smount|smount]]
|-
|6140 - 6174
|[[code:sumount|sumount]]
|-
|6175 - 6199
|[[code:getmdev|getmdev]]
|-
|6200 - 6209
|[[file:rdwri.c|rdwri.c的定义区]]
|-
|6210 - 6264
|[[code:readi|readi]]
|-
|6265 - 6321
|[[code:writei|writei]]
|-
|6322 - 6334
|[[code:max|max]]
|-
|6335 - 6349
|[[code:min|min]]
|-
|6350 - 6399
|[[code:iomove|iomove]]
|-
|6400 - 6406
|[[file:subr.c|subr.c的定义区]]
|-
|6407 - 6509
|[[code:bmap|bmap]]
|-
|6510 - 6533
|[[code:passc|passc]]
|-
|6534 - 6560
|[[code:cpass|cpass]]
|-
|6561 - 6571
|[[code:nodev|nodev]]
|-
|6572 - 6580
|[[code:nulldev|nulldev]]
|-
|6581 - 6599
|[[code:bcopy|bcopy]]
|-
|6600 - 6610
|[[file:fio.c|fio.c的定义区]]
|-
|6611 - 6633
|[[code:getf|getf]]
|-
|6634 - 6659
|[[code:closef|closef]]
|-
|6660 - 6693
|[[code:closei|closei]]
|-
|6694 - 6729
|[[code:openi|openi]]
|-
|6730 - 6781
|[[code:access|access]]
|-
|6782 - 6805
|[[code:owner|owner]]
|-
|6806 - 6819
|[[code:suser|suser]]
|-
|6820 - 6836
|[[code:ufalloc|ufalloc]]
|-
|6837 - 6899
|[[code:falloc|falloc]]
|-
|6900 - 6910
|[[file:alloc.c|alloc.c的定义区]]
|-
|6911 - 6943
|[[code:iinit|iinit]]
|-
|6944 - 6993
|[[code:alloc|alloc]]
|-
|6994 - 7029
|[[code:free|free]]
|-
|7030 - 7054
|[[code:badblock|badblock]]
|-
|7055 - 7125
|[[code:ialloc|ialloc]]
|-
|7126 - 7148
|[[code:ifree|ifree]]
|-
|7149 - 7187
|[[code:getfs|getfs]]
|-
|7188 - 7249
|[[code:update|update]]
|-
|7250 - 7257
|[[file:iget.c|iget.c的定义区]]
|-
|7258 - 7335
|[[code:iget|iget]]
|-
|7336 - 7365
|[[code:iput|iput]]
|-
|7366 - 7403
|[[code:iupdat|iupdat]]
|-
|7404 - 7450
|[[code:itrunc|itrunc]]
|-
|7451 - 7470
|[[code:maknode|maknode]]
|-
|7471 - 7499
|[[code:wdir|wdir]]
|-
|7500 - 7505
|[[file:nami.c|nami.c的定义区]]
|-
|7506 - 7673
|[[code:namei|namei]]
|-
|7674 - 7684
|[[code:schar|schar]]
|-
|7685 - 7699
|[[code:uchar|uchar]]
|-
|7700 - 7715
|[[file:pipe.c|pipe.c的定义区]]
|-
|7716 - 7754
|[[code:pipe|pipe]]
|-
|7755 - 7801
|[[code:readp|readp]]
|-
|7802 - 7856
|[[code:writep|writep]]
|-
|7857 - 7874
|[[code:plock|plock]]
|-
|7875 - 7899
|[[code:prele|prele]]
|-
|7900 - 7914
|[[code:struct clist|struct clist]]
|-
|7915 - 7944
|[[code:struct tty|struct tty]]
|-
|7945 - 7999
|[[file:tty.h|tty.h的部分]]
|-
|8000 - 8021
|[[file:kl.c|kl.c的定义区]]
|-
|8022 - 8054
|[[code:klopen|klopen]]
|-
|8055 - 8061
|[[code:klclose|klclose]]
|-
|8062 - 8065
|[[code:klread|klread]]
|-
|8066 - 8069
|[[code:klwrite|klwrite]]
|-
|8070 - 8077
|[[code:klxint|klxint]]
|-
|8078 - 8089
|[[code:klrint|klrint]]
|-
|8090 - 8099
|[[code:klsgtty|klsgtty]]
|-
|8100 - 8161
|[[file:tty.c|tty.c的定义区]]
|-
|8162 - 8179
|[[code:gtty|gtty]]
|-
|8180 - 8193
|[[code:stty|stty]]
|-
|8194 - 8215
|[[code:sgtty|sgtty]]
|-
|8216 - 8230
|[[code:wflushtty|wflushtty]]
|-
|8231 - 8249
|[[code:cinit|cinit]]
|-
|8250 - 8268
|[[code:flushtty|flushtty]]
|-
|8269 - 8326
|[[code:canon|canon]]
|-
|8327 - 8366
|[[code:ttyinput|ttyinput]]
|-
|8367 - 8479
|[[code:ttyoutput|ttyoutput]]
|-
|8480 - 8494
|[[code:ttrstrt|ttrstrt]]
|-
|8495 - 8529
|[[code:ttstart|ttstart]]
|-
|8530 - 8546
|[[code:ttread|ttread]]
|-
|8547 - 8570
|[[code:ttwrite|ttwrite]]
|-
|8571 - 8599
|[[code:ttystty|ttystty]]
|-
|8600 - 8799
|[[file:pc.c|pc.c]]
|-
|8800 - 8999
|[[file:lp.c|lp.c]]
|-
|9000 - 9015
|[[file:mem.c|mem.c的定义区]]
|-
|9016 - 9040
|[[code:mmread|mmread]]
|-
|9041 - 9099
|[[code:mmwrite|mmwrite]]
|}</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 代码行表 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>作者</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=jeou1988=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/jeou.jpg|right"/></p>&lt;br/&gt;
*真实姓名:周金杰 jeou,zhou
*性别:男
*国籍:中国
*职业:学生
*在读学校:同济大学
*专业:信息安全
*学历:本科在读
*邮箱:jinjiezhou1988@163.com
*QQ:281073981
*MSN:jinjiezhou1988@163.com
*兴趣:体育,计算机,以及世间一切美好的事物
*自我评语:我是奶爸我怕谁
*Tachikoma的评价: 在源代码分析中展现了精湛的"奶爸流"技术，堪称奶爸流的典范
&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
=Tachikoma=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Tachikoma.jpg|right"/></p>
*黄炎
*同济大学 信息安全 06届
*Email:
**uni.tachikoma@gmail.com
*QQ:
**547771626
*MSN:
**ikari.shinji.eva@gmail.com
*留下前人的墨宝，共勉
::铁甲将军夜渡关&lt;br/&gt;
::朝臣待漏五更寒&lt;br/&gt;
::山寺日高僧未起&lt;br/&gt;
::看来名利不如闲&lt;br/&gt;</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 作者 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>信号系统</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*UNIX V6 用 信号系统 进行进程信息交换和控制
*一般步骤
**信号 发送到 指定进程的[[code:proc|p.p_sig]]
**在 运行的过程中 固定的点 检查信号
**处理信号
***信号的处理方式 存放在 [[code:user|u-signal]]&lt;br/&gt;若元素值为0，则处理方式为终止本进程&lt;br/&gt;若元素值为奇数，则对信号不做处理
*信号检测时机
**[[code:clock|clock]]
**[[code:sleep|sleep]]
*信号 还构成了 UNIX的 [[跟踪]]系统
=信号列表=
*参看 [[参考文献]] 之 UNIX操作系统教程 P152</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 信号系统 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>共享正文段</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*共享正文段 存储 在进程运行过程中不改变的代码段和数据
*共享正文段可能存放在内存,也可能被调出内存,存储在盘交换区上

=共享正文段控制块=
*控制块常驻内存
*定义在 [[code:text|text]] 结构
*参考 [[code:text|text]]

=参考=
*[[进程图像]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 共享正文段 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>关中断</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=关中断的原因=
*操作系统在处理某些临界资源时,需要保证这些资源的实时性和有效性,以防止其他进程上台后对这些资源进行篡改.因此需要进行关中断操作,将待操作的临界资源"保护"起来,直至操作完毕后再将其释放.
=关中断的方法=
*通过对[[pdp11:处理机状态字|处理机状态字]]中关于[[处理机优先级]]的位(5-7位)的设置为111来关中断(即将处理机优先级设置为7)来实现关中断操作
*关中断后系统无法响应中断,[[code:swtch|swtch]]函数不会被调用,于是也就不会有其他进程被调度上台,临界资源也就不会被修改
=解除关中断=
*[[开中断]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 关中断 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>关于汇编函数的说明</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*[[汇编函数调用的现场保护]]
*R0 寄存器的值 作为函数返回值
*汇编一些常用技巧用法，参看[[编程技巧]]&lt;br/&gt;必要的将在代码中作出说明</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 关于汇编函数的说明 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>内存打开文件结构</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Align===right
|__TOC__
|}
=概述=
*这是用来管理最近正在使用的文件的一套机制
*文件打开后交由这套机制管理
*文件关闭时再从这种管理机制中退出


=打开文件结构组成=
*内存打开文件结构由三部分组成,它们是内存文件控制块inode,打开文件控制块file和进程打开文件表
==内存文件控制块==
*内存[[code:struct inode|INODE]]块,我们称它为内存[[code:struct inode|INODE]]表,一般包含NINODE个内存inode
**NINODE 定义在[[file:param.h|param.h]]行，值为 100 
*与外存[[code:struct inode|INODE]]结构基本相同,略有增,减,详见[[code:struct inode|struct inode]]

==打开文件控制块==
*[[code:struct file|file结构]]用来记录打开文件所需的一些附加信息,以反映在打开文件结构中应该加以反映的一些动态要求
**例如一个文件可以被多个进程,以不同的权限打开
**又例如一个文件在读取过程中读,写的位置指针是不断变化的,这就需要[[code:struct file|file结构]]来控制
*内存中一般有NFILE个[[code:struct file|file结构]]可供使用
**NFILE 定义在[[file:param.h|param.h]]的132行,值为100

==进程打开文件表==
*每个进程的[[code:user|USER]]结构中都有一张打开文件表u-ofile[NOFILE]
**NOFILE的定义见[[file:param.h|param.h]]的139行,值为15
*该表的每一项都是一个指针,指向一个打开文件控制块[[code:struct file|file结构]]结构

=打开文件过程=
*进程打开一个文件时,首先找到或者分配一个内存[[code:struct inode|INODE]]
*接着分配一个[[code:struct file|file结构]],建立两者的关系,即将f_inode指向inode
*最后还需要在进程的u-ofile表中分配一项,指向相应的file结构

=打开文件结构图示=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/file_open.png"/></p></td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 内存打开文件结构 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>内存映射文件</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>内存映射文件 是 一种特殊的设备装载文件
*允许直接读取内存内容
*驱动函数 ([[code:cdevsw|cdevsw]])
**读函数 [[code:mmread|mmread]]
**写函数 [[code:mmwrite|mmwrite]]
*从设备号 定义
**0 内存
**1 核心态内存
**2 "无底洞"模式</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 内存映射文件 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>内存管理</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=概述=
*描述 UNIX 内存管理的策略

=PDP-11的内存管理机制=
*参看 [[pdp11:内存管理]]

=UNIX 的内存管理机制=
==核心态内存管理机制==
*UNIX核心态内存使用 用KISA KISD寄存器管理(参看[[pdp11:内存管理]])
*以下寄存器 在系统初启时固定
**KISA0/KISD0 - KISA5/KISD5 载入 UNIX代码
**KISA7/KISD7 为 系统I/O页
*KISA6/KISD6 指向了现行进程的ppda区(参看 [[进程图像]])

==用户态内存管理机制==
*UNIX用户态内存使用 用UISA UISD寄存器管理(参看[[pdp11:内存管理]])
&lt;br/&gt;举例说明
:设 有一用户进程，共享正文段占内存页2.5页，数据段2.25页，栈段0.5页 (128内存块/页，64字节/内存块)
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/memory_management.png"/></p>
*ta 为 共享正文段的起始地址
*da 为 ppda区的起始地址
*进程迁入内存时，地址映照表中da和ta取相应值
*进程迁出内存时，地址映照表中da取0，ta取16 (PPDA区长为16块)
*关于栈段起始地址的算法
**栈段起始地址 = 数据段结束地址 + 栈段长度 - 128
***数据段结束地址为 da+288
***栈段长度为 64 块
***栈段起始地址 = da + 288 + 64 - 128 = da + 224</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 内存管理 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>函数调用的现场保护</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Align===right
|__TOC__
|}
=综述=
*本篇描述的函数调用指一般的C语言函数调用
*函数调用编译成[[pdp11:JSR|jsr]] PC,DST的形式，参见[[编程技巧]]
*编译器在函数体前后加入现场保护/还原代码
**在函数体首加入 [[pdp11:JSR|jsr]] R5,[[code:csv|csv]]
**在函数体末加入 [[pdp11:JMP|jmp]] [[code:cret|cret]]
=分析=
*[[pdp11:JSR|jsr]] PC,DST 
**将PC[0]入栈
**程序转入被调用函数
*[[pdp11:JSR|jsr]] R5,[[code:csv|csv]] 
**R5[0]入栈
**当前PC[1]→R5([[code:csv|csv]]程序要求R5指向返回地址)
**程序转入[[code:csv|csv]]
*[[code:csv|csv]]函数中
**R2[0]、R3[0]、R4[0]入栈
**R5形成勾连(参看[[环境指针]])
*至此 
**函数返回地址PC[0]入栈被保护
**R5[0]、R2[0]、R3[0]、R4[0] 均入栈被保护
**R5指向R5[0]的栈内地址形成勾连(参看[[环境指针]])
**所有必要参量均被保护
*[[pdp11:JMP|jmp]] [[code:cret|cret]]
**逆序还原R2[0]、R3[0]、R4[0]
**还原栈顶指针SP←R5
**R5还原勾连(参看[[环境指针]])
**函数返回
=举例=
C语言代码&lt;br/&gt;
&lt;div class="wikicode"&gt;
test()&lt;br/&gt;
{&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;printf("Hello,World!");&lt;br/&gt;
}&lt;br/&gt;
main()&lt;br/&gt;
{&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;test();&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;return(0);&lt;br/&gt;
}&lt;br/&gt;
&lt;/div&gt;
经过编译和反汇编，形成代码
&lt;div class="wikicode"&gt;
:...&lt;br/&gt;
:&lt;b&gt;[[pdp11:JSR|jsr]] r5,[[code:csv|csv]]&lt;/b&gt;&lt;br/&gt;
::mov $cret+16,(sp)&lt;br/&gt;
::[[pdp11:JSR|jsr]] pc,*$_printf&lt;br/&gt;
:&lt;b&gt;[[pdp11:JMP|jmp]] [[code:cret|cret]]&lt;/b&gt;&lt;br/&gt;
:&lt;b&gt;[[pdp11:JSR|jsr]] r5,[[code:csv|csv]]&lt;/b&gt;&lt;br/&gt;
::&lt;b&gt;[[pdp11:JSR|jsr]] pc,_test&lt;/b&gt;&lt;br/&gt;
:&lt;b&gt;[[pdp11:JMP|jmp]] [[code:cret|cret]]&lt;/b&gt;&lt;br/&gt;
:...&lt;br/&gt;
&lt;/div&gt;

=参考=
*[[汇编函数调用的现场保护]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 函数调用的现场保护 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>参考文献</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*The PDP11-40 Processor Handbook
::http://pdos.csail.mit.edu/6.828/2005/pdp11/
*PDP-11 Peripherals Handbook 1972
::http://www.bitsavers.org/pdf/dec/pdp11/handbooks/PDP11_PeripheralsHbk_1972.pdf
*UNIX Assembler Reference Manual
::http://www.tom-yam.or.jp/2238/ref/as.pdf
*UNIX操作系统教程
::尤晋元 西安电子科技大学出版社
*虚拟机
::http://simh.trailing-edge.com/</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 参考文献 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>处理机优先级</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*处理机优先级共分为0~7级(由低至高)
*处理机优先级通过[[pdp11:处理机状态字|处理机状态字]]的5-7位得以反映与设置
*处理机优先级被设定后,优先级不高于当前处理机优先级的中断将无法得到响应
*处理机优先级被设为7时,所有中断都无法得到响应,称作[[关中断]]
*处理机优先级被设为0时,所有中断都能被响应,称作[[开中断]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 处理机优先级 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>处理机状态</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*进程一般可分为两种状态:核心态和用户态
*[[pdp11:处理机状态字|处理机状态字]]的第14,15位指示了当前进程处于什么状态
=核心态=
*当进程执行核心代码时,称进程当前处于核心态
*核心态地址空间的寻址通过[[Pdp11:内存管理|pdp11 内存管理机制 提供的 核心态页寄存器组KISA[0] - KISA[7]]]实现
*当前进程处于核心态时,执行的内核代码会使用当前进程的[[核心栈]],每个进程都有自己的[[核心栈]]
=用户态=
*当进程在执行用户自己的代码时,称进程当前处于用户态
*用户态地址空间的寻址通过[[Pdp11:内存管理|pdp11 内存管理机制 提供的 用户态页寄存器组UISA[0] - UISA[7]]]实现
*当前进程处于用户态时,执行的内核代码会使用当前进程的[[用户栈]],每个进程都有自己的[[用户栈]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 处理机状态 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>处理机状态字</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT[[Pdp11:处理机状态字]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 处理机状态字 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>字符设备管理</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=字符设备缓存管理=
==数据结构==
*缓存基本块 : [[code:struct cblock|struct cblock]] [[code:cfree|cfree]]
*自由字符缓存队列 : [[code:cfreelist|cfreelist]]
*I/O字符缓存队列 : [[code:struct clist|struct clist]]
*每个字符设备 对应一个 [[code:struct tty|struct tty]]结构
===自由字符缓存队列===
*管理空闲的字符缓存
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Main_cdev_cfreelist.png|center"/></p>
*释放字符缓存时,被释放的缓存插入队首
*分配字符还粗时,从队首开始分配
===I/O字符缓存队列===
*为 I/O 管理缓存池
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Main_cdev_clist.png|center"/></p>
*输出时取位于队首的字符
*输入时将字符输入到队尾
===struct tty 结构===
*用于描述 字符设备(作为终端)
*参看 [[code:struct tty|struct tty]]
*使用3个I/O字符缓存队列
**t_rawq : 原始输入队列
**t_canq : 非原始输入队列(去除了特殊字符)
***特殊字符包括 : "擦除"字符 和 "删除行"字符
**t_outq : 输出队列

==缓存池的改造==
*unix在识别队首缓存中的字符是否全部被用完时采用的方法:
**首先使每个字符缓存起始地址的最地三位皆为0(即8的整数倍)
**从某一字符缓存中取用一个字符后,c-cf +1 ,此时若发现其低三位为0,说明该块已经被用完,向某一字符缓存送字符时也使用类似操作
*由于缓存池的定义说明(见[[file:tty.c|tty.c]]的 8146行)无法保证字符缓存的起始地址为8的整数倍,故需要对cfree[NCLIST]进行斩头去尾
**斩头:即以从cfree[0]开始的第一个地址最低三位皆为0的单元开始形成第一个字符缓存...
**去尾:对于最后一个缓存,必须保证其尾部不能超越cfree[NCLIST-1]的尾部
**关于斩头去尾的具体操作是在[[code:cinit|cinit]]的第8240行实现的
*只有当cfree[0]的起始地址恰好为8的整数倍,缓存池无需改造时,缓存池才会包含100个字符缓存(NCLIST值为100),否则改造后的缓存池只能包含99个字符缓存,造成了一定的空间浪费

=设备寄存器=
*每个字符设备 有4个寄存器
**接收器状态寄存器
**接收器数据缓存寄存器
**发送器状态寄存器
**发送器数据缓存寄存器
===接收器状态寄存器===
*第0位 : 接收器使能位
*第1位 : 数据终端准备就绪位
*第6位 : 接收器中断允许位
*第7位 : 接收器完成位
===接收器数据缓存寄存器===
*第7-0位 : 接收到的字符
*第15位 : 出错位
===发送器状态寄存器===
*第6位 : 发送器中断允许位
*第7位 : 发送器发送器准备就绪位
===发送器数据缓存寄存器===
*第7-0位 : 发送的数据
=设备驱动函数=
*[[code:cdevsw|cdevsw]]
=内存映射文件=
*[[内存映射文件]]
=参考=
*详细说明请参看 [[参考文献]] 之 UNIX操作系统教程</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 字符设备管理 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>寄存器</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT[[pdp11:寄存器]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 寄存器 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>开中断</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*当待处理的邻接资源操作完毕后,系统需要恢复正常响应中断的功能,此时便需要开中断操作
*通过将[[处理机优先级]]设为0来开中断</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 开中断 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>数据字典</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Class==="wikitable" border="1" cellspacing="0" align="center" style="width:50%"
!单词
!链接
|-
|用户态
|[[用户态]]
|-
|核心态
|[[核心态]]
|-
|UISA UISD KISA KISD
|[[内存管理]]
|-
|数据段
|[[进程图像]]
|-
|共享正文段
|[[进程图像]]
|-
|ppda区
|[[进程图像]]
|-
|bss
|[[.bss]]
|-
|信号
|[[信号系统]]
|-
|UID GID RUID RGID
|[[权限管理]]
|-
|SSLEEP SWAIT SRUN SIDL SZOMB SSTOP
|[[file:proc.h|proc.h]]
|-
|SLOAD SSYS SLOCK SSWAP STRC SWTED
|[[file:proc.h|proc.h]]
|-
|R0 R1 R2 R3 R4 R5 R6 SP R7 PC
|[[pdp11:寄存器]]
|-
|PS
|[[pdp11:处理机状态字]]
|-
|虚实地址映照
|[[pdp11:内存管理]]
|-
|rootdir
|[[File:systm.h|systm.h]]
|-
|ka6
|[[file:m40.s|m40.s]]
|-
|runin
|[[file:systm.h|systm.h]]
|-
|runout
|[[file:systm.h|systm.h]]
|-
|runrun
|[[进程调度]]
|-
|coremap
|[[空闲块管理]]
|-
|swapmap
|[[空闲块管理]]
|-
|time
|[[file:systm.h|systm.h]]
|-
|RK磁盘
|[[RK磁盘]]
|-
|updlock
|[[file:systm.h|systm.h]]
|-
|ROOTINO
|[[file:param.h|param.h]]
|-
|IUPD IACC
|[[file:inode.h|inode.h]]
|-
|swapdev
|[[file:systm.h|systm.h]]
|}</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 数据字典 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>数据段</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*通常是指用来存放程序中所声明的变量及用到的数据的一块内存区域
=参考=
*[[进程图像]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 数据段 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>文件系统</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Align===right
|__TOC__
|}
=概述=
*文件系统 在 磁盘上部署特殊的存储结构，参看 [[文件系统#磁盘存储结构|磁盘存储结构]]

=INODE结构=
*INODE结构 为文件系统用来表示文件和目录的管理结构
*UNIX V6 使用了两套INODE结构
**磁盘INODE结构，是磁盘INODE区的存储结构，一个磁盘INODE结构长度为32个字节
**核心INODE结构，是磁盘INODE结构的内存映像，并加入了一些控制信息
*参看[[code:struct inode|struct inode]]
=文件索引结构=
===综述===
*文件索引结构 是 由INODE结构指示文件包含的磁盘块 的机制
*文件根据包含块的多少，分为三类
**小文件
**大文件
**巨型文件
===小文件===
*文件块数 1~8块
*结构如图
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/File_system_index_small.png|小文件索引结构"/></p>
*INODE结构 i-addr数组每个元素直接指向物理块
===大文件===
*文件块数 9~7*256 块
*结构如图(不包含虚线内部分)
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/File_system_index_large.png|大文件/巨型文件索引结构"/></p>
*i-addr数组
**[0]~[6] 各指向一个索引表块，每个索引表(2*256字节)指向256个物理块
**[7] 不使用
===巨型文件===
*文件块数 7*256+1 ~ 7*256+256*256
*结构如上图(包括虚线内部分)
*i-addr数组
**[0]~[6] 和大文件结构相同
**[7]指向间接索引表块，每个间接索引表块指向256个索引表块，每个索引表块指向256个物理块

=磁盘存储结构=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/File_system_storage.png"/></p>
*磁盘的第0块 一般存放机器启动程序，与UNIX核心代码无关
*磁盘的第1块 ，称为超级块，结构为[[code:struct filsys|struct filsys]]，用于管理文件系统
*磁盘的第2 ~ s-isize+1块，为inode区，用于存放inode块([[code:struct inode|struct inode]])，
**磁盘中每个inode结构长度为32个字节，一个磁盘块为512字节，可存放16个inode
**总长s-isize(定义在[[code:struct filsys|struct filsys]])
*磁盘的第s-isize ~ s-fsize-1块，为一般存储块区
*磁盘的盘块总数为 s-fsize(定义在[[code:struct filsys|struct filsys]])

=空闲块管理=
*举例说明文件系统的空闲块管理
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/File_system_free_1.png|frame|center|磁盘文件系统的空闲块管理结构"/></p>
*例子一共管理249个空闲块
*先说明使用的数据结构:管理块
**管理块是磁盘的一个块，前101个字有效
***第一个字存放这个管理块总共管理的空闲块数
***后100个字，为空闲块指针数组，指向各空闲块(首元素指向上一个管理块)
**从磁盘起始地址，前99个空闲块管理在磁盘第一个管理块
***其[1]元素(空闲块指针数组首元素)为0，作为空间用尽标志
**其后99个空闲块管理在磁盘第二个管理块
***其[1]元素(空闲块指针数组首元素)指向上一管理块
**[[code:struct filsys|filsys]]结构管理了最后一组空闲块，形式和管理块一样

<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/File_system_free_2.png|frame|center|释放了一个管理块后的结构"/></p>
*申请占用空闲块的步骤
**若filsys的s-free数组有多于一个的有效元素，弹出最后一个以占用
**若filsys的s-free数组只剩下[0]元素了，且不为0，则
***根据s-free[0]的指针找到上一个管理块，并将其前101个字复制到filsys结构，此时filsys取代了这个管理块的作用，如图
***返回被取代的管理块以占用
**若filsys的s-free[0] == 0,磁盘空间用尽，抛出错误
**参看[[code:alloc|alloc]]
&lt;br/&gt;
*释放占用块的步骤
**将占用块加入 filsys的s-free数组管理
**若数组满，则执行 与申请占用空闲块 的相反步骤
**参看[[code:free|free]]

=空闲INODE管理=
*空闲INODE直接由filsys结构进行管理
*filsys只管理100个空闲INODE块
*如果filsys管理的空闲INODE块用尽，则线性查找100个空闲块置入filsys进行管理
=装载文件系统=
*mount[] 数组用于描述已装载的文件系统，定义在 [[code:struct mount|struct mount]]
*系统启动时，在[[code:iinit|iinit]]中将 主设备 装载到mount[0]
*当每存在一个子设备，/dev 文件夹下存在一个文件与其对应&lt;br/&gt;该文件INODE的i_addr[0]存放该设备的设备号
*当在shell中执行 &lt;div class="wikiheadcode"&gt;/etc/mount /dev/rk2 /rkmount&lt;/div&gt;&lt;br/&gt;将设备rk2装载到/rkmount，形成子文件系统
**附图&lt;br/&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/File_system_mount.png"/></p>
***rkmount INODE块的i_addr[0]存放子系统设备号
****rkmount 称为 块/字符设备 装载INODE
***[[code:struct mount|mount]][x]为子文件系统装载块
***m_bufp 指向子文件系统filsys块在内存中的缓存块
*子文件系统装载参看
**[[code:smount|smount]]
**[[code:sumount|sumount]]

=勾连=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/file_link.png|file_link.png"/></p>

=文件权限=
*一个文件/目录的权限由[[code:struct inode|inode结构的i_mode]] 的末九位表示
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/File_system_permissions.png|center|文件权限字位"/></p>
*权限常量 IREAD IWRITE IEXEC 参看[[file:inode.h|inode.h]]

=inode类型=
*inode的类型由[[code:struct inode|inode结构的i_mode]] 的 13-14 位表示
*一般用 （inode.i_mode && IFMT） 获取 类型号
*类型号 可能值
**IFDIR ：目录
**IFCHR : 字符设备装载INODE(参看[[文件系统#装载文件系统|装载文件系统]])
**IFBLK : 块设备装载INODE(参看[[文件系统#装载文件系统|装载文件系统]])
*常量定义 参看 [[file:inode.h|inode.h]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 文件系统 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>时钟</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=概述=
*UNIX 使用的时钟发生器型号为 KW11-L型线频时钟&lt;br/&gt;若KW11-L不存在，则使用KW11-P型可编程实时时钟
*关于这两种时钟发生器以及其寄存器的说明&lt;br/&gt;参看[[参考文献|PDP-11 Peripherals Handbook]] 91页&lt;br/&gt;这里只讨论其使用

=时钟使用=
*[[file:systm.h|lks(0226)]] 指向时钟发生器的控制/状态寄存器
*启动/重启 时钟发生器&lt;div class="wikicode"&gt;*lks = 0115;&lt;/div&gt;

=时钟中断=
*处理函数 [[code:clock|clock]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 时钟 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>权限管理</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
对于用户，定义了如下变量:
*u_uid 有效用户ID
*u_gid 有效组ID
*u_ruid 真实用户ID
*u_rgid 真实组ID
以上变量均定义在 [[code:user|user]]&lt;br/&gt;

对于进程，定义了如下变量:
*p_uid 进程的用户ID
以上变量定义在 [[code:proc|proc]]&lt;br/&gt;

==有效ID 与 真实ID==
*真实ID 在登录时就已确定，只有具有超级用户权限才可修改
*有效ID 可视为描述对外权限的ID
*举例说明
**某用户登录 
***u_uid = u_ruid = 100
**该用户执行 su 指令，获得超级用户权限
***u_ruid = 100
***u_uid = 0

=相关函数=
*[[code:setuid|setuid]]
*[[code:getuid|getuid]]
*[[code:setgid|setgid]]
*[[code:getgid|getgid]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 权限管理 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>核心态</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[处理机状态#核心态]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 核心态 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>核心栈</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*进程工作于[[核心态]]下时用于保存,恢复现场的栈区
=参考=
*[[进程图像]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 核心栈 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>汇编函数调用的现场保护</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*汇编函数调用的现场保护和普通的[[函数调用的现场保护]]略有差异
*通过举例来说明差异

=举例=
*首先我们写了个小程序作为实例
*实例由两个文件组成，c.c 和 d.s，代码如下
&lt;div class="wikiheadcode"&gt;
//c.c&lt;br/&gt;
main()&lt;br/&gt;
{&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;test(100,999,888);&lt;br/&gt;
}&lt;br/&gt;

//d.s&lt;br/&gt;
.globl test&lt;br/&gt;
_test:&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:MOV|mov]] $3,r0&lt;br/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;[[pdp11:RTS|rts]] pc&lt;br/&gt;
&lt;/div&gt;
*我们在[[pdp11虚拟机]]上编译了上面的代码，并进行反汇编，将得到的汇编代码精简，加以分析
*主程序
&lt;div class="wikiheadcode"&gt;
...&lt;br/&gt;
[[pdp11:JSR|jsr]] pc,30&lt;br/&gt;
&lt;div class="wikinote"&gt;
调用地址30
&lt;/div&gt;
...&lt;br/&gt;
&lt;/div&gt;
*地址30
&lt;div class="wikiheadcode"&gt;
[[pdp11:JSR|jsr]] r5,102&lt;br/&gt;
&lt;div class="wikinote"&gt;
调用地址102，实为变形的[[code:csv|csv]]程序
&lt;/div&gt;
[[pdp11:MOV|mov]] $1570,(sp)&lt;br/&gt;
[[pdp11:MOV|mov]] $1747,-(sp)&lt;br/&gt;
[[pdp11:MOV|mov]] $144,-(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*向堆栈存入三个函数参数：888，999，100
*注意第一个元素是置入栈顶，而压栈了后两个元素
&lt;/div&gt;
[[pdp11:JSR|jsr]] pc,*$62&lt;br/&gt;
&lt;div class="wikinote"&gt;
调用地址62，实为我们写的汇编程序
&lt;/div&gt;
[[pdp11:CMP|cmp]] (sp)+,(sp)+&lt;br/&gt;
&lt;div class="wikinote"&gt;
*从堆栈弹出两个元素
*实为恢复 函数参数压栈前 的堆栈栈顶，注意只需弹出两个元素
*当变化参数个数时，此处也随之变化，总能恢复堆栈栈顶
&lt;/div&gt;
[[pdp11:JMP|jmp]] 120&lt;br/&gt;
&lt;div class="wikinote"&gt;
转入地址120，实为[[code:cret|cret]]程序
&lt;/div&gt;
&lt;/div&gt;
*地址102，对照[[code:csv|csv]]
&lt;div class="wikiheadcode"&gt;
[[pdp11:MOV|mov]] r5,r0&lt;br/&gt;
[[pdp11:MOV|mov]] sp,r5&lt;br/&gt;
[[pdp11:MOV|mov]] r4,-(sp)&lt;br/&gt;
[[pdp11:MOV|mov]] r3,-(sp)&lt;br/&gt;
[[pdp11:MOV|mov]] r2,-(sp)&lt;br/&gt;
[[pdp11:TST|tst]] -(sp)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*这里与[[code:csv|csv]]程序不同，这里直接将栈顶指针上移一位
*主要作用是 现场还原 时能直接调用 地址120的[[code:cret|cret]]
&lt;/div&gt;
[[pdp11:JMP|jmp]] (r0)&lt;br/&gt;
&lt;div class="wikinote"&gt;
*这里与[[code:csv|csv]]程序不同，这里直接转入(r0)地址，并不将PC压栈
&lt;/div&gt;
&lt;/div&gt;
*地址62，是我们写的汇编程序
&lt;div class="wikiheadcode"&gt;
&lt;div class="wikinote"&gt;
进入我们写的汇编函数时，堆栈状况如下:&lt;br/&gt;
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/function_protection_1.png"/></p>
&lt;/div&gt;
[[pdp11:MOV|mov]] $3,r0&lt;br/&gt;
[[pdp11:RTS|rts]] pc&lt;br/&gt;
&lt;/div&gt;

*地址120，与[[code:cret|cret]]一样
&lt;div class="wikiheadcode"&gt;
[[pdp11:MOV|mov]] r5,r1&lt;br/&gt;
[[pdp11:MOV|mov]] -(r1),r4&lt;br/&gt;
[[pdp11:MOV|mov]] -(r1),r3&lt;br/&gt;
[[pdp11:MOV|mov]] -(r1),r2&lt;br/&gt;
[[pdp11:MOV|mov]] r5,sp&lt;br/&gt;
[[pdp11:MOV|mov]] (sp)+,r5&lt;br/&gt;
[[pdp11:RTS|rts]] pc&lt;br/&gt;
&lt;/div&gt;

=总结=
与[[函数调用的现场保护]]的主要差别为：&lt;br/&gt;
:进入我们写的汇编函数时，堆栈状况如下:&lt;br/&gt;
:<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/function_protection_1.png"/></p>
*此堆栈情况与一般的[[函数调用的现场保护]]不同，是由于受到如下因素的影响而不同
**受到了函数传递方式不同的影响
**受到了102地址的程序与[[code:csv|csv]]不同的影响</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 汇编函数调用的现场保护 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>沙盒</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 沙盒 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>环境指针</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*环境指针指向堆栈中用于保护环境变量的区域，方便被保护变量的还原以及退栈操作
*一般用R5寄存器作为环境指针寄存器
*环境指针多用于函数的进入和返回时的退栈操作
=举例=
图中&lt;br/&gt;
*R5寄存器值为R5[2],是堆栈中R5[1]的地址
*R5[1]是R5[0]的地址
*以上形成勾连机制
*当被还原时，根据R5寄存器的值R5[2]的指向，还原R2[1]、R3[1]、R4[1]，并还原R5[1]
*此时R5的值R5[1]指向R5[0]位置，可重复以上机制还原R2[0]、R3[0]、R4[0],...
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/R5.png|center"/></p>
=调用列表=
*[[code:csv|csv]]
*[[code:cret|cret]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 环境指针 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>用户态</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#redirect [[处理机状态#用户态]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 用户态 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>用户栈</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*进程工作于[[用户态]]下时用于保存,恢复现场的栈区
=参考=
*[[进程图像]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 用户栈 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>睡眠优先级</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[进程优先级]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 睡眠优先级 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>睡眠原因</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=睡眠原因=
==tout==
*定义在[[file:systm.h|systm.h]]
*tout是定时睡眠的睡眠原因
*用户调用 [[系统调用|系统调用sleep]]，如sleep(1) (进程睡眠1秒),在Unix内核实际调用[[code:sslep|sslep]]函数，调用进程在tout上睡眠
*在调用[[code:sslep|sslep]]函数而睡眠的所有进程中，tout为最早的睡眠到期时间

==struct buf==
*类型为[[code:struct buf|struct buf]] 的 变量 作为睡眠原因
*是因 等待该buf 的I/O操作完成 而睡眠
===bfreelist===
*若 bfreelist 作为睡眠原因，是因为 [[自由队列]] 为空

==[[code:struct buf|struct buf]].b_flags==
*等待swbuf可用/IO完成而进入睡眠

==filsys.s_flock==
*等待 超级块 的空闲块数组可用而进入睡眠
*参看[[文件系统]]

==filsys.s_ilock==
*等待 超级块 INODE数组可用而进入睡眠
*参看[[文件系统]]

==struct inode==
*等待 该inode结构 而进入睡眠
*参看[[文件系统]]

==(struct inode)+1==
*等待 写管道 而进入睡眠
*参看[[管道]]

==(struct inode)+2==
*等待 读管道 而进入睡眠
*参看[[管道]]

==runin==
*当盘交换区上有进程想调入内存却无法被调入时,0#进程在runin上睡眠
*参看[[进程调度# 0#进程|进程调度之0#进程]]

==runout==
*当盘交换区上没有就绪进程可以调入内存时,0#进程在runout上睡眠
**参看[[进程调度# 0#进程|进程调度之0#进程]]

==execnt==
*当 当前调用[[code:exec|exec]]的进程过多，则睡眠
*参看[[code:exec|exec]]

==struct proc==
*当前进程 在等待子进程结束
*参看[[code:wait|wait]]

==ipc==
*因 等待 [[code:ipc|ipc]] 可用/请求完成 而睡眠
*参看[[code:ptrace|ptrace]]

==struct clist==
*因 等待 I/O字符缓存队列 而睡眠
*参看 [[字符设备管理]]

==lbolt==
*需要等待较长时间才进行的事务处理，一般用于与外设同步，如在pc-11驱动函数pcopen中使用
*参看 [[code:clock|clock]] pcopen</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 睡眠原因 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>程序统计直方图</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*UNIX 使用 程序设计直方图 来统计程序运行时指令的运行状况
*程序直方图基本原理&lt;br/&gt;将不同 代码块 映射到 统计数组，时钟中断到来，将当前执行的指令对应的统计元素+1
*用户使用 系统调用 [[code:profil|profil]] 来启用统计
*程序统计直方图 的参数 存放在[[code:user|u.u_prof[]]]中
**[[code:user|u.u_prof[0]]] : 统计数组的起始地址
**[[code:user|u.u_prof[1]]] : 统计数组的长度
**[[code:user|u.u_prof[2]]] : 基准pc (映射时 使用当前pc对于基准pc的偏移量 作为映射标准)
**[[code:user|u.u_prof[3]]] : 缩放比例&lt;br/&gt;(实际比例为 (u.u_prof[3] / 0xffff)条指令 : 1个统计数组元素)
*时钟中断 [[code:clock|clock]] 参与统计程序直方图</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 程序统计直方图 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>空闲块管理</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*对于管理 内存和盘交换区的空间分配、释放，主要采用对空闲块信息进行管理的方法
*采用表示空闲块信息的数组，作为用于管理的数据结构
*如需分配空间，则在管理数组中移除被分配空间的信息，即标记该部分不空闲
*如需释放空间，则在管理数组中插入被分配空间的信息，即标记该部分空闲

=用于管理的数据结构=
*对于内存采用coremap数组进行管理
*对于盘交换区采用swapmap数组进行管理
*coremap 和 swapmap 定义在 [[file:systm.h|systm.h]]中,定义为
&lt;div class="wikiheadcode"&gt;
0203 int coremap[CMAPSIZ]; /* space for core allocation */&lt;br/&gt;
0204 int swapmap[SMAPSIZ]; /* space for swap allocation */&lt;br/&gt; 
&lt;/div&gt;
* CMAPSIZ和 SMAPSIZ 定义在 [[file:param.h|param.h]]中,定义为
&lt;div class="wikiheadcode"&gt;
0141 #define CMAPSIZ 100 /* size of core allocation area */ &lt;br/&gt;
0142 #define SMAPSIZ 100 /* size of swap allocation area */ &lt;br/&gt;
&lt;/div&gt;
*coremap 和 swapmap的实际类型为 [[code:struct map|struct map]],实际长度为 CMAPSIZ/2 和 SMAPSIZ/2
:以coremap为例
::coremap[0] 和 coremap[1] 分别为第一个空闲块信息的m_size 和 m_addr
::coremap[2] 和 coremap[3] 分别为第二个空闲块信息的m_size 和 m_addr
::...
::coremap[98] 和 coremap[99] 分别为第五十个空闲块的m_size 和 m_addr

=管理策略=
*对于分配空间的请求,查找第一个不小于请求空间大小的块并进行分配,并优化管理数组
*对于释放空间的请求,向管理数组中插入待释放空间的信息,并优化管理数组
*管理数组的优化策略
**合并能合并的块信息
**删除长度为零的块信息
=用于管理的函数=
*[[code:malloc|malloc]] 进行分配
*[[code:mfree|mfree]] 进行释放
=举例=
参见 [[code:malloc|malloc]] 和 [[code:mfree|mfree]] 的举例
=参考=
*[[code:malloc|malloc]]
*[[code:mfree|mfree]]
*[[file:systm.h|systm.h]]
*[[file:param.h|param.h]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 空闲块管理 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>管道</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=概述=
*管道(pipe) 是 UNIX 进程间通讯的一种方式
*原理参看 [[参考文献|参考文献 之 UNIX操作系统教程]]
=相关函数=
*[[code:pipe|pipe]]
*[[code:readp|readp]]
*[[code:writep|writep]]
=管道生成时的数据结构=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pipe_data_structure.png"/></p>

=管道通讯时的数据结构=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Pipe_data_structure_2.png"/></p>

=参考=
*[[参考文献|参考文献 之 UNIX操作系统教程]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 管道 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>系统初启</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=系统初启的过程=
==预备工作==
*将操作系统的源代码逐一编译后连接到一起构成一个单一的目标文件,然后存放在根目录下的/unix文件中
*将硬件引导装入程序的地址设置到开关寄存器
==非操作系统完成的初启部分==
*按下启动键
*启动存放在只读存储器中的第一级引导程序,将存放在根存储设备上的0#块装入内存,该块中包含了第二级引导程序
*第二级引导程序查找名为"/unix"的文件并将其装入内存低地址区
*从内存0#地址启动该系统,由unix系统自己来进行其他的初启工作
==操作系统完成的初启部分==
*0#内存单元中存放的是一条转移指令([[file:low.s|low.s]]文件的第508行),转移到[[file:low.s|low.s]]文件的522行,执行系统引导程序[[code:start|start]],这是一段汇编代码
*[[code:start|start]]函数在进行了一些初始化处理后又转入一段c语言程序[[code:main|main]],对系统进行进一步初始化
*系统在初启的过程中生成了0#进程与1#进程两个系统最初始的进程,这正是我们接下来要讨论的问题
=初始进程=
==0#进程==
*0#进程的产生过程:
**在[[code:start|start]]中KISA6被指向用户可用内存区域的起始位置,并扫清了该区域,用以存放0#进程的PPDA区,并为其初始化了栈顶指针
**在[[code:main|main]]中为[[code:struct proc|proc]][0]设置相应参数,并将其置为0#进程的[[code:struct proc|proc]]结构
**可以说0#进程是由系统强制生成的,它没有父进程
*0#进程的作用:
**1.产生1#进程
**2.执行进程图像调度函数[[code:sched|sched]]
*[[code:sched|sched]]函数不会有返回.除非操作系统程序终结,否则0#进程不会终止,它总是在需要进行[[进程调度]]时被唤醒,完成任务后又进入睡眠状态
==1#进程==
*1#进程由0#进程在[[code:main|main]]函数中产生,它是1#进程的子进程
*1#进程在生成后改换图像转而执行/etc/init程序,它的主要作用是为每个终端创建一个子进程
*1#进程在为每个终端创建完子进程后进入睡眠状态,系统初启到此结束
*1#进程会在某一终端子进程终止时被唤醒,重新为该终端生成一个进程</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 系统初启 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>系统调用</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=系统调用入口=
*参看[[file:sysent.c|sysent.c]]
=系统调用表=

{===Class==="wikitable" border="1" cellspacing="0" align="center" style="width:50%"
!编号
!系统调用
!内核对应函数
|-
|0
|indir
|[[code:nullsys|nullsys]]
|-
|1
|exit
|[[code:rexit|rexit]]
|-
|2
|fork
|[[code:fork|fork]]
|-
|3
|read
|[[code:read|read]]
|-
|4
|write
|[[code:write|write]]
|-
|5
|open
|[[code:open|open]]
|-
|6
|close
|[[code:close|close]]
|-
|7
|wait
|[[code:wait|wait]]
|-
|8
|creat
|[[code:creat|creat]]
|-
|9
|link
|[[code:link|link]]
|-
|10
|ulink
|[[code:unlink|unlink]]
|-
|11
|exec
|[[code:exec|exec]]
|-
|12
|chdir
|[[code:chdir|chdir]]
|-
|13
|time
|[[code:gtime|gtime]]
|-
|14
|mknod
|[[code:mknod|mknod]]
|-
|15
|chmod
|[[code:chmod|chmod]]
|-
|16
|chown
|[[code:chown|chown]]
|-
|17
|break
|[[code:sbreak|sbreak]]
|-
|18
|stat
|[[code:stat|stat]]
|-
|19
|seek
|[[code:seek|seek]]
|-
|20
|getpid
|[[code:getpid|getpid]]
|-
|21
|mount
|[[code:smount|smount]]
|-
|22
|unmount
|[[code:sumount|sumount]]
|-
|23
|setuid
|[[code:setuid|setuid]]
|-
|24
|getuid
|[[code:getuid|getuid]]
|-
|25
|stime 
|[[code:stime|stime]]
|-
|26
|ptrace
|[[code:ptrace|ptrace]]
|-
|28
|fstat
|[[code:fstat|fstat]]
|-
|30
|smdate(已经禁用)
|[[code:smdate|smdate]]
|-
|31
|stty
|[[code:stty|stty]]
|-
|32
|gtty 
|[[code:gtty|gtty]]
|-
|34
|nice
|[[code:nice|nice]]
|-
|35
|sleep
|[[code:sslep|sslep]]
|-
|36
|sync 
|[[code:sync|sync]]
|-
|37
|kill
|[[code:kill|kill]]
|-
|38
|switch 
|[[code:getswit|getswit]]
|-
|41
|dup
|[[code:dup|dup]]
|-
|42
|pipe
|[[code:pipe|pipe]]
|-
|43
|times
|[[code:times|times]]
|-
|44
|prof
|[[code:profil|profil]]
|-
|45
|tui
|[[code:nosys|nosys]]
|-
|46
|setgid
|[[code:setgid|setgid]]
|-
|47
|getgid
|[[code:getgid|getgid]]
|-
|48
|sig
|[[code:ssig|ssig]]
|}

=直接/间接系统调用=
直接系统调用 和 间接系统调用 在编译结构上存在一定区别，如图
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Direct_indirect_sys_call.png"/></p>
=系统调用的参数传递=
*系统调用的一些参数，送入R0、R1&lt;br/&gt;R0、R1被保护入栈，由 [[skill:u.u_ar0|u.u_ar0]]指向
*其余参数，送入[[code:user|u.u_arg[]]]
*具体的系统调用 如何进行参数传递，参看具体的系统调用说明</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 系统调用 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>系统调用:fork</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=父/子进程执行路径=
*fork 编译代码 和 运行路径 如下图
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Code_fork_path.png"/></p>
*父进程 运行 跳过 clr r0，不清除 返回值
*子进程 运行 清除 返回值
*故，子进程 fork()返回0，而父进程fork()返回子进程进程号
=源代码=
*[[code:fork|fork]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 系统调用:fork by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>编程技巧</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[Skill:编程技巧]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 编程技巧 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>自由字符缓存队列</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>#REDIRECT [[字符设备管理]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 自由字符缓存队列 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>自由队列</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*结构
**全局定义了 bfreelist 作为自由队列的队列头 ,定义在[[file:buf.h|buf.h]]&lt;div class="wikiheadcode"&gt;4567 struct buf bfreelist; &lt;/div&gt;
**每个队列元素 为[[code:struct buf|struct buf]]结构
**[[code:struct buf|struct buf]]结构 定义了队列指针av-forw,av-back
**以上结构形成双链表队列,例如 举例图
*插入/取出元素
**取出元素从队首取出
**插入元素从队尾插入,以让buf尽可能长的维持原状,方便重复使用
=设备队列=
举例&lt;br/&gt;
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Bfreelist.png"/></p>

=参考=
[[设备缓存管理]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 自由队列 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>设备I/O队列</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*结构
**每个块设备 都有一个 [[code:struct devtab|struct devtab]]描述这个设备的缓存队列状况
**[[code:struct devtab|struct devtab]] 结构定义了队列头d-actf,d-actl
**每个队列元素 为[[code:struct buf|struct buf]]结构
**[[code:struct buf|struct buf]]结构 定义了队列指针av_forw
**以上结构形成但链表队列,例如 举例图
*插入/取出元素
**取出元素从队首取出
**插入元素从队尾插入
**形成先进先出队列
=设备队列=
举例&lt;br/&gt;
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/IO_queue.png"/></p>

=参考=
[[设备缓存管理]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 设备I/O队列 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>设备缓存管理</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*为了减少对 存储块设备 的读写次数,提高读写效率,对设备读写采取缓存机制
*通过三个图解说明 缓存管理机制
**[[设备缓存管理#缓存机制图解|缓存机制图解]]
**[[设备缓存管理#数据结构|数据结构]]
**[[设备缓存管理#标志位改变图解|标志位改变图解]]

=主要函数/数据结构=
*[[code:bdevsw|bdevsw]]
*[[code:struct devtab|struct devtab]]
*[[code:struct buf|struct buf]]
*[[code:bread|bread]]
*[[code:breada|breada]]
*[[code:bwrite|bwrite]]
*[[code:bdwrite|bdwrite]]
*[[code:bawrite|bawrite]]
*[[code:brelse|brelse]]
*[[code:incore|incore]]
*[[code:getblk|getblk]]
*[[code:iowait|iowait]]
*[[code:notavil|notavil]]
*[[code:iodone|iodone]]
*[[code:binit|binit]]

=缓存机制图解=
*对设备缓存总体机制作以说明
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Read_write_disk.png"/></p>
=数据结构=
*说明设备缓存 的物理结构
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Buf_structure.png"/></p>
*[[code:bdevsw|bdevsw]]
*[[code:struct devtab|struct devtab]]
*[[File:buf.h|bfreelist]]
*[[code:struct buf|struct buf]]
*[[File:bio.c|buffers]]
*[[设备队列]]
*[[设备I/O队列]]
*[[设备队列#NODEV设备队列|NODEV设备队列]]
*[[自由队列]]
=标志位改变图解=
*设备缓存块 都具有标志位，从标志位的改变可以看出整个运行流程
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Buf_signals.png"/></p>
=参考=
*[[设备队列]]
*[[设备队列|NODEV设备队列]]
*[[设备I/O队列]]
*[[自由队列]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 设备缓存管理 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>设备队列</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*结构
**每个块设备 都有一个 [[code:struct devtab|struct devtab]]描述这个设备的缓存队列状况
**[[code:struct devtab|struct devtab]] 结构定义了队列头b-forw,b-back
**每个队列元素 为[[code:struct buf|struct buf]]结构
**[[code:struct buf|struct buf]]结构 定义了队列指针b-forw,b-back
**以上结构形成双链表队列,例如 举例图
*插入/取出元素
**取出元素从队首取出
**插入元素从队首插入,以取得最新入队的元素(最新入队的缓存最有可能被重复使用)
=设备队列=
举例&lt;br/&gt;
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Dev_buffer.png"/></p>

=NODEV设备队列=
*NODEV是一个特殊的设备,表示无设备
*队列头 为 bfreelist,bfreelist同时作为[[自由队列]]的队列头
*队列举例如图&lt;br/&gt;<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Nodev_dev_buffer.png"/></p>

=参考=
[[设备缓存管理]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 设备队列 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>跟踪</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=原理=
*跟踪原理如图
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/main_trace.png"/></p>
*1] 子进程 调用 [[code:ptrace|ptrace(0,0,0,0)]]，提出跟踪许可，允许父进程跟踪，子进程继续运行
*2] 到了 子进程 检测信号的时机，子进程开始处理跟踪，调用[[code:stop|stop]]
*3] [[code:stop|stop]]
*4] 子进程 暂停，置SSTOP，等待切换到父进程
*5] 父进程 调用 [[code:ptrace|ptrace(0,0,0,0)]]，向子进程提出跟踪要求
*6] 父进程 进入睡眠，等待子进程处理跟踪要求
*7] 子进程 [[code:procxmt|procxmt]] 处理跟踪要求&lt;br/&gt; 唤醒父进程，等待父进程响应
*从3] - 7]，构成 一个跟踪过程，不断循环
=相关函数=
*[[code:ptrace|ptrace]]
*[[code:procxmt|procxmt]]
*[[code:stop|stop]]
*[[code:wait|wait]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 跟踪 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>进程优先级</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
*每个进程都有优先级 p-nice ,定义在 [[code:proc|proc]]
*范围在 +127 ~ -128
*p-nice 越小，优先级越高

=优先级常量=
定义在 [[file:param.h|param.h]] 中

{===Class==="wikitable" border="1" cellspacing="0" align="center" style="width:80%"
!常量
!值
!简述
|-
| PSWP
| -100
|
|-
| PINOD
| -90
|
因等待 使用磁盘超级块的空闲块数组 而睡眠的进程的优先级
|-
| PRIBIO
| -50
| 因等待I/O操作而睡眠的进程的优先级
|-
| EXPRI
| -1
| 睡眠在[[睡眠原因#execnt|execnt]]上的进程的优先级
|-
| IPCPRI
| -1
| 因等待 [[code:ipc|ipc]] 而睡眠的进程的优先级
|-
| PPIPE
| 1
| 因等待使用管道而睡眠的进程的优先级
|-
| TTOPRI
| 20
| 等待 字符I/O输出缓存队列 的进程的优先级
|-
| PWAIT
| 40
| 等待子进程结束的进程的优先级
|-
| PSLEP
| 90
| 调用[[code:sslep|系统调用sslep]]，因[[睡眠原因#tout|tout]]而睡眠的进程的优先级
|-
| PUSER
| 100
|
|}

=睡眠优先级=
进程睡眠时赋予的优先级，唤醒后，进程在此优先级上运行&lt;br/&gt;
*分为以下两种
**低优先权睡眠(SWAIT)
**高优先权睡眠(SSLEEP)
*之所以分为两类优先权睡眠，在进程图像调度([[code:sched|sched]])中，有不同对待</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 进程优先级 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>进程图像</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>{===Align===right
|__TOC__
|}
=综述=
每个进程都有如下结构
*常驻内存部分
**[[code:proc|proc结构]]
**[[code:text|共享正文段的控制块 text结构]]
*非常驻内存部分 (可以被交换到盘交换区)
**PPDA区
***[[code:user|user结构]]
***[[核心栈]]
**[[数据段]]
**[[用户栈]]
**[[共享正文段]]
:([[code:user|user结构]] 、 [[核心栈]] 、 [[数据段]] 、 [[用户栈]] 在物理地址上是连续的)
=各结构间关系=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Proc_text_ppda.png"/></p>
=现行进程的联系线=
*[[KISA|KISA6]] 指向 现行进程的PPDA区
*通过PPDA区[[code:user|user]]结构的u_procp ，指向[[code:proc|proc]]结构
*通过[[code:proc|proc]]结构的p-textp，指向text结构
*通过[[code:text|text]]结构 x-daddr/x-caddr ，找到共享正文段</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 进程图像 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>进程状态</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=进程状态转换=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/Proc_stat.png"/></p>
*SRUN → SSLEEP/SWAIT ，参看[[code:sleep|sleep]]
*SSLEEP/SWAIT → SRUN ，参看[[code:wakeup|wakeup]]
*SRUN → SZOMB ，参看[[code:exit|exit]]
*SRUN ←→ SSTOP ，参看[[跟踪]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 进程状态 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>进程调度</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=概述=
=runrun=
*全局变量 runrun，是申请[[进程调度]]的标志
&lt;br/&gt;
*置runrun的时机
**[[code:setpri|setpri]] 中 计算进程优先级 小于 现行进程 时置runrun&lt;br/&gt;这种情况很诡异，在下面单独说明
**[[code:clock|clock]] 中 每4秒 强制置runrun
**[[code:setrun|setrun]] 唤醒进程优先级 高于 现行进程，置runrun&lt;br/&gt;(唤醒进程 比 现行进程更重要)
&lt;br/&gt;
*关于 [[code:setpri|setpri]]中置runrun情况 的说明&lt;br/&gt;(不得不承认这种情况确实诡异)
**调用[[code:setpri|setpri]]的时机
***[[code:trap|trap]](陷入) 末尾 调用[[code:setpri|setpri]]重算 现行进程优先数
***[[code:clock|clock]] 整秒处理中 先前态为用户态，重算 现行进程优先数
***[[code:clock|clock]] 整秒处理中 重算所有进程优先数
**对于 重算 现行进程优先数，可以理解为现行进程自谦，当现行进程优先级在降低，自主申请调度
**对于 重算 其他进程优先数，的确是突破了逻辑的极限，个人认为是[[code:setpri|setpri]]的错误(就是懒得再写一个setpri了)，但是这种错误后果不是很严重，只是增加了调度的次数

=0#进程=
*参看[[系统初启]]

=进程图像的交换策略=
主要由 [[code:sched|sched]] 完成
*找到盘交换区上 进程状态为SRUN 且 驻留时间最长 的进程(称为调入进程)
**若没找到，则睡眠在[[睡眠原因|runout]]，唤醒后重新进行整个过程
**若找到，则
***若 能从内存分配足够的空间，则从 盘交换区 载入进程图像 到内存，重新进行整个过程
***若 不能从内存分配空间，则继续进行
*从内存 找到 状态为SWAIT或SSTOP 且 不含SYS或SLOCK标志 的进程(称为调出进程)
**若找到，则 将该进程 从内存 调出到 盘交换区，重新进行整个过程
**若找不到，则继续
*若 调入进程 的驻留时间小于3秒，则睡眠在[[睡眠原因|runin]]，唤醒后重新进行整个过程；否则继续
*从内存 找到 状态为SRUN或SSLEEP 且 驻留时间最长 的进程（称为调出进程2）
**若找不到，则睡眠在[[睡眠原因|runin]]，唤醒后重新进行整个过程
**若找到，则
***若 调出进程2 的驻留时间小于2秒，则睡眠在[[睡眠原因|runin]]，唤醒后重新进行整个过程
***否则，继续
*将 调出进程2 从内存 调出到 盘交换区，重新进行整个过程

=优先数计算=
*公式:
**[[code:struct proc|p-&gt;pri]] =min{127, ([[code:struct proc|p-&gt;p_cpu]] & 0377)/16 + PUSER + [[code:struct proc|p-&gt;nice]]}
*说明:
**1.[[code:struct proc|p-&gt;pri]] 最大值限制127,因为它是char型的,变化范围为127 ~ -128
**2.PUSER定义在[[file:param.h|param.h]]的第160行,值为100
**3.[[code:struct proc|p-&gt;nice]]可以被设置,对于一般用户的变化范围是0 ~ 20,对于超级用户的变化范围是 -128 ~ 20

=创建子进程=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/main_new_proc.png"/></p></td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 进程调度 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>遗留问题</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>*[[Pdp11:SBC]]中标志位C的改变与常识不符
*[[Pdp11:SBC]]中标志位V的改变与原文不符,原文有纰漏
*[[Pdp11:SXT]]中标志位Z的清位未有源文档
*[[Pdp11:MOV]]中关于MOVB的一段话难翻译
*[[Pdp11:CMP]]中标志位C的改变与常识不符
*[[Pdp11:SUB]]中标志位C的改变与常识不符
*[[pdp11:汇编指令]]符号约定 XXX符号约定难翻译
*[[Pdp11:MUL]]原文不清楚
*[[pdp11:DIV]]中标志位V的清位未有原文档
*[[Pdp11:ASHC]]中描述对于寄存器地址为单地址的情况，未翻译
*[[pdp11:JMP]]中描述节未翻译
*[[pdp11:JSR]]中描述节关于地址部分未翻译
*[[pdp11:RTS]]中描述节关于地址部分未翻译
*[[pdp11:Trap]]未完成
*[[pdp11:EMT]]不常用，未填写
*[[pdp11:BPT]]描述由于无法理解，未翻译
*[[pdp11:HALT]] [[pdp11:RESET]] 由于不常用，未填写
*[[pdp11:MFPI]]操作原文不合逻辑,翻译纠正;原文描述未理解,未翻译
*[[pdp11:MTPI]]原文描述未理解,未翻译
*[[code:putchar]]中的代码2391未成功解释
*[[code:getblk]]中的代码第4925行,声明了外部变量lbolt,用途不明
*[[code:breada]]的讨论问题
*[[Rk磁盘交叉存储]]不作讨论
*[[code:rkintr]] 5455 - 5456
*[[code:free]] 7005 行无法解释
*[[code:namei]] 7609 行无法解释
*[[code:nofault|nofault]] 压栈无法解释
*[[code:copyseg|copyseg]]701,702行,从堆栈中取值,与应该取得的值有偏差,无法解释
*[[code:newproc|newproc]]1883行,为什么要将[[code:user|u.u_cdir]]-&gt;i_count++,子进程会新产生[[code:struct file|file结构]]?
*[[code:open1|open1]] 5832行，意图不明
*[[code:openi|openi]] 意图不明
*[[code:clock|clock]] 3734 必要性不明,3803 含义不明
*[[code:exec|exec]] 一大堆的遗留问题...
*[[code:openi|openi]] [[code:closei|closei]] 中rw含义不明
*[[code:closef|closef]] 6656 标志位参数 含义不明
*[[code:rexit|rexit]] 3208 为什么左移8位,含义不明
*[[code:wait|wait]] 对于SSTOP的子进程的处理，含义不明
*[[code:ssig|ssig]]第3625 3626行意义不明
*[[code:procxmt|procxmt]] 4213 唤醒父进程 正确性不明；4247 意图不明
*[[code:putc|putc]] 961 含义不明
*[[code:ttyinput|ttyinput]] 8353 折腾的原因不明
*[[code:ttwrite|ttwrite]] 8562行,置ASLEEP标识位的意义不明
*[[code:klrint|klrint]] 8085 诡异
*[[code:dump|dump]] 未读懂
*[[code:dump|dump]] 入口 不明
*[[code:backup|backup]] 未读懂,功能按LIONS代码分析说明
*[[进程调度]] 存在未完成
*[[code:main|main]]1599,1600行,用意不明
*[[code:smount|smount]] 6113 参数不明</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 遗留问题 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>错误代码</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=综述=
Unix代码通过设置[[code:user|u.u_error]]的方法来向调用函数返回错误代码

==错误代码==
定义在[[file:user.h|user.h]]
{===Class==="wikitable" border="1" cellspacing="0" align="center" style="width:50%"
!width=20%|错误名
!width=20%|值
!含义
|-
|EPERM
|1
|当前用户不是超级用户
|-
|ENOENT
|2
|企图对根目录进行操作&lt;br/&gt;欲添加已存在的目录项,参看[[code:namei|namei]]
|-
|ESRCH
|3
|未找到 匹配进程
|-
|EINTR 
|4
|系统调用 嵌套错误
|-
|EIO
|5
|IO错误
|-
|ENXIO
|6
|设备号越界
|-
|E2BIG
|7
|[[code:exec|exec]] 中 参数过长
|-
|ENOEXEC 
|8
|[[code:exec|exec]] 含义不明...
|-
|EBADF 
|9
|关于文件结构[[code:struct file|struct file]]的错误
|-
|ECHILD
|10
|不存在子进程
|-
|EAGAIN
|11
|PROC 表 没有空闲项
|-
|ENOMEM 
|12
|没有足够的内存空间
|-
|EACCES 
|13
|文件 执行权限 验证错误，参看[[code:access|access]]
|-
|ENOTBLK
|15
|INODE 不是 块设备装载INODE，参看[[文件系统#装载文件系统]]
|-
|EBUSY
|16
|装载子文件系统 抛出错误，参看[[code:smount|smount]]&lt;br/&gt;内存INODE表中存在对应于待卸载文件系统的inode,无法卸载 参看[[code:sumount|sumount]] 
|-
|EEXIST
|17
|欲创建的目录项 已经存在
|-
|EXDEV
|18
|文件别名 跨越 设备
|-
|ENODEV
|19
|无效设备函数
|-
|ENOTDIR 
|20
|目录搜索时匹配的并不是目录项
|-
|EISDIR
|21
|写文件时INODE为目录INODE，见[[code:open1|open1]]
|-
|EINVAL
|22
|找不到当前装载文件系统对应的装载块,参看[[code:sumount|sumount]]&lt;br/&gt;信号类型号非法,参看[[code:ssig|ssig]]
|-
|ENFILE 
|23
|[[code:struct inode|INODE]]数组用尽&lt;br/&gt;[[code:struct file|file]]数组用尽
|-
|EMFILE
|24
|u_ofile数组用尽
|-
|ENOTTY 
|25
|指定的tty设备装载文件 不是 字符设备装载文件
|-
|ETXTBSY
|26
|尝试修改 作为程序正文的文件
|-
|EFBIG
|27
|文件块号越界
|-
|ENOSPC 
|28
|磁盘空间用尽&lt;br/&gt;INODE区用尽
|-
|ESPIPE
|29
|管道文件,无法seek,参看[[code:seek|seek]]
|-
|EROFS
|30
|尝试写 只读的文件系统
|-
|EMLINK
|31
|文件勾连数 超过限制
|-
|EPIPE
|32
|管道错误
|-
|EFAULT
|106
|从 指定地址空间获取内容 失败
|}</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 错误代码 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>

<tr>
	<td>open</td>
	<td>/ikarishinjieva/unixV6-code-analyze-chs/wiki/_pages</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=New Page</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-dialog-dialog-generated-field-name</td>
	<td>首页</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-dialog-action-ok</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-body</td>
	<td>=导读=
*本wiki是关于Unix V6 on Pdp11/40 的源代码分析，请尊重作者版权
*源代码原本 参照 Lions 源代码([[参考文献]])，对于其中的错误有部分修正&lt;br/&gt;由于水平所限，有些部分定有纰漏，请指正
*阅读索引
**[[代码行表]]，按照 LIONS源代码行标 生成的函数列表
**[[数据字典]]，对于 常用的名称(如 [[code:user|user]])等，可能会遗漏链接([[code:user|user]]出现的实在太多了...)&lt;br/&gt;可在[[数据字典]]中查找常用名称及链接
**[[参考文献]]，列出了主要的参考文献
**[[遗留问题]]，遗留下很多问题（源代码实在纠结，请大家理解...），欢迎大家讨论
**机制，对于运行机制的说明(基于源代码)，只对源代码涉及到突出的问题进行说明，更详细更结构化的说明参看 [[参考文献]]
*源代码分析 基础
**源代码分析 假设 阅读者有基础的Unix操作系统常识（[[参考文献]]中 尤晋元老师的书 一定要看过）
**源代码分析 有一部分依赖于LIONS源代码分析（会标注出来）&lt;br/&gt;有些观点 与LIONS源代码分析有悖，属个人观点，请权衡选用
**对于 重要的函数，源代码分析 均采用 "奶爸流"&lt;br/&gt;对于比较容易的部分，说明较为简略
**对于一些解释不了的现象，以[[pdp11虚拟机]]实验结果为准
**对于 编译器做的工作（如 [[系统调用]]的参数传递过程）不做说明
**对于 外设寄存器 不做完全说明，请阅读[[参考文献]] 的 外设手册
**外设驱动 仅以 RK磁盘 和 tty终端 为例，其余驱动不予分析(道理大同小异...)
**有两大块代码并未分析(与系统相关太紧密，代码太诡异，实在是看不懂...)
***[[code:backup|backup]]
***[[code:dump|dump]]
*有 建议、对源代码分析的补充、修正 以及 相亲资料，请联系[[作者]]

=索引=
*[[代码行表]]
*[[数据字典]]
*[[参考文献]]
*[[遗留问题]]
*[[作者]]
=机制=
<p><img src="http://ikarishinjieva.github.io/unixV6-code-analyze-chs/images/All.png|frame|right|这张图只标注了部分主要的机制，为了方便理解"/></p>
*基本结构
**[[pdp11:寄存器]]
**[[pdp11:处理机状态字]]
**[[时钟]]
*内存
**[[内存管理]]
**[[pdp11:内存管理]]
***[[pdp11:页地址寄存器]]
***[[pdp11:页说明寄存器]]
***[[pdp11:寻址方式]]
**[[KISA6寻址]]
*进程
**[[进程图像]]
**[[进程优先级]]
**[[进程状态]]
**[[进程调度]]
*文件
**[[文件系统]]
**[[内存打开文件结构]]
*中断
**[[中断]]
**[[中断处理的现场保护]]
*信号
**[[信号系统]]
**[[跟踪]]
*设备
**[[字符设备管理]]
**[[设备缓存管理]]
**[[RK磁盘]]
*系统
**[[系统调用]]
**[[系统初启]]
**[[权限管理]]
**[[程序统计直方图]]
**[[管道]]
**[[错误代码]]
*源代码技巧/解释
**[[skill:r0传递函数]]
**[[KISA6寻址]]
**[[汇编函数调用的现场保护]]
**[[函数调用的现场保护]]
*[[pdp11虚拟机]]</td>
</tr>
<tr>
	<td>select</td>
	<td>id=wiki_format</td>
	<td>label=MediaWiki</td>
</tr>
<tr>
	<td>type</td>
	<td>id=gollum-editor-message-field</td>
	<td>import page 首页 by Tac</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=gollum-editor-submit</td>
	<td></td>
</tr>


</tbody></table>
</body>
</html>
